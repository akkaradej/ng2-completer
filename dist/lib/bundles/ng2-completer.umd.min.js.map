{"version":3,"sources":["ng2-completer.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng2","completer","ng","core","Rx","Observable","prototype","common","http","forms","this","operators","__extends","d","b","__","constructor","extendStatics","Object","create","isFunction","x","hostReportError","err","setTimeout","isObject","tryCatcher","tryCatchTarget","apply","arguments","e","errorObject","tryCatch","fn","UnsubscriptionErrorImpl","errors","Error","call","message","length","map","i","toString","join","name","flattenUnsubscriptionErrors","reduce","errs","concat","UnsubscriptionError","canReportError","observer","_a","closed_1","closed","destination","isStopped","Subscriber","toSubscriber","nextOrObserver","error","complete","rxSubscriber","empty","noop","pipeFromArray","fns","input","prev","getPromiseCtor","promiseCtor","config","Promise","ObjectUnsubscribedErrorImpl","isScheduler","value","schedule","isNumeric","val","isArray","parseFloat","timer","dueTime","periodOrScheduler","scheduler","period","Number","async","subscriber","due","now","dispatch$7","index","state","next","isNil","setPrototypeOf","__proto__","Array","p","hasOwnProperty","_enable_super_gross_mode_that_will_cause_bad_things","undefined","useDeprecatedSynchronousErrorHandling","stack","Subscription","unsubscribe","_parent","_parents","_subscriptions","_unsubscribe","hasErrors","len","remove","trial","sub","push","add","teardown","EMPTY","subscription","_addParent","tmp","subscriptions","subscriptionIndex","indexOf","splice","parent","Symbol","Math","random","_super","destinationOrNext","_this","syncErrorValue","syncErrorThrown","syncErrorThrowable","_parentSubscription","SafeSubscriber","_next","_error","_complete","_unsubscribeAndRecycle","_parentSubscriber","observerOrNext","context","bind","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","observable","subscribe","_isScalar","_subscribe","lift","operator","observable$$1","source","sink","_trySubscribe","console","warn","forEach","resolve","reject","pipe","operations","_i","toPromise","ObjectUnsubscribedError","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscriber","Subject","hasError","thrownError","AnonymousSubject","copy","slice","asObservable","AsyncAction","work","pending","delay","id","recycleAsyncId","requestAsyncId","setInterval","flush","clearInterval","execute","_execute","errored","errorValue","actions","Action","Scheduler","SchedulerAction","Date","AsyncScheduler","delegate","active","scheduled","action","shift","MAX_CHARS","MIN_SEARCH_LENGTH","PAUSE","TEXT_SEARCHING","TEXT_NO_RESULTS","CompleterBaseData","_searchFields","_titleField","_descriptionField","_imageField","cancel","searchFields","titleField","descriptionField","imageField","convertToItem","data","formattedText","image","formattedDesc","extractTitle","JSON","stringify","extractValue","description","originalObject","title","extractMatches","term","split","filter","item","extractBySearchFields","some","toLowerCase","field","acc","titlePart","obj","key","keys","result","keys_1","processResults","matches","results","searchField","LocalData","dataSourceChange","EventEmitter","_data","savedTerm","catchError","res","search","emit","RemoteData","http$$1","_remoteUrl","remoteSearch","_urlFormater","_dataField","remoteUrl","urlFormater","dataField","requestOptions","_requestOptions","url","encodeURIComponent","get","assign","LocalDataFactory","decorators","type","Injectable","RemoteDataFactory","ctorParameters","HttpClient","CompleterService","localDataFactory","remoteDataFactory","local","remote","CtrCompleter","selected","highlighted","opened","list","dropdown","_hasHighlighted","_hasSelected","_cancelBlur","_isOpen","_autoHighlightIndex","registerList","registerDropdown","onHighlighted","onSelected","clearList","clear","onDataSourceChange","hasSelected","isOpen","selectCurrent","nextRow","prevRow","hasHighlighted","cancelBlur","isCancelBlur","open","defineProperty","set","enumerable","configurable","highlightRow","Directive","args","selector","propDecorators","Output","CtrRowItem","row","CtrDropdown","el","zone","rows","isScrollOn","_rowMouseDown","ngOnDestroy","ngAfterViewInit","css","getComputedStyle","nativeElement","autoHighlightIndex","maxHeight","overflowY","run","onMouseDown","event","registerRow","arrIndex","findIndex","_row","unregisterRow","rowIndex","currHighlighted","find","setHighlighted","getDataItem","rowTop","dropdownRowTop","dropdownScrollTopTo","getNativeElement","dropdownHeight","getBoundingClientRect","bottom","dropdownRowOffsetHeight","top","parseInt","rowMouseDown","nextRowIndex","offset","scrollTop","parentElement","offsetHeight","Host","ElementRef","NgZone","HostListener","CtrInput","ngModel","clearSelected","clearUnselected","overrideSuggested","fillHighlighted","openOnFocus","openOnClick","selectOnClick","selectOnFocus","ngModelChange","_searchStr","_displayStr","blurTimer","searchStr","valueChanges","keyupHandler","keyCode","preventDefault","restoreSearchValue","stopPropagation","pasteHandler","keydownHandler","which","handleSelection","ctrlKey","metaKey","altKey","onBlur","focus","take","doBlur","onfocus","select","onClick","NgModel","Input","CtrListContext","searching","searchInitialized","CtrList","templateRef","viewContainer","cd","ctrListMinSearchLength","ctrListPause","ctrListAutoMatch","ctrListAutoHighlight","ctrListDisplaySearching","_dataService","searchTimer","clearTimer","ctx","_initialValue","viewRef","ngOnInit","createEmbeddedView","newService","dataServiceSubscribe","initialItem","refreshTemplate","searchTimerComplete","_clear","dataService","destroyed","detectChanges","markForCheck","getBestMatchIndex","bestMatch","toLocaleLowerCase","startsWith","includes","TemplateRef","ViewContainerRef","ChangeDetectorRef","initialValue","CtrRow","renderer","_rowIndex","_item","onMouseEnter","setElementClass","Renderer","ctrRow","dataItem","CompleterListItemCmp","text","matchClass","parts","matchStr","matchPos","startIndex","matchText","isMatch","matchPart","Component","template","noop$1","COMPLETER_CONTROL_VALUE_ACCESSOR","multi","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","CompleterCmp","completerService","cdr","inputName","inputId","pause","minSearchLength","maxChars","placeholder","autoMatch","disableInput","autofocus","autoHighlight","blurEvent","click","focusEvent","keyup","keydown","control","FormControl","displaySearching","displayNoResults","_textNoResults","_textSearching","_onTouchedCallback","_onChangeCallback","_focus","_open","v","ngAfterViewChecked","ctrInput","onTouched","writeValue","registerOnChange","registerOnTouched","setDisabledState","isDisabled","onFocus","onKeyup","onKeydown","onChange","close","blur","styles","providers","fieldTabindex","inputClass","ViewChild","datasource","textNoResults","textSearching","Ng2CompleterModule","forRoot","ngModule","forChild","NgModule","declarations","imports","CommonModule","FormsModule","ɵa","ɵb"],"mappings":"CAAC,SAAUA,OAAQC,SACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,QAAQC,QAASE,QAAQ,iBAAkBA,QAAQ,kBAAmBA,QAAQ,wBAAyBA,QAAQ,kBAAmBA,QAAQ,oBACvL,mBAAXC,QAAyBA,OAAOC,IAAMD,QAAQ,UAAW,gBAAiB,iBAAkB,uBAAwB,iBAAkB,mBAAoBJ,SAChKA,SAASD,OAAOO,IAAMP,OAAOO,QAAWP,OAAOO,IAAIC,cAAgBR,OAAOS,GAAGC,KAAKV,OAAOW,GAAGC,WAAWC,UAAUb,OAAOS,GAAGK,OAAOC,KAAKf,OAAOS,GAAGO,MAAMhB,OAAOS,GAAGK,QAHtK,CAIEG,KAAM,SAAWf,QAAQQ,KAAKQ,UAAUH,KAAKC,MAAMF,QAAU,aAyB3D,SAASK,UAAUC,EAAGC,GAElB,SAASC,KAAOL,KAAKM,YAAcH,EADnCI,cAAcJ,EAAGC,GAEjBD,EAAEP,UAAkB,OAANQ,EAAaI,OAAOC,OAAOL,IAAMC,GAAGT,UAAYQ,EAAER,UAAW,IAAIS,IAInF,SAASK,WAAWC,GAChB,MAAoB,mBAANA,EAuBlB,SAASC,gBAAgBC,KACrBC,WAAW,WAAc,MAAMD,MAsBnC,SAASE,SAASJ,GACd,OAAY,MAALA,GAA0B,iBAANA,EAQ/B,SAASK,aACL,IACI,OAAOC,eAAeC,MAAMlB,KAAMmB,WAEtC,MAAOC,GAEH,OADAC,YAAYD,EAAIA,EACTC,aAGf,SAASC,SAASC,IAEd,OADAN,eAAiBM,GACVP,WAIX,SAASQ,wBAAwBC,QAM7B,OALAC,MAAMC,KAAK3B,MACXA,KAAK4B,QAAUH,OACXA,OAAOI,OAAS,4CAA8CJ,OAAOK,IAAI,SAAUjB,IAAKkB,GAAK,OAAOA,EAAI,EAAI,KAAOlB,IAAImB,aAAeC,KAAK,QAAU,GACzJjC,KAAKkC,KAAO,sBACZlC,KAAKyB,OAASA,OACPzB,KA8HX,SAASmC,4BAA4BV,QACjC,OAAOA,OAAOW,OAAO,SAAUC,KAAMxB,KAAO,OAAOwB,KAAKC,OAAQzB,eAAe0B,oBAAuB1B,IAAIY,OAASZ,UA6OvH,SAAS2B,eAAeC,UACpB,KAAOA,UAAU,CACb,IAAIC,GAAKD,SAAUE,SAAWD,GAAGE,OAAQC,YAAcH,GAAGG,YAAaC,UAAYJ,GAAGI,UACtF,GAAIH,UAAYG,UACZ,OAAO,EAGPL,SADKI,aAAeA,uBAAuBE,WAChCF,YAGA,KAGnB,OAAO,EAIX,SAASG,aAAaC,eAAgBC,MAAOC,UACzC,GAAIF,eAAgB,CAChB,GAAIA,0BAA0BF,WAC1B,OAAOE,eAEX,GAAIA,eAAeG,cACf,OAAOH,eAAeG,gBAG9B,OAAKH,gBAAmBC,OAAUC,SAG3B,IAAIJ,WAAWE,eAAgBC,MAAOC,UAFlC,IAAIJ,WAAWM,OAS9B,SAASC,QAGT,SAASC,cAAcC,KACnB,OAAKA,IAGc,IAAfA,IAAI3B,OACG2B,IAAI,GAER,SAAeC,OAClB,OAAOD,IAAIpB,OAAO,SAAUsB,KAAMnC,IAAM,OAAOA,GAAGmC,OAAUD,QANrDH,KA8Gf,SAASK,eAAeC,aAIpB,GAHKA,cACDA,YAAcC,OAAOC,SAAWA,UAE/BF,YACD,MAAM,IAAIlC,MAAM,yBAEpB,OAAOkC,YAIX,SAASG,8BAIL,OAHArC,MAAMC,KAAK3B,MACXA,KAAK4B,QAAU,sBACf5B,KAAKkC,KAAO,0BACLlC,KA+wBX,SAASgE,YAAYC,OACjB,OAAOA,OAAmC,mBAAnBA,MAAMC,SAq/BjC,SAASC,UAAUC,KACf,OAAQC,QAAQD,MAASA,IAAME,WAAWF,KAAO,GAAM,EAiE3D,SAASG,MAAMC,QAASC,kBAAmBC,gBACvB,IAAZF,UACAA,QAAU,GAEd,IAAIG,QAAU,EAUd,OATIR,UAAUM,mBACVE,OAASC,OAAOH,mBAAqB,GAAK,GAAKG,OAAOH,mBAEjDT,YAAYS,qBACjBC,UAAYD,mBAEXT,YAAYU,aACbA,UAAYG,OAET,IAAIlF,WAAW,SAAUmF,YAC5B,IAAIC,IAAMZ,UAAUK,SACdA,SACEA,QAAUE,UAAUM,MAC5B,OAAON,UAAUR,SAASe,WAAYF,KAClCG,MAAO,EAAGP,OAAQA,OAAQG,WAAYA,eAIlD,SAASG,WAAWE,OAChB,IAAID,MAAQC,MAAMD,MAAOP,OAASQ,MAAMR,OAAQG,WAAaK,MAAML,WAEnE,GADAA,WAAWM,KAAKF,QACZJ,WAAWlC,OAAf,CAGK,IAAgB,IAAZ+B,OACL,OAAOG,WAAW3B,WAEtBgC,MAAMD,MAAQA,MAAQ,EACtBlF,KAAKkE,SAASiB,MAAOR,SA6NzB,SAASU,MAAMpB,OACX,YAAwB,IAAVA,OAAmC,OAAVA,MAnrF3C,IAqEIhD,eArEAV,cAAgB,SAASJ,EAAGC,GAI5B,OAHAG,cAAgBC,OAAO8E,iBAChBC,wBAA2BC,OAAS,SAAUrF,EAAGC,GAAKD,EAAEoF,UAAYnF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIqF,KAAKrF,EAAOA,EAAEsF,eAAeD,KAAItF,EAAEsF,GAAKrF,EAAEqF,MACpDtF,EAAGC,IAexBuF,qDAAsD,EACtD9B,QACAC,aAAS8B,EACTC,0CAA0C5B,OAClCA,QAC0B,IAAIvC,OACqGoE,MAKvIH,oDAAsD1B,OAE1D4B,4CACI,OAAOF,sDAUXtC,OACAT,QAAQ,EACRwC,KAAM,SAAUnB,SAChBf,MAAO,SAAUrC,KACb,GAAIgD,OAAOgC,sCACP,MAAMhF,IAGND,gBAAgBC,MAGxBsC,SAAU,cAIVkB,QAAUmB,MAAMnB,SAAW,SAAW1D,GAAK,OAAOA,GAAyB,iBAAbA,EAAEkB,QAQhER,aAAgBD,MA2BpBI,wBAAwB5B,UAA0BY,OAAOC,OAAOiB,MAAM9B,WACtE,IAAI2C,oBAAsBf,wBAGtBuE,aAA8B,WAC9B,SAASA,aAAaC,aAClBhG,KAAK4C,QAAS,EACd5C,KAAKiG,QAAU,KACfjG,KAAKkG,SAAW,KAChBlG,KAAKmG,eAAiB,KAClBH,cACAhG,KAAKoG,aAAeJ,aA+G5B,OA5GAD,aAAanG,UAAUoG,YAAc,WACjC,IACIvE,OADA4E,WAAY,EAEhB,IAAIrG,KAAK4C,OAAT,CAGA,IAAIF,GAAK1C,KAAMiG,QAAUvD,GAAGuD,QAASC,SAAWxD,GAAGwD,SAAUE,aAAe1D,GAAG0D,aAAcD,eAAiBzD,GAAGyD,eACjHnG,KAAK4C,QAAS,EACd5C,KAAKiG,QAAU,KACfjG,KAAKkG,SAAW,KAChBlG,KAAKmG,eAAiB,KAGtB,IAFA,IAAIjB,OAAS,EACToB,IAAMJ,SAAWA,SAASrE,OAAS,EAChCoE,SACHA,QAAQM,OAAOvG,MACfiG,UAAYf,MAAQoB,KAAOJ,SAAShB,QAAU,KAUlD,GARIxE,WAAW0F,gBACPI,MAAQlF,SAAS8E,cAAczE,KAAK3B,SAC1BqB,cACVgF,WAAY,EACZ5E,OAASA,SAAWJ,YAAYD,aAAamB,oBACzCJ,4BAA4Bd,YAAYD,EAAEK,SAAWJ,YAAYD,KAGzEiD,QAAQ8B,gBAGR,IAFAjB,OAAS,EACToB,IAAMH,eAAetE,SACZqD,MAAQoB,KAAK,CAClB,IAAIG,IAAMN,eAAejB,OACzB,GAAInE,SAAS0F,KAAM,CACf,IAAID,MAAQlF,SAASmF,IAAIT,aAAarE,KAAK8E,KAC3C,GAAID,QAAUnF,YAAa,CACvBgF,WAAY,EACZ5E,OAASA,WACT,IAAIZ,IAAMQ,YAAYD,EAClBP,eAAe0B,oBACfd,OAASA,OAAOa,OAAOH,4BAA4BtB,IAAIY,SAGvDA,OAAOiF,KAAK7F,OAMhC,GAAIwF,UACA,MAAM,IAAI9D,oBAAoBd,UAGtCsE,aAAanG,UAAU+G,IAAM,SAAUC,UACnC,IAAKA,UAAaA,WAAab,aAAac,MACxC,OAAOd,aAAac,MAExB,GAAID,WAAa5G,KACb,OAAOA,KAEX,IAAI8G,aAAeF,SACnB,cAAeA,UACX,IAAK,WACDE,aAAe,IAAIf,aAAaa,UACpC,IAAK,SACD,GAAIE,aAAalE,QAA8C,mBAA7BkE,aAAad,YAC3C,OAAOc,aAEN,GAAI9G,KAAK4C,OAEV,OADAkE,aAAad,cACNc,aAEN,GAAuC,mBAA5BA,aAAaC,WAA2B,CACpD,IAAIC,IAAMF,cACVA,aAAe,IAAIf,cACNI,gBAAkBa,KAEnC,MACJ,QACI,MAAM,IAAItF,MAAM,yBAA2BkF,SAAW,2BAK9D,OAHoB5G,KAAKmG,iBAAmBnG,KAAKmG,oBACnCO,KAAKI,cACnBA,aAAaC,WAAW/G,MACjB8G,cAEXf,aAAanG,UAAU2G,OAAS,SAAUO,cACtC,IAAIG,cAAgBjH,KAAKmG,eACzB,GAAIc,cAAe,CACf,IAAIC,kBAAoBD,cAAcE,QAAQL,eACnB,IAAvBI,mBACAD,cAAcG,OAAOF,kBAAmB,KAIpDnB,aAAanG,UAAUmH,WAAa,SAAUM,QAC1C,IAAI3E,GAAK1C,KAAMiG,QAAUvD,GAAGuD,QAASC,SAAWxD,GAAGwD,SAC9CD,SAAWA,UAAYoB,OAGlBnB,UAG6B,IAA9BA,SAASiB,QAAQE,SACtBnB,SAASQ,KAAKW,QAHdrH,KAAKkG,UAAYmB,QAHjBrH,KAAKiG,QAAUoB,QASvBtB,aAAac,MAAS,SAAUxD,OAE5B,OADAA,MAAMT,QAAS,EACRS,MAFU,CAGnB,IAAI0C,cACCA,aAtHsB,GA6H7B3C,aAAiC,mBAAXkE,OACNA,OAAO,gBACrB,kBAAkCC,KAAKC,SAGzCzE,WAA4B,SAAU0E,QAEtC,SAAS1E,WAAW2E,kBAAmBxE,MAAOC,UAC1C,IAAIwE,MAAQF,OAAO9F,KAAK3B,OAASA,KAMjC,OALA2H,MAAMC,eAAiB,KACvBD,MAAME,iBAAkB,EACxBF,MAAMG,oBAAqB,EAC3BH,MAAM7E,WAAY,EAClB6E,MAAMI,oBAAsB,KACpB5G,UAAUU,QACd,KAAK,EACD8F,MAAM9E,YAAcQ,MACpB,MACJ,KAAK,EACD,IAAKqE,kBAAmB,CACpBC,MAAM9E,YAAcQ,MACpB,MAEJ,GAAiC,iBAAtBqE,kBAAgC,CACnCA,6BAA6B3E,YAC7B4E,MAAMG,mBAAqBJ,kBAAkBI,mBAC7CH,MAAM9E,YAAc6E,kBACpBA,kBAAkBf,IAAIgB,SAGtBA,MAAMG,oBAAqB,EAC3BH,MAAM9E,YAAc,IAAImF,eAAeL,MAAOD,oBAElD,MAER,QACIC,MAAMG,oBAAqB,EAC3BH,MAAM9E,YAAc,IAAImF,eAAeL,MAAOD,kBAAmBxE,MAAOC,UAGhF,OAAOwE,MAuDX,OAzFAzH,UAAU6C,WAAY0E,QAoCtB1E,WAAWnD,UAAUwD,cAAgB,WAAc,OAAOpD,MAC1D+C,WAAWtC,OAAS,SAAU2E,KAAMlC,MAAOC,UACvC,IAAI2B,WAAa,IAAI/B,WAAWqC,KAAMlC,MAAOC,UAE7C,OADA2B,WAAWgD,oBAAqB,EACzBhD,YAEX/B,WAAWnD,UAAUwF,KAAO,SAAUnB,OAC7BjE,KAAK8C,WACN9C,KAAKiI,MAAMhE,QAGnBlB,WAAWnD,UAAUsD,MAAQ,SAAUrC,KAC9Bb,KAAK8C,YACN9C,KAAK8C,WAAY,EACjB9C,KAAKkI,OAAOrH,OAGpBkC,WAAWnD,UAAUuD,SAAW,WACvBnD,KAAK8C,YACN9C,KAAK8C,WAAY,EACjB9C,KAAKmI,cAGbpF,WAAWnD,UAAUoG,YAAc,WAC3BhG,KAAK4C,SAGT5C,KAAK8C,WAAY,EACjB2E,OAAO7H,UAAUoG,YAAYrE,KAAK3B,QAEtC+C,WAAWnD,UAAUqI,MAAQ,SAAUhE,OACnCjE,KAAK6C,YAAYuC,KAAKnB,QAE1BlB,WAAWnD,UAAUsI,OAAS,SAAUrH,KACpCb,KAAK6C,YAAYK,MAAMrC,KACvBb,KAAKgG,eAETjD,WAAWnD,UAAUuI,UAAY,WAC7BnI,KAAK6C,YAAYM,WACjBnD,KAAKgG,eAETjD,WAAWnD,UAAUwI,uBAAyB,WAC1C,IAAI1F,GAAK1C,KAAMiG,QAAUvD,GAAGuD,QAASC,SAAWxD,GAAGwD,SASnD,OARAlG,KAAKiG,QAAU,KACfjG,KAAKkG,SAAW,KAChBlG,KAAKgG,cACLhG,KAAK4C,QAAS,EACd5C,KAAK8C,WAAY,EACjB9C,KAAKiG,QAAUA,QACfjG,KAAKkG,SAAWA,SAChBlG,KAAK+H,oBAAsB,KACpB/H,MAEJ+C,WA1FoB,CA2F7BgD,cACEiC,eAAgC,SAAUP,QAE1C,SAASO,eAAeK,kBAAmBC,eAAgBpF,MAAOC,UAC9D,IAAIwE,MAAQF,OAAO9F,KAAK3B,OAASA,KACjC2H,MAAMU,kBAAoBA,kBAC1B,IAAIjD,KACAmD,QAAUZ,MAoBd,OAnBIjH,WAAW4H,gBACXlD,KAAOkD,eAEFA,iBACLlD,KAAOkD,eAAelD,KACtBlC,MAAQoF,eAAepF,MACvBC,SAAWmF,eAAenF,SACtBmF,iBAAmBjF,QAEf3C,YADJ6H,QAAU/H,OAAOC,OAAO6H,iBACDtC,cACnB2B,MAAMhB,IAAI4B,QAAQvC,YAAYwC,KAAKD,UAEvCA,QAAQvC,YAAc2B,MAAM3B,YAAYwC,KAAKb,SAGrDA,MAAMc,SAAWF,QACjBZ,MAAMM,MAAQ7C,KACduC,MAAMO,OAAShF,MACfyE,MAAMQ,UAAYhF,SACXwE,MA0GX,OAnIAzH,UAAU8H,eAAgBP,QA2B1BO,eAAepI,UAAUwF,KAAO,SAAUnB,OACtC,IAAKjE,KAAK8C,WAAa9C,KAAKiI,MAAO,CAC/B,IAAII,kBAAoBrI,KAAKqI,kBACxBxE,OAAOgC,uCAA0CwC,kBAAkBP,mBAG/D9H,KAAK0I,gBAAgBL,kBAAmBrI,KAAKiI,MAAOhE,QACzDjE,KAAKgG,cAHLhG,KAAK2I,aAAa3I,KAAKiI,MAAOhE,SAO1C+D,eAAepI,UAAUsD,MAAQ,SAAUrC,KACvC,IAAKb,KAAK8C,UAAW,CACjB,IAAIuF,kBAAoBrI,KAAKqI,kBACzBxC,sCAAwChC,OAAOgC,sCACnD,GAAI7F,KAAKkI,OACArC,uCAA0CwC,kBAAkBP,oBAK7D9H,KAAK0I,gBAAgBL,kBAAmBrI,KAAKkI,OAAQrH,KACrDb,KAAKgG,gBALLhG,KAAK2I,aAAa3I,KAAKkI,OAAQrH,KAC/Bb,KAAKgG,oBAOR,GAAKqC,kBAAkBP,mBAQpBjC,uCACAwC,kBAAkBT,eAAiB/G,IACnCwH,kBAAkBR,iBAAkB,GAGpCjH,gBAAgBC,KAEpBb,KAAKgG,kBAfuC,CAE5C,GADAhG,KAAKgG,cACDH,sCACA,MAAMhF,IAEVD,gBAAgBC,QAc5BmH,eAAepI,UAAUuD,SAAW,WAChC,IAAIwE,MAAQ3H,KACZ,IAAKA,KAAK8C,UAAW,CACjB,IAAIuF,kBAAoBrI,KAAKqI,kBAC7B,GAAIrI,KAAKmI,UAAW,CAChB,IAAIS,gBAAkB,WAAc,OAAOjB,MAAMQ,UAAUxG,KAAKgG,MAAMc,WACjE5E,OAAOgC,uCAA0CwC,kBAAkBP,oBAKpE9H,KAAK0I,gBAAgBL,kBAAmBO,iBACxC5I,KAAKgG,gBALLhG,KAAK2I,aAAaC,iBAClB5I,KAAKgG,oBAQThG,KAAKgG,gBAIjBgC,eAAepI,UAAU+I,aAAe,SAAUpH,GAAI0C,OAClD,IACI1C,GAAGI,KAAK3B,KAAKyI,SAAUxE,OAE3B,MAAOpD,KAEH,GADAb,KAAKgG,cACDnC,OAAOgC,sCACP,MAAMhF,IAGND,gBAAgBC,OAI5BmH,eAAepI,UAAU8I,gBAAkB,SAAUrB,OAAQ9F,GAAI0C,OAC7D,IAAKJ,OAAOgC,sCACR,MAAM,IAAInE,MAAM,YAEpB,IACIH,GAAGI,KAAK3B,KAAKyI,SAAUxE,OAE3B,MAAOpD,KACH,OAAIgD,OAAOgC,uCACPwB,OAAOO,eAAiB/G,IACxBwG,OAAOQ,iBAAkB,GAClB,IAGPjH,gBAAgBC,MACT,GAGf,OAAO,GAEXmH,eAAepI,UAAUwG,aAAe,WACpC,IAAIiC,kBAAoBrI,KAAKqI,kBAC7BrI,KAAKyI,SAAW,KAChBzI,KAAKqI,kBAAoB,KACzBA,kBAAkBrC,eAEfgC,eApIwB,CAqIjCjF,YAoCE8F,WAA+B,mBAAXvB,QAAyBA,OAAOuB,YAAc,eAmBlElJ,WAA4B,WAC5B,SAASA,WAAWmJ,WAChB9I,KAAK+I,WAAY,EACbD,YACA9I,KAAKgJ,WAAaF,WA6F1B,OA1FAnJ,WAAWC,UAAUqJ,KAAO,SAAUC,UAClC,IAAIC,cAAgB,IAAIxJ,WAGxB,OAFAwJ,cAAcC,OAASpJ,KACvBmJ,cAAcD,SAAWA,SAClBC,eAEXxJ,WAAWC,UAAUkJ,UAAY,SAAUR,eAAgBpF,MAAOC,UAC9D,IAAI+F,SAAWlJ,KAAKkJ,SAChBG,KAAOrG,aAAasF,eAAgBpF,MAAOC,UAS/C,GARI+F,SACAA,SAASvH,KAAK0H,KAAMrJ,KAAKoJ,QAGzBC,KAAK1C,IAAI3G,KAAKoJ,QAAWvF,OAAOgC,wCAA0CwD,KAAKvB,mBAC3E9H,KAAKgJ,WAAWK,MAChBrJ,KAAKsJ,cAAcD,OAEvBxF,OAAOgC,uCACHwD,KAAKvB,qBACLuB,KAAKvB,oBAAqB,EACtBuB,KAAKxB,iBACL,MAAMwB,KAAKzB,eAIvB,OAAOyB,MAEX1J,WAAWC,UAAU0J,cAAgB,SAAUD,MAC3C,IACI,OAAOrJ,KAAKgJ,WAAWK,MAE3B,MAAOxI,KACCgD,OAAOgC,wCACPwD,KAAKxB,iBAAkB,EACvBwB,KAAKzB,eAAiB/G,KAEtB2B,eAAe6G,MACfA,KAAKnG,MAAMrC,KAGX0I,QAAQC,KAAK3I,OAIzBlB,WAAWC,UAAU6J,QAAU,SAAUrE,KAAMxB,aAC3C,IAAI+D,MAAQ3H,KAEZ,OAAO,IADP4D,YAAcD,eAAeC,cACN,SAAU8F,QAASC,QACtC,IAAI7C,aACJA,aAAea,MAAMmB,UAAU,SAAU7E,OACrC,IACImB,KAAKnB,OAET,MAAOpD,KACH8I,OAAO9I,KACHiG,cACAA,aAAad,gBAGtB2D,OAAQD,YAGnB/J,WAAWC,UAAUoJ,WAAa,SAAUlE,YACxC,IAAIsE,OAASpJ,KAAKoJ,OAClB,OAAOA,QAAUA,OAAON,UAAUhE,aAEtCnF,WAAWC,UAAUiJ,YAAc,WAC/B,OAAO7I,MAEXL,WAAWC,UAAUgK,KAAO,WAExB,IAAK,IADDC,cACKC,GAAK,EAAGA,GAAK3I,UAAUU,OAAQiI,KACpCD,WAAWC,IAAM3I,UAAU2I,IAE/B,OAA0B,IAAtBD,WAAWhI,OACJ7B,KAEJuD,cAAcsG,WAAdtG,CAA0BvD,OAErCL,WAAWC,UAAUmK,UAAY,SAAUnG,aACvC,IAAI+D,MAAQ3H,KAEZ,OAAO,IADP4D,YAAcD,eAAeC,cACN,SAAU8F,QAASC,QACtC,IAAI1F,MACJ0D,MAAMmB,UAAU,SAAUnI,GAAK,OAAOsD,MAAQtD,GAAM,SAAUE,KAAO,OAAO8I,OAAO9I,MAAS,WAAc,OAAO6I,QAAQzF,YAGjItE,WAAWc,OAAS,SAAUqI,WAC1B,OAAO,IAAInJ,WAAWmJ,YAEnBnJ,WAjGoB,GAoH/BoE,4BAA4BnE,UAA0BY,OAAOC,OAAOiB,MAAM9B,WAC1E,IAAIoK,wBAA0BjG,4BAG1BkG,oBAAqC,SAAUxC,QAE/C,SAASwC,oBAAoBC,QAASpF,YAClC,IAAI6C,MAAQF,OAAO9F,KAAK3B,OAASA,KAIjC,OAHA2H,MAAMuC,QAAUA,QAChBvC,MAAM7C,WAAaA,WACnB6C,MAAM/E,QAAS,EACR+E,MAkBX,OAxBAzH,UAAU+J,oBAAqBxC,QAQ/BwC,oBAAoBrK,UAAUoG,YAAc,WACxC,IAAIhG,KAAK4C,OAAT,CAGA5C,KAAK4C,QAAS,EACd,IAAIsH,QAAUlK,KAAKkK,QACfC,UAAYD,QAAQC,UAExB,GADAnK,KAAKkK,QAAU,KACVC,WAAkC,IAArBA,UAAUtI,SAAgBqI,QAAQpH,YAAaoH,QAAQtH,OAAzE,CAGA,IAAIwH,gBAAkBD,UAAUhD,QAAQnH,KAAK8E,aACpB,IAArBsF,iBACAD,UAAU/C,OAAOgD,gBAAiB,MAGnCH,oBAzB6B,CA0BtClE,cAGEsE,kBAAmC,SAAU5C,QAE7C,SAAS4C,kBAAkBxH,aACvB,IAAI8E,MAAQF,OAAO9F,KAAK3B,KAAM6C,cAAgB7C,KAE9C,OADA2H,MAAM9E,YAAcA,YACb8E,MAEX,OANAzH,UAAUmK,kBAAmB5C,QAMtB4C,kBAP2B,CAQpCtH,YACEuH,QAAyB,SAAU7C,QAEnC,SAAS6C,UACL,IAAI3C,MAAQF,OAAO9F,KAAK3B,OAASA,KAMjC,OALA2H,MAAMwC,aACNxC,MAAM/E,QAAS,EACf+E,MAAM7E,WAAY,EAClB6E,MAAM4C,UAAW,EACjB5C,MAAM6C,YAAc,KACb7C,MAyFX,OAjGAzH,UAAUoK,QAAS7C,QAUnB6C,QAAQ1K,UAAUwD,cAAgB,WAC9B,OAAO,IAAIiH,kBAAkBrK,OAEjCsK,QAAQ1K,UAAUqJ,KAAO,SAAUC,UAC/B,IAAIgB,QAAU,IAAIO,iBAAiBzK,KAAMA,MAEzC,OADAkK,QAAQhB,SAAWA,SACZgB,SAEXI,QAAQ1K,UAAUwF,KAAO,SAAUnB,OAC/B,GAAIjE,KAAK4C,OACL,MAAM,IAAIoH,wBAEd,IAAKhK,KAAK8C,UAIN,IAAK,IAHDqH,UAAYnK,KAAKmK,UACjB7D,IAAM6D,UAAUtI,OAChB6I,KAAOP,UAAUQ,QACZ5I,EAAI,EAAGA,EAAIuE,IAAKvE,IACrB2I,KAAK3I,GAAGqD,KAAKnB,QAIzBqG,QAAQ1K,UAAUsD,MAAQ,SAAUrC,KAChC,GAAIb,KAAK4C,OACL,MAAM,IAAIoH,wBAEdhK,KAAKuK,UAAW,EAChBvK,KAAKwK,YAAc3J,IACnBb,KAAK8C,WAAY,EAIjB,IAAK,IAHDqH,UAAYnK,KAAKmK,UACjB7D,IAAM6D,UAAUtI,OAChB6I,KAAOP,UAAUQ,QACZ5I,EAAI,EAAGA,EAAIuE,IAAKvE,IACrB2I,KAAK3I,GAAGmB,MAAMrC,KAElBb,KAAKmK,UAAUtI,OAAS,GAE5ByI,QAAQ1K,UAAUuD,SAAW,WACzB,GAAInD,KAAK4C,OACL,MAAM,IAAIoH,wBAEdhK,KAAK8C,WAAY,EAIjB,IAAK,IAHDqH,UAAYnK,KAAKmK,UACjB7D,IAAM6D,UAAUtI,OAChB6I,KAAOP,UAAUQ,QACZ5I,EAAI,EAAGA,EAAIuE,IAAKvE,IACrB2I,KAAK3I,GAAGoB,WAEZnD,KAAKmK,UAAUtI,OAAS,GAE5ByI,QAAQ1K,UAAUoG,YAAc,WAC5BhG,KAAK8C,WAAY,EACjB9C,KAAK4C,QAAS,EACd5C,KAAKmK,UAAY,MAErBG,QAAQ1K,UAAU0J,cAAgB,SAAUxE,YACxC,GAAI9E,KAAK4C,OACL,MAAM,IAAIoH,wBAGV,OAAOvC,OAAO7H,UAAU0J,cAAc3H,KAAK3B,KAAM8E,aAGzDwF,QAAQ1K,UAAUoJ,WAAa,SAAUlE,YACrC,GAAI9E,KAAK4C,OACL,MAAM,IAAIoH,wBAET,OAAIhK,KAAKuK,UACVzF,WAAW5B,MAAMlD,KAAKwK,aACfzE,aAAac,OAEf7G,KAAK8C,WACVgC,WAAW3B,WACJ4C,aAAac,QAGpB7G,KAAKmK,UAAUzD,KAAK5B,YACb,IAAImF,oBAAoBjK,KAAM8E,cAG7CwF,QAAQ1K,UAAUgL,aAAe,WAC7B,IAAI/B,WAAa,IAAIlJ,WAErB,OADAkJ,WAAWO,OAASpJ,KACb6I,YAEXyB,QAAQ7J,OAAS,SAAUoC,YAAauG,QACpC,OAAO,IAAIqB,iBAAiB5H,YAAauG,SAEtCkB,QAlGiB,CAmG1B3K,YACE8K,iBAAkC,SAAUhD,QAE5C,SAASgD,iBAAiB5H,YAAauG,QACnC,IAAIzB,MAAQF,OAAO9F,KAAK3B,OAASA,KAGjC,OAFA2H,MAAM9E,YAAcA,YACpB8E,MAAMyB,OAASA,OACRzB,MA6BX,OAlCAzH,UAAUuK,iBAAkBhD,QAO5BgD,iBAAiB7K,UAAUwF,KAAO,SAAUnB,OACxC,IAAIpB,YAAc7C,KAAK6C,YACnBA,aAAeA,YAAYuC,MAC3BvC,YAAYuC,KAAKnB,QAGzBwG,iBAAiB7K,UAAUsD,MAAQ,SAAUrC,KACzC,IAAIgC,YAAc7C,KAAK6C,YACnBA,aAAeA,YAAYK,OAC3BlD,KAAK6C,YAAYK,MAAMrC,MAG/B4J,iBAAiB7K,UAAUuD,SAAW,WAClC,IAAIN,YAAc7C,KAAK6C,YACnBA,aAAeA,YAAYM,UAC3BnD,KAAK6C,YAAYM,YAGzBsH,iBAAiB7K,UAAUoJ,WAAa,SAAUlE,YAE9C,OADa9E,KAAKoJ,OAEPpJ,KAAKoJ,OAAON,UAAUhE,YAGtBiB,aAAac,OAGrB4D,iBAnC0B,CAoCnCH,SA4XEO,YAA6B,SAAUpD,QAEvC,SAASoD,YAAYnG,UAAWoG,MAC5B,IAAInD,MAAQF,OAAO9F,KAAK3B,KAAM0E,UAAWoG,OAAS9K,KAIlD,OAHA2H,MAAMjD,UAAYA,UAClBiD,MAAMmD,KAAOA,KACbnD,MAAMoD,SAAU,EACTpD,MAgFX,OAtFAzH,UAAU2K,YAAapD,QAQvBoD,YAAYjL,UAAUsE,SAAW,SAAUiB,MAAO6F,OAI9C,QAHc,IAAVA,QACAA,MAAQ,GAERhL,KAAK4C,OACL,OAAO5C,KAEXA,KAAKmF,MAAQA,MACb,IAAI8F,GAAKjL,KAAKiL,GACVvG,UAAY1E,KAAK0E,UAOrB,OANU,MAANuG,KACAjL,KAAKiL,GAAKjL,KAAKkL,eAAexG,UAAWuG,GAAID,QAEjDhL,KAAK+K,SAAU,EACf/K,KAAKgL,MAAQA,MACbhL,KAAKiL,GAAKjL,KAAKiL,IAAMjL,KAAKmL,eAAezG,UAAW1E,KAAKiL,GAAID,OACtDhL,MAEX6K,YAAYjL,UAAUuL,eAAiB,SAAUzG,UAAWuG,GAAID,OAI5D,YAHc,IAAVA,QACAA,MAAQ,GAELI,YAAY1G,UAAU2G,MAAM7C,KAAK9D,UAAW1E,MAAOgL,QAE9DH,YAAYjL,UAAUsL,eAAiB,SAAUxG,UAAWuG,GAAID,OAI5D,QAHc,IAAVA,QACAA,MAAQ,GAEE,OAAVA,OAAkBhL,KAAKgL,QAAUA,QAA0B,IAAjBhL,KAAK+K,QAC/C,OAAOE,GAEXK,cAAcL,KAElBJ,YAAYjL,UAAU2L,QAAU,SAAUpG,MAAO6F,OAC7C,GAAIhL,KAAK4C,OACL,OAAO,IAAIlB,MAAM,gCAErB1B,KAAK+K,SAAU,EACf,IAAI7H,MAAQlD,KAAKwL,SAASrG,MAAO6F,OACjC,GAAI9H,MACA,OAAOA,OAEe,IAAjBlD,KAAK+K,SAAgC,MAAX/K,KAAKiL,KACpCjL,KAAKiL,GAAKjL,KAAKkL,eAAelL,KAAK0E,UAAW1E,KAAKiL,GAAI,QAG/DJ,YAAYjL,UAAU4L,SAAW,SAAUrG,MAAO6F,OAC9C,IAAIS,SAAU,EACVC,gBAAa9F,EACjB,IACI5F,KAAK8K,KAAK3F,OAEd,MAAO/D,GACHqK,SAAU,EACVC,aAAetK,GAAKA,GAAK,IAAIM,MAAMN,GAEvC,GAAIqK,QAEA,OADAzL,KAAKgG,cACE0F,YAGfb,YAAYjL,UAAUwG,aAAe,WACjC,IAAI6E,GAAKjL,KAAKiL,GACVvG,UAAY1E,KAAK0E,UACjBiH,QAAUjH,UAAUiH,QACpBzG,MAAQyG,QAAQxE,QAAQnH,MAC5BA,KAAK8K,KAAO,KACZ9K,KAAKmF,MAAQ,KACbnF,KAAK+K,SAAU,EACf/K,KAAK0E,UAAY,MACF,IAAXQ,OACAyG,QAAQvE,OAAOlC,MAAO,GAEhB,MAAN+F,KACAjL,KAAKiL,GAAKjL,KAAKkL,eAAexG,UAAWuG,GAAI,OAEjDjL,KAAKgL,MAAQ,MAEVH,YAvFqB,CAfJ,SAAUpD,QAElC,SAASmE,OAAOlH,UAAWoG,MACvB,OAAOrD,OAAO9F,KAAK3B,OAASA,KAQhC,OAVAE,UAAU0L,OAAQnE,QAIlBmE,OAAOhM,UAAUsE,SAAW,SAAUiB,MAAO6F,OAIzC,YAHc,IAAVA,QACAA,MAAQ,GAELhL,MAEJ4L,OAXgB,CAYzB7F,eAmIE8F,UAA2B,WAC3B,SAASA,UAAUC,gBAAiB9G,UACpB,IAARA,MACAA,IAAM6G,UAAU7G,KAEpBhF,KAAK8L,gBAAkBA,gBACvB9L,KAAKgF,IAAMA,IASf,OAPA6G,UAAUjM,UAAUsE,SAAW,SAAU4G,KAAME,MAAO7F,OAIlD,YAHc,IAAV6F,QACAA,MAAQ,GAEL,IAAIhL,KAAK8L,gBAAgB9L,KAAM8K,MAAM5G,SAASiB,MAAO6F,QAEhEa,UAAU7G,IAAM,WAAc,OAAO+G,KAAK/G,OACnC6G,UAfmB,GAmB1BG,eAAgC,SAAUvE,QAE1C,SAASuE,eAAeF,gBAAiB9G,UACzB,IAARA,MACAA,IAAM6G,UAAU7G,KAEpB,IAAI2C,MAAQF,OAAO9F,KAAK3B,KAAM8L,gBAAiB,WAC3C,OAAIE,eAAeC,UAAYD,eAAeC,WAAatE,MAChDqE,eAAeC,SAASjH,MAGxBA,SAEThF,KAIN,OAHA2H,MAAMgE,WACNhE,MAAMuE,QAAS,EACfvE,MAAMwE,eAAYvG,EACX+B,MAkCX,OAlDAzH,UAAU8L,eAAgBvE,QAkB1BuE,eAAepM,UAAUsE,SAAW,SAAU4G,KAAME,MAAO7F,OAIvD,YAHc,IAAV6F,QACAA,MAAQ,GAERgB,eAAeC,UAAYD,eAAeC,WAAajM,KAChDgM,eAAeC,SAAS/H,SAAS4G,KAAME,MAAO7F,OAG9CsC,OAAO7H,UAAUsE,SAASvC,KAAK3B,KAAM8K,KAAME,MAAO7F,QAGjE6G,eAAepM,UAAUyL,MAAQ,SAAUe,QACvC,IAAIT,QAAU3L,KAAK2L,QACnB,GAAI3L,KAAKkM,OACLP,QAAQjF,KAAK0F,YADjB,CAIA,IAAIlJ,MACJlD,KAAKkM,QAAS,EACd,GACI,GAAIhJ,MAAQkJ,OAAOb,QAAQa,OAAOjH,MAAOiH,OAAOpB,OAC5C,YAECoB,OAAST,QAAQU,SAE1B,GADArM,KAAKkM,QAAS,EACVhJ,MAAO,CACP,KAAOkJ,OAAST,QAAQU,SACpBD,OAAOpG,cAEX,MAAM9C,SAGP8I,eAnDwB,CAoDjCH,WA8cEhH,MAAsB,IAAImH,eAAenB,aAi3BzCyB,UAAY,OAEZC,kBAAoB,EAEpBC,MAAQ,GAERC,eAAiB,eAEjBC,gBAAkB,mBAqBtBC,kBAAmC,SAAUlF,QAEzC,SAASkF,oBACL,IAAIhF,MAAQF,OAAO9F,KAAK3B,OAASA,KAKjC,OAJA2H,MAAMiF,cAAgB,KACtBjF,MAAMkF,YAAc,KACpBlF,MAAMmF,uBAAoBlH,EAC1B+B,MAAMoF,iBAAcnH,EACb+B,MA2NX,OAlOAzH,UAAUyM,kBAAmBlF,QAY7BkF,kBAAkB/M,UAAUoN,OAG5B,aAOAL,kBAAkB/M,UAAUqN,aAI5B,SAAUA,cAEN,OADAjN,KAAK4M,cAAgBK,aACdjN,MAMX2M,kBAAkB/M,UAAUsN,WAI5B,SAAUA,YAEN,OADAlN,KAAK6M,YAAcK,WACZlN,MAMX2M,kBAAkB/M,UAAUuN,iBAI5B,SAAUA,kBAEN,OADAnN,KAAK8M,kBAAoBK,iBAClBnN,MAMX2M,kBAAkB/M,UAAUwN,WAI5B,SAAUA,YAEN,OADApN,KAAK+M,YAAcK,WACZpN,MAMX2M,kBAAkB/M,UAAUyN,cAI5B,SAAUC,MAEN,IAEIC,cAFAC,MAAQ,KAIRC,cAAgB,KAgBpB,MAT6B,iBALzBF,cADAvN,KAAK6M,YACW7M,KAAK0N,aAAaJ,MAGlBA,QAGhBC,cAAgBI,KAAKC,UAAUL,gBAE/BvN,KAAK8M,oBACLW,cAAgBzN,KAAK6N,aAAaP,KAAMtN,KAAK8M,oBAE7C9M,KAAK+M,cACLS,MAAQxN,KAAK6N,aAAaP,KAAMtN,KAAK+M,cAErC1H,MAAMkI,eACC,MAGPO,YAAaL,cACbD,MAAOA,MACPO,eAAgBT,KAChBU,MAAOT,gBAQfZ,kBAAkB/M,UAAUqO,eAK5B,SAAUX,KAAMY,MACZ,IAAIvG,MAAQ3H,KAIRiN,aAAejN,KAAK4M,cAAgB5M,KAAK4M,cAAcuB,MAAM,KAAO,KAcxE,OAb2B,OAAvBnO,KAAK4M,oBAAiDhH,IAAvB5F,KAAK4M,eAAwC,KAATsB,KACzDZ,KAAKc,OAAO,SAAUC,MAG5B,OADapB,aAAetF,MAAM2G,sBAAsBrB,aAAcoB,OAASA,OACjEE,KAAK,SAAUtK,OAAS,OAAOA,MACxCjC,WACAwM,cACArH,QAAQ+G,KAAKlM,WAAWwM,gBAAkB,MAIzClB,MAQlBX,kBAAkB/M,UAAU8N,aAI5B,SAAUW,MACN,IAAI1G,MAAQ3H,KAEZ,OAAKA,KAAK6M,YAGH7M,KAAK6M,YAAYsB,MAAM,KACzBrM,IAAI,SAAU2M,OACf,OAAO9G,MAAMkG,aAAaQ,KAAMI,SAE/BrM,OAAO,SAAUsM,IAAKC,WAAa,OAAOD,IAAMA,IAAM,IAAMC,UAAYA,YANlE,IAafhC,kBAAkB/M,UAAUiO,aAK5B,SAAUe,IAAKC,KAEX,IAAIC,KAEAC,OACJ,GAAIF,IAAK,CAELE,OAASH,IACT,IAAK,IAAI9E,GAAK,EAAGkF,OAFjBF,KAAOD,IAAIV,MAAM,KAEerE,GAAKkF,OAAOnN,OAAQiI,KAChD+E,IAAMG,OAAOlF,IACTiF,SACAA,OAASA,OAAOF,WAKxBE,OAASH,IAEb,OAAOG,QAMXpC,kBAAkB/M,UAAUqP,eAI5B,SAAUC,SAEN,IAAInN,EAEAoN,WACJ,GAAID,SAAWA,QAAQrN,OAAS,EAC5B,IAAKE,EAAI,EAAGA,EAAImN,QAAQrN,OAAQE,IAAK,CAEjC,IAAIsM,KAAOrO,KAAKqN,cAAc6B,QAAQnN,IAClCsM,MACAc,QAAQzI,KAAK2H,MAIzB,OAAOc,SAOXxC,kBAAkB/M,UAAU0O,sBAK5B,SAAUrB,aAAcoB,MACpB,IAAI1G,MAAQ3H,KACZ,OAAOiN,aACFnL,IAAI,SAAUsN,aAAe,OAAOzH,MAAMkG,aAAaQ,KAAMe,eAAiBhB,OAAO,SAAUnK,OAAS,QAASA,SAEnH0I,kBAnOuB,CAoOhCrC,SAME+E,UAA2B,SAAU5H,QAErC,SAAS4H,YACL,IAAI1H,MAAQF,OAAO9F,KAAK3B,OAASA,KAIjC,OAHA2H,MAAM2H,iBAAmB,IAAI7P,KAAK8P,aAClC5H,MAAM6H,SACN7H,MAAM8H,UAAY,KACX9H,MA6DX,OAnEAzH,UAAUmP,UAAW5H,QAYrB4H,UAAUzP,UAAU0N,KAIpB,SAAUA,MACN,IAAI3F,MAAQ3H,KAkBZ,OAjBIsN,gBAAgB3N,WAEa,KAExBiK,KAAK3J,UAAUyP,WAAW,WAAc,YACxC5G,UAAU,SAAU6G,KACrBhI,MAAM6H,MAAQG,IACVhI,MAAM8H,WACN9H,MAAMiI,OAAOjI,MAAM8H,WAEvB9H,MAAM2H,iBAAiBO,SAI3B7P,KAAKwP,MAAQlC,KAEjBtN,KAAKsP,iBAAiBO,OACf7P,MAMXqP,UAAUzP,UAAUgQ,OAIpB,SAAU1B,MACN,GAAKlO,KAAKwP,MAGL,CACDxP,KAAKyP,UAAY,KAEjB,IAAIP,QAAUlP,KAAKiO,eAAejO,KAAKwP,MAAOtB,MAC9ClO,KAAKoF,KAAKpF,KAAKiP,eAAeC,eAN9BlP,KAAKyP,UAAYvB,MAazBmB,UAAUzP,UAAUyN,cAIpB,SAAUC,MACN,OAAO7F,OAAO7H,UAAUyN,cAAc1L,KAAK3B,KAAMsN,OAE9C+B,UApEmB,CAqE5B1C,mBAMEmD,WAA4B,SAAUrI,QAEtC,SAASqI,WAAWC,SAChB,IAAIpI,MAAQF,OAAO9F,KAAK3B,OAASA,KAOjC,OANA2H,MAAM7H,KAAOiQ,QACbpI,MAAM2H,iBAAmB,IAAI7P,KAAK8P,aAClC5H,MAAMqI,WAAa,KACnBrI,MAAMsI,aAAe,KACrBtI,MAAMuI,aAAe,KACrBvI,MAAMwI,WAAa,KACZxI,MAsGX,OA/GAzH,UAAU4P,WAAYrI,QAetBqI,WAAWlQ,UAAUwQ,UAIrB,SAAUA,WAGN,OAFApQ,KAAKgQ,WAAaI,UAClBpQ,KAAKsP,iBAAiBO,OACf7P,MAMX8P,WAAWlQ,UAAUyQ,YAIrB,SAAUA,aACNrQ,KAAKkQ,aAAeG,aAMxBP,WAAWlQ,UAAU0Q,UAIrB,SAAUA,WACNtQ,KAAKmQ,WAAaG,WAMtBR,WAAWlQ,UAAU2Q,eAIrB,SAAUA,gBACNvQ,KAAKwQ,gBAAkBD,gBAM3BT,WAAWlQ,UAAUgQ,OAIrB,SAAU1B,MACN,IAAIvG,MAAQ3H,KACZA,KAAKgN,SAEL,IAAIyD,IAAM,GAENA,IADAzQ,KAAKkQ,aACClQ,KAAKkQ,aAAahC,MAGlBlO,KAAKgQ,WAAaU,mBAAmBxC,MAE/ClO,KAAKiQ,aAAejQ,KAAKF,KACpB6Q,IAAIF,IAAKjQ,OAAOoQ,UAAW5Q,KAAKwQ,kBAChC5G,KAAK3J,UAAU6B,IAAI,SAAUwL,MAE9B,IAAI4B,QAAUvH,MAAMkG,aAAaP,KAAM3F,MAAMwI,YAC7C,OAAOxI,MAAMsG,eAAeiB,QAAShB,QACrCjO,UAAUyP,WAAW,WAAc,YAClC5G,UAAU,SAAUoG,SAErB,IAAIC,QAAUxH,MAAMsH,eAAeC,SACnCvH,MAAMvC,KAAK+J,YAMnBW,WAAWlQ,UAAUoN,OAGrB,WACQhN,KAAKiQ,cACLjQ,KAAKiQ,aAAajK,eAO1B8J,WAAWlQ,UAAUyN,cAIrB,SAAUC,MACN,OAAO7F,OAAO7H,UAAUyN,cAAc1L,KAAK3B,KAAMsN,OAE9CwC,WAhHoB,CAiH7BnD,mBAMEkE,iBAAkC,WAClC,SAASA,oBAcT,OATAA,iBAAiBjR,UAAUa,OAG3B,WACI,OAAO,IAAI4O,WAEfwB,iBAAiBC,aACXC,KAAMtR,KAAKuR,aAEVH,iBAf0B,GAsBjCI,kBAAmC,WACnC,SAASA,kBAAkBlB,SACvB/P,KAAKF,KAAOiQ,QAkBhB,OAbAkB,kBAAkBrR,UAAUa,OAG5B,WACI,OAAO,IAAIqP,WAAW9P,KAAKF,OAE/BmR,kBAAkBH,aACZC,KAAMtR,KAAKuR,aAGjBC,kBAAkBC,eAAiB,WAAc,QAC3CH,KAAMjR,KAAKqR,cAEVF,kBApB2B,GA2BlCG,iBAAkC,WAClC,SAASA,iBAAiBC,iBAAkBC,mBAExCtR,KAAKqR,iBAAmBA,iBACxBrR,KAAKsR,kBAAoBA,kBAsD7B,OA9CAF,iBAAiBxR,UAAU2R,MAM3B,SAAUjE,KAAML,aAAcC,YAK1B,YAJqB,IAAjBD,eAA2BA,aAAe,SAC3B,IAAfC,aAAyBA,WAAa,IAE1BlN,KAAKqR,iBAAiB5Q,SAEjC6M,KAAKA,MACLL,aAAaA,cACbC,WAAWA,aAQpBkE,iBAAiBxR,UAAU4R,OAM3B,SAAUf,IAAKxD,aAAcC,YAKzB,YAJqB,IAAjBD,eAA2BA,aAAe,SAC3B,IAAfC,aAAyBA,WAAa,IAEzBlN,KAAKsR,kBAAkB7Q,SAEnC2P,UAAUK,KACVxD,aAAaA,cACbC,WAAWA,aAEpBkE,iBAAiBN,aACXC,KAAMtR,KAAKuR,aAGjBI,iBAAiBF,eAAiB,WAAc,QAC1CH,KAAMF,mBACNE,KAAME,qBAELG,iBA1D0B,GAiEjCK,aAA8B,WAC9B,SAASA,eACLzR,KAAK0R,SAAW,IAAIjS,KAAK8P,aACzBvP,KAAK2R,YAAc,IAAIlS,KAAK8P,aAC5BvP,KAAK4R,OAAS,IAAInS,KAAK8P,aACvBvP,KAAKsP,iBAAmB,IAAI7P,KAAK8P,aACjCvP,KAAK6R,KAAO,KACZ7R,KAAK8R,SAAW,KAChB9R,KAAK+R,iBAAkB,EACvB/R,KAAKgS,cAAe,EACpBhS,KAAKiS,aAAc,EACnBjS,KAAKkS,SAAU,EACflS,KAAKmS,oBAAsB,KA8O/B,OAxOAV,aAAa7R,UAAUwS,aAIvB,SAAUP,MACN7R,KAAK6R,KAAOA,MAMhBJ,aAAa7R,UAAUyS,iBAIvB,SAAUP,UACN9R,KAAK8R,SAAWA,UAMpBL,aAAa7R,UAAU0S,cAIvB,SAAUjE,MACNrO,KAAK2R,YAAY9B,KAAKxB,MACtBrO,KAAK+R,kBAAoB1D,MAO7BoD,aAAa7R,UAAU2S,WAKvB,SAAUlE,KAAMmE,gBACM,IAAdA,YAAwBA,WAAY,GACxCxS,KAAK0R,SAAS7B,KAAKxB,MACfA,OACArO,KAAKgS,cAAe,GAEpBQ,WACAxS,KAAKyS,SAMbhB,aAAa7R,UAAU8S,mBAGvB,WACQ1S,KAAK2S,cACL3S,KAAK0R,SAAS7B,KAAK,MACnB7P,KAAKgS,cAAe,GAExBhS,KAAKsP,iBAAiBO,QAM1B4B,aAAa7R,UAAUgQ,OAIvB,SAAU1B,MACFlO,KAAKgS,eACLhS,KAAK0R,SAAS7B,KAAK,MACnB7P,KAAKgS,cAAe,GAEpBhS,KAAK6R,MACL7R,KAAK6R,KAAKjC,OAAO1B,OAMzBuD,aAAa7R,UAAU6S,MAGvB,WACIzS,KAAK+R,iBAAkB,EACvB/R,KAAK4S,QAAS,EACV5S,KAAK8R,UACL9R,KAAK8R,SAASW,QAEdzS,KAAK6R,MACL7R,KAAK6R,KAAKY,SAMlBhB,aAAa7R,UAAUiT,cAGvB,WACQ7S,KAAK8R,UACL9R,KAAK8R,SAASe,iBAMtBpB,aAAa7R,UAAUkT,QAGvB,WACQ9S,KAAK8R,UACL9R,KAAK8R,SAASgB,WAMtBrB,aAAa7R,UAAUmT,QAGvB,WACQ/S,KAAK8R,UACL9R,KAAK8R,SAASiB,WAMtBtB,aAAa7R,UAAUoT,eAGvB,WACI,OAAOhT,KAAK+R,iBAMhBN,aAAa7R,UAAUqT,WAIvB,SAAUjG,QACNhN,KAAKiS,YAAcjF,QAKvByE,aAAa7R,UAAUsT,aAGvB,WACI,OAAOlT,KAAKiS,aAKhBR,aAAa7R,UAAUuT,KAGvB,YACSnT,KAAKkS,SAAalS,KAAK6R,OACxB7R,KAAK4S,QAAS,EACd5S,KAAK6R,KAAKsB,SAGlB3S,OAAO4S,eAAe3B,aAAa7R,UAAW,UAC1C+Q,IAGA,WACI,OAAO3Q,KAAKkS,SAEhBmB,IAIA,SAAUF,MACNnT,KAAKkS,QAAUiB,KACfnT,KAAK4R,OAAO/B,KAAK7P,KAAKkS,SAClBlS,KAAK6R,MACL7R,KAAK6R,KAAKe,OAAOO,OAGzBG,YAAY,EACZC,cAAc,IAElB/S,OAAO4S,eAAe3B,aAAa7R,UAAW,sBAC1C+Q,IAGA,WACI,OAAO3Q,KAAKmS,qBAEhBkB,IAIA,SAAUnO,OACNlF,KAAKmS,oBAAsBjN,MACvBlF,KAAK8R,UACL9R,KAAK8R,SAAS0B,aAAaxT,KAAKmS,sBAGxCmB,YAAY,EACZC,cAAc,IAElB/S,OAAO4S,eAAe3B,aAAa7R,UAAW,eAC1C+Q,IAGA,WACI,OAAO3Q,KAAKgS,cAEhBsB,YAAY,EACZC,cAAc,IAElB9B,aAAaX,aACPC,KAAMtR,KAAKgU,UAAWC,OACZC,SAAU,qBAG1BlC,aAAamC,gBACTlC,WAAaX,KAAMtR,KAAKoU,SACxBlC,cAAgBZ,KAAMtR,KAAKoU,SAC3BjC,SAAWb,KAAMtR,KAAKoU,SACtBvE,mBAAqByB,KAAMtR,KAAKoU,UAE7BpC,aA1PsB,GAiQ7BqC,WAA4B,WAK5B,OAJA,SAAoBC,IAAK7O,OACrBlF,KAAK+T,IAAMA,IACX/T,KAAKkF,MAAQA,OAHU,GAO3B8O,YAA6B,WAC7B,SAASA,YAAYzU,UAAW0U,GAAIC,MAChClU,KAAKT,UAAYA,UACjBS,KAAKiU,GAAKA,GACVjU,KAAKkU,KAAOA,KACZlU,KAAKmU,QACLnU,KAAKoU,YAAa,EAClBpU,KAAKqU,eAAgB,EACrBrU,KAAKT,UAAU8S,iBAAiBrS,MA4QpC,OAvQAgU,YAAYpU,UAAU0U,YAGtB,WACItU,KAAKT,UAAU8S,iBAAiB,OAKpC2B,YAAYpU,UAAU2U,gBAGtB,WACI,IAAI5M,MAAQ3H,KAERwU,IAAMC,iBAAiBzU,KAAKiU,GAAGS,eAE/BC,mBAAqB3U,KAAKT,UAAUoV,mBACxC3U,KAAKoU,aAAeI,IAAII,WAA+B,SAAlBJ,IAAIK,UACrCF,oBACA3U,KAAKkU,KAAKY,IAAI,WACVnN,MAAM6L,aAAamB,uBAQ/BX,YAAYpU,UAAUmV,YAItB,SAAUC,OACN,IAAIrN,MAAQ3H,KAEPA,KAAKqU,cAONrU,KAAKqU,eAAgB,GANrBrU,KAAKT,UAAU0T,YAAW,GAC1BjT,KAAKkU,KAAKY,IAAI,WACVnN,MAAMpI,UAAU0T,YAAW,OAWvCe,YAAYpU,UAAUqV,YAItB,SAAUlB,KAEN,IAAImB,SAAWlV,KAAKmU,KAAKgB,UAAU,SAAUC,MAAQ,OAAOA,KAAKlQ,QAAU6O,IAAI7O,QAC3EgQ,UAAY,EACZlV,KAAKmU,KAAKe,UAAYnB,IAGtB/T,KAAKmU,KAAKzN,KAAKqN,MAOvBC,YAAYpU,UAAUyV,cAItB,SAAUC,UAEN,IAAIJ,SAAWlV,KAAKmU,KAAKgB,UAAU,SAAUC,MAAQ,OAAOA,KAAKlQ,QAAUoQ,WAC3EtV,KAAKmU,KAAK/M,OAAO8N,SAAU,GACvBlV,KAAKuV,iBAAmBD,WAAatV,KAAKuV,gBAAgBrQ,OAC1DlF,KAAKwT,aAAa,OAO1BQ,YAAYpU,UAAU4T,aAItB,SAAUtO,OAEN,IAAIyM,YAAc3R,KAAKmU,KAAKqB,KAAK,SAAUzB,KAAO,OAAOA,IAAI7O,QAAUA,QACvE,GAAIG,MAAMH,QAA2B,MAAY,EAM7C,OALIlF,KAAKuV,iBACLvV,KAAKuV,gBAAgBxB,IAAI0B,gBAAe,GAE5CzV,KAAKuV,qBAAkB3P,OACvB5F,KAAKT,UAAU+S,cAAc,MAGjC,GAAKX,cAGD3R,KAAKuV,iBACLvV,KAAKuV,gBAAgBxB,IAAI0B,gBAAe,GAE5CzV,KAAKuV,gBAAkB5D,YACvB3R,KAAKuV,gBAAgBxB,IAAI0B,gBAAe,GACxCzV,KAAKT,UAAU+S,cAActS,KAAKuV,gBAAgBxB,IAAI2B,eAClD1V,KAAKoU,YAAcpU,KAAKuV,iBAAiB,CAEzC,IAAII,OAAS3V,KAAK4V,iBAClB,IAAKD,OACD,OAEJ,GAAIA,OAAS,EACT3V,KAAK6V,oBAAoBF,OAAS,OAEjC,CAED,IAAI5B,IAAM/T,KAAKuV,gBAAgBxB,IAAI+B,mBAC/B9V,KAAK+V,iBAAmBhC,IAAIiC,wBAAwBC,SACpDjW,KAAK6V,oBAAoB7V,KAAKkW,wBAAwBnC,MAClD/T,KAAKiU,GAAGS,cAAcsB,wBAAwBC,OAASjW,KAAKkW,wBAAwBnC,KAAOA,IAAIiC,wBAAwBG,KACvHnW,KAAK6V,oBAAoB9B,IAAIiC,wBAAwBG,KAAOnW,KAAKiU,GAAGS,cAAcsB,wBAAwBG,IAAMC,SAA2B3B,iBAAiBzU,KAAKiU,GAAGS,eAAyB,WAAG,UASpNV,YAAYpU,UAAU6S,MAGtB,WACIzS,KAAKmU,SAMTH,YAAYpU,UAAU2S,WAItB,SAAUlE,MACNrO,KAAKT,UAAUgT,WAAWlE,OAK9B2F,YAAYpU,UAAUyW,aAGtB,WACIrW,KAAKqU,eAAgB,GAKzBL,YAAYpU,UAAUiT,cAGtB,WACU7S,KAAKuV,iBAAqBvV,KAAKuV,gBAAgBxB,IACjD/T,KAAKuS,WAAWvS,KAAKuV,gBAAgBxB,IAAI2B,eAEpC1V,KAAKmU,KAAKtS,OAAS,GACxB7B,KAAKuS,WAAWvS,KAAKmU,KAAK,GAAGJ,IAAI2B,gBAMzC1B,YAAYpU,UAAUkT,QAGtB,WAEI,IAAIwD,aAAe,EACftW,KAAKuV,kBACLe,aAAetW,KAAKuV,gBAAgBrQ,MAAQ,GAEhDlF,KAAKwT,aAAa8C,eAKtBtC,YAAYpU,UAAUmT,QAGtB,WAEI,IAAIuD,cAAgB,EAChBtW,KAAKuV,kBACLe,aAAetW,KAAKuV,gBAAgBrQ,MAAQ,GAEhDlF,KAAKwT,aAAa8C,eAMtBtC,YAAYpU,UAAUiW,oBAItB,SAAUU,QACNvW,KAAKiU,GAAGS,cAAc8B,UAAYxW,KAAKiU,GAAGS,cAAc8B,UAAYD,QAKxEvC,YAAYpU,UAAUgW,eAGtB,WACI,GAAK5V,KAAKuV,gBAGV,OAAOvV,KAAKuV,gBAAgBxB,IAAI+B,mBAAmBE,wBAAwBG,KACtEnW,KAAKiU,GAAGS,cAAcsB,wBAAwBG,IAC3CC,SAA2B3B,iBAAiBzU,KAAKiU,GAAGS,eAAyB,WAAG,MAK5FV,YAAYpU,UAAUmW,eAGtB,WACI,OAAO/V,KAAKiU,GAAGS,cAAcsB,wBAAwBG,IACjDC,SAA2B3B,iBAAiBzU,KAAKiU,GAAGS,eAAwB,UAAG,KAMvFV,YAAYpU,UAAUsW,wBAItB,SAAUnC,KAEN,IAAIS,IAAMC,iBAAiBV,IAAI0C,eAC/B,OAAO1C,IAAI0C,cAAcC,aACrBN,SAA2B5B,IAAa,UAAG,IAAM4B,SAA2B5B,IAAgB,aAAG,KAEvGR,YAAYlD,aACNC,KAAMtR,KAAKgU,UAAWC,OACZC,SAAU,oBAI1BK,YAAY9C,eAAiB,WAAc,QACrCH,KAAMU,aAAcX,aAAeC,KAAMtR,KAAKkX,SAC9C5F,KAAMtR,KAAKmX,aACX7F,KAAMtR,KAAKoX,UAEjB7C,YAAYJ,gBACRmB,cAAgBhE,KAAMtR,KAAKqX,aAAcpD,MAAO,aAAc,cAE3DM,YApRqB,GAmT5B+C,SAA0B,WAC1B,SAASA,SAASxX,UAAWyX,QAAS/C,IAClC,IAAItM,MAAQ3H,KACZA,KAAKT,UAAYA,UACjBS,KAAKgX,QAAUA,QACfhX,KAAKiU,GAAKA,GACVjU,KAAKiX,eAAgB,EACrBjX,KAAKkX,iBAAkB,EACvBlX,KAAKmX,mBAAoB,EACzBnX,KAAKoX,iBAAkB,EACvBpX,KAAKqX,aAAc,EACnBrX,KAAKsX,aAAc,EACnBtX,KAAKuX,eAAgB,EACrBvX,KAAKwX,eAAgB,EACrBxX,KAAKyX,cAAgB,IAAIhY,KAAK8P,aAC9BvP,KAAK0X,WAAa,GAClB1X,KAAK2X,YAAc,GACnB3X,KAAK4X,UAAY,KACjB5X,KAAKT,UAAUmS,SAAS5I,UAAU,SAAUuF,MACnCA,OAGD1G,MAAMsP,cACNtP,MAAMkQ,UAAY,GAGlBlQ,MAAMkQ,UAAYxJ,KAAKL,MAE3BrG,MAAM8P,cAAc5H,KAAKlI,MAAMkQ,cAEnC7X,KAAKT,UAAUoS,YAAY7I,UAAU,SAAUuF,MACvC1G,MAAMyP,kBACF/I,MACA1G,MAAMgQ,YAActJ,KAAKL,MACzBrG,MAAM8P,cAAc5H,KAAKxB,KAAKL,SAG9BrG,MAAMgQ,YAAchQ,MAAMkQ,UAC1BlQ,MAAM8P,cAAc5H,KAAKlI,MAAMkQ,eAI3C7X,KAAKT,UAAU+P,iBAAiBxG,UAAU,WACtCnB,MAAMpI,UAAUqQ,OAAOjI,MAAMkQ,aAE7B7X,KAAKgX,QAAQc,cACb9X,KAAKgX,QAAQc,aAAahP,UAAU,SAAU7E,OACrCoB,MAAMpB,QAAU0D,MAAMgQ,cAAgB1T,QACnC0D,MAAMkQ,YAAc5T,OACpB0D,MAAMpI,UAAUqQ,OAAO3L,OAE3B0D,MAAMkQ,UAAY5T,SAsQlC,OA7PA8S,SAASnX,UAAUmY,aAInB,SAAU/C,OAjFD,KAkFDA,MAAMgD,SAtFL,KAsF2BhD,MAAMgD,SA5EhC,IA4EsDhD,MAAMgD,UApF7D,KAwFDhD,MAAMgD,SAlFL,KAkF2BhD,MAAMgD,QAClChD,MAAMiD,iBA7FL,KA+FIjD,MAAMgD,SACXhD,MAAMiD,iBACNjY,KAAKT,UAAUqQ,OAAO5P,KAAK6X,YAzF1B,KA2FI7C,MAAMgD,SACPhY,KAAKT,UAAUqT,SACf5S,KAAKkY,qBACLlY,KAAKT,UAAUkT,QACfuC,MAAMmD,kBACNnD,MAAMiD,oBAQlBlB,SAASnX,UAAUwY,aAInB,SAAUpD,OACNhV,KAAKT,UAAU4T,QAMnB4D,SAASnX,UAAUyY,eAInB,SAAUrD,OAEN,IAAIgD,QAAUhD,MAAMgD,SAAWhD,MAAMsD,MAvHhC,KAwHDN,SACIhY,KAAKT,UAAUyT,kBACfgC,MAAMiD,iBAEVjY,KAAKuY,mBAtIJ,KAwIIP,SACLhD,MAAMiD,iBACNjY,KAAKT,UAAU4T,OACfnT,KAAKT,UAAUuT,WAvId,KAyIIkF,SACLhD,MAAMiD,iBACNjY,KAAKT,UAAUwT,WAnIb,IAqIGiF,QACLhY,KAAKuY,kBApIJ,IAsIIP,QACLhY,KAAKT,UAAU4T,OA7Id,KA+II6E,SAGLhD,MAAMiD,iBACFjY,KAAKT,UAAUqT,QACfoC,MAAMmD,mBAIM,IAAZH,SAhJH,KAgJoBA,SA9IpB,KA8I0CA,WACtCA,SA7IJ,KA6IyBA,SA3IxB,MA4IGhD,MAAMwD,SAAYxD,MAAMyD,SAAYzD,MAAM0D,QAC3C1Y,KAAKT,UAAU4T,QAQ3B4D,SAASnX,UAAU+Y,OAInB,SAAU3D,OACN,IAAIrN,MAAQ3H,KAERA,KAAKT,UAAU2T,eACfpS,WAAW,WAGP6G,MAAMsM,GAAGS,cAAckE,SACxB,GAGH5Y,KAAKT,UAAUqT,SACf5S,KAAK4X,UAAYrT,MAAM,KAAKqF,KAAK3J,UAAU4Y,KAAK,IAAI/P,UAAU,WAAc,OAAOnB,MAAMmR,aAMjG/B,SAASnX,UAAUmZ,QAGnB,WACQ/Y,KAAK4X,YACL5X,KAAK4X,UAAU5R,cACfhG,KAAK4X,UAAY,MAEjB5X,KAAKwX,eACLxX,KAAKiU,GAAGS,cAAcsE,SAEtBhZ,KAAKqX,aACLrX,KAAKT,UAAU4T,QAOvB4D,SAASnX,UAAUqZ,QAInB,SAAUjE,OACFhV,KAAKuX,eACLvX,KAAKiU,GAAGS,cAAcsE,SAEtBhZ,KAAKsX,cACDtX,KAAKT,UAAUqT,OACf5S,KAAKT,UAAUkT,QAGfzS,KAAKT,UAAU4T,SAI3B3S,OAAO4S,eAAe2D,SAASnX,UAAW,aACtC+Q,IAGA,WACI,OAAO3Q,KAAK0X,YAEhBrE,IAIA,SAAUnF,MACNlO,KAAK0X,WAAaxJ,KAClBlO,KAAK2X,YAAczJ,MAEvBoF,YAAY,EACZC,cAAc,IAKlBwD,SAASnX,UAAU2Y,gBAGnB,WACQvY,KAAKT,UAAUyT,kBACfhT,KAAK0X,WAAa,GAClB1X,KAAKT,UAAUsT,iBAEV7S,KAAKmX,kBACVnX,KAAKT,UAAUgT,YAAavE,MAAOhO,KAAK6X,UAAW9J,eAAgB,QAG/D/N,KAAKkX,kBAAoBlX,KAAKT,UAAUoT,cACxC3S,KAAK6X,UAAY,GACjB7X,KAAKyX,cAAc5H,KAAK7P,KAAK6X,YAEjC7X,KAAKT,UAAUkT,UAMvBsE,SAASnX,UAAUsY,mBAGnB,WACQlY,KAAKoX,iBACDpX,KAAK2X,aAAe3X,KAAK6X,YACzB7X,KAAK2X,YAAc3X,KAAK6X,UACxB7X,KAAKyX,cAAc5H,KAAK7P,KAAK6X,aAOzCd,SAASnX,UAAUkZ,OAGnB,WACQ9Y,KAAK4X,YACL5X,KAAK4X,UAAU5R,cACfhG,KAAK4X,UAAY,MAEjB5X,KAAKmX,kBACLnX,KAAKT,UAAUgT,YAAavE,MAAOhO,KAAK6X,UAAW9J,eAAgB,OAG/D/N,KAAKkX,kBAAoBlX,KAAKT,UAAUoT,aACxC3S,KAAK6X,UAAY,GACjB7X,KAAKyX,cAAc5H,KAAK7P,KAAK6X,YAG7B7X,KAAKkY,qBAGblY,KAAKT,UAAUkT,SAEnBsE,SAASjG,aACHC,KAAMtR,KAAKgU,UAAWC,OACZC,SAAU,iBAI1BoD,SAAS7F,eAAiB,WAAc,QAClCH,KAAMU,aAAcX,aAAeC,KAAMtR,KAAKkX,SAC9C5F,KAAMhR,MAAMmZ,UACZnI,KAAMtR,KAAKmX,cAEjBG,SAASnD,gBACLqD,gBAAkBlG,KAAMtR,KAAK0Z,MAAOzF,MAAO,mBAC3CwD,kBAAoBnG,KAAMtR,KAAK0Z,MAAOzF,MAAO,qBAC7CyD,oBAAsBpG,KAAMtR,KAAK0Z,MAAOzF,MAAO,uBAC/C0D,kBAAoBrG,KAAMtR,KAAK0Z,MAAOzF,MAAO,qBAC7C2D,cAAgBtG,KAAMtR,KAAK0Z,MAAOzF,MAAO,iBACzC4D,cAAgBvG,KAAMtR,KAAK0Z,MAAOzF,MAAO,iBACzC6D,gBAAkBxG,KAAMtR,KAAK0Z,MAAOzF,MAAO,mBAC3C8D,gBAAkBzG,KAAMtR,KAAK0Z,MAAOzF,MAAO,mBAC3C+D,gBAAkB1G,KAAMtR,KAAKoU,SAC7BkE,eAAiBhH,KAAMtR,KAAKqX,aAAcpD,MAAO,SAAU,aAC3D0E,eAAiBrH,KAAMtR,KAAKqX,aAAcpD,MAAO,SAAU,aAC3D2E,iBAAmBtH,KAAMtR,KAAKqX,aAAcpD,MAAO,WAAY,aAC/DiF,SAAW5H,KAAMtR,KAAKqX,aAAcpD,MAAO,QAAS,aACpDqF,UAAYhI,KAAMtR,KAAKqX,aAAcpD,MAAO,cAC5CuF,UAAYlI,KAAMtR,KAAKqX,aAAcpD,MAAO,SAAU,cAEnDqD,SAzTkB,GAgUzBqC,eAAgC,WAOhC,OANA,SAAwBjK,QAASkK,UAAWC,kBAAmB1G,QAC3D5S,KAAKmP,QAAUA,QACfnP,KAAKqZ,UAAYA,UACjBrZ,KAAKsZ,kBAAoBA,kBACzBtZ,KAAK4S,OAASA,QALa,GAS/B2G,QAAyB,WACzB,SAASA,QAAQha,UAAWia,YAAaC,cAAeC,GAAIxF,MACxDlU,KAAKT,UAAYA,UACjBS,KAAKwZ,YAAcA,YACnBxZ,KAAKyZ,cAAgBA,cACrBzZ,KAAK0Z,GAAKA,GACV1Z,KAAKkU,KAAOA,KACZlU,KAAK2Z,uBAAyBpN,kBAC9BvM,KAAK4Z,aAAepN,MACpBxM,KAAK6Z,kBAAmB,EACxB7Z,KAAK8Z,sBAAuB,EAC5B9Z,KAAK+Z,yBAA0B,EAC/B/Z,KAAKga,aAAe,KACpBha,KAAKkO,KAAO,KACZlO,KAAKia,YAAc,KACnBja,KAAKka,WAAa,KAClBla,KAAKma,IAAM,IAAIf,mBAAmB,GAAO,GAAO,GAChDpZ,KAAKoa,cAAgB,KACrBpa,KAAKqa,QAAU,KA2QnB,OAtQAd,QAAQ3Z,UAAU0a,SAGlB,WACIta,KAAKT,UAAU6S,aAAapS,MAC5BA,KAAKqa,QAAUra,KAAKyZ,cAAcc,mBAAmBva,KAAKwZ,YAAa,IAAIJ,mBAAmB,GAAO,GAAO,KAEhH5Y,OAAO4S,eAAemG,QAAQ3Z,UAAW,eACrCyT,IAIA,SAAUmH,YACNxa,KAAKga,aAAeQ,WACpBxa,KAAKya,wBAETnH,YAAY,EACZC,cAAc,IAElB/S,OAAO4S,eAAemG,QAAQ3Z,UAAW,gBACrCyT,IAIA,SAAUpP,OACN,IAAI0D,MAAQ3H,KACRA,KAAKga,cAA2D,mBAApCha,KAAKga,aAAa3M,cAC9CrN,KAAKkU,KAAKY,IAAI,WAEV,IAAI4F,YAAc/S,MAAMqS,cAAmCrS,MAAMqS,aAA2B,cAAE/V,OAC1FyW,aACA/S,MAAMpI,UAAUgT,WAAWmI,aAAa,KAI1C1a,KAAKga,eACXha,KAAKoa,cAAgBnW,QAG7BqP,YAAY,EACZC,cAAc,IAMlBgG,QAAQ3Z,UAAUgQ,OAIlB,SAAU1B,MACN,IAAIvG,MAAQ3H,MACPqF,MAAM6I,OAASA,KAAKrM,QAAU7B,KAAK2Z,wBAA0B3Z,KAAKkO,OAASA,MACxElO,KAAKia,cACLja,KAAKia,YAAYjU,cACjBhG,KAAKia,YAAc,MAElBja,KAAKma,IAAId,YACNrZ,KAAK+Z,0BACL/Z,KAAKma,IAAIhL,YAEbnP,KAAKma,IAAId,WAAY,EACrBrZ,KAAKma,IAAIb,mBAAoB,EAC7BtZ,KAAK2a,mBAEL3a,KAAKka,YACLla,KAAKka,WAAWlU,cAEpBhG,KAAKia,YAAc1V,MAAMvE,KAAK4Z,cAAchQ,KAAK3J,UAAU4Y,KAAK,IAAI/P,UAAU,WAC1EnB,MAAMiT,oBAAoB1M,UAGxB7I,MAAM6I,OAASA,KAAKrM,OAAS7B,KAAK2Z,yBACxC3Z,KAAKyS,QACLzS,KAAKkO,KAAO,KAMpBqL,QAAQ3Z,UAAU6S,MAGlB,WACI,IAAI9K,MAAQ3H,KACRA,KAAKia,aACLja,KAAKia,YAAYjU,cAErBhG,KAAKka,WAAa3V,MApiDN,IAoiD2BqF,KAAK3J,UAAU4Y,KAAK,IAAI/P,UAAU,WACrEnB,MAAMkT,YAMdtB,QAAQ3Z,UAAUuT,KAGlB,WACSnT,KAAKma,IAAIb,mBACVtZ,KAAK4P,OAAO,IAEhB5P,KAAK2a,mBAMTpB,QAAQ3Z,UAAUgT,OAIlB,SAAUO,MACNnT,KAAKma,IAAIvH,OAASO,MAKtBoG,QAAQ3Z,UAAUib,OAGlB,WACQ7a,KAAKia,cACLja,KAAKia,YAAYjU,cACjBhG,KAAKia,YAAc,MAEnBja,KAAK8a,aACL9a,KAAK8a,YAAY9N,SAErBhN,KAAKyZ,cAAchH,QACnBzS,KAAKqa,QAAU,MAMnBd,QAAQ3Z,UAAUgb,oBAIlB,SAAU1M,MAEF7I,MAAM6I,OAASA,KAAKrM,OAAS7B,KAAK2Z,uBAClC3Z,KAAKma,IAAId,WAAY,GAGzBrZ,KAAKkO,KAAOA,KACRlO,KAAKga,cACLha,KAAKga,aAAapK,OAAO1B,QAMjCqL,QAAQ3Z,UAAU+a,gBAGlB,WAES3a,KAAKqa,QAGAra,KAAKqa,QAAQU,YAGnB/a,KAAa,QAAEuI,QAAQqK,OAAS5S,KAAKma,IAAIvH,OACvC5S,KAAa,QAAEuI,QAAQ4G,QAAUnP,KAAKma,IAAIhL,QAC1CnP,KAAa,QAAEuI,QAAQ8Q,UAAYrZ,KAAKma,IAAId,UAC5CrZ,KAAa,QAAEuI,QAAQ+Q,kBAAoBtZ,KAAKma,IAAIb,kBACtDtZ,KAAKqa,QAAQW,iBATbhb,KAAKqa,QAAUra,KAAKyZ,cAAcc,mBAAmBva,KAAKwZ,YAAaxZ,KAAKma,KAWhFna,KAAK0Z,GAAGuB,gBAKZ1B,QAAQ3Z,UAAUsb,kBAGlB,WACI,IAAIvT,MAAQ3H,KACZ,IAAKA,KAAKma,IAAIhL,UAAYnP,KAAKkO,KAC3B,OAAO,KAGX,IAAIiN,UAAYnb,KAAKma,IAAIhL,QAAQgG,UAAU,SAAU9G,MAAQ,OAAOA,KAAKL,MAAMQ,gBAAqC7G,MAAW,KAAEyT,sBASjI,OAPID,UAAY,IACZA,UAAYnb,KAAKma,IAAIhL,QAAQgG,UAAU,SAAU9G,MAAQ,OAAOA,KAAKL,MAAMQ,cAAc6M,WAA8B1T,MAAW,KAAEyT,wBAGpID,UAAY,IACZA,UAAYnb,KAAKma,IAAIhL,QAAQgG,UAAU,SAAU9G,MAAQ,OAAOA,KAAKL,MAAMQ,cAAc8M,SAA4B3T,MAAW,KAAEyT,wBAE/HD,UAAY,EAAI,KAAOA,WAKlC5B,QAAQ3Z,UAAU6a,qBAGlB,WACI,IAAI9S,MAAQ3H,KACRA,KAAKga,eACLha,KAAKga,aACAlR,UAAU,SAAUqG,SACrBxH,MAAMwS,IAAIb,mBAAoB,EAC9B3R,MAAMwS,IAAId,WAAY,EACtB1R,MAAMwS,IAAIhL,QAAUA,QAChBxH,MAAMkS,kBAAoB1K,SACP,IAAnBA,QAAQtN,QAAgBsN,QAAQ,GAAGnB,QAClC3I,MAAMsC,MAAMuG,OACbiB,QAAQ,GAAGnB,MAAMoN,sBAA2CzT,MAAW,KAAEyT,oBAGzEzT,MAAMpI,UAAUgT,WAAWpD,QAAQ,KAGvCxH,MAAMgT,kBACFhT,MAAMmS,uBACNnS,MAAMpI,UAAUoV,mBAAqBhN,MAAMuT,uBAEhD,SAAUhY,OAGT,OAFAqG,QAAQrG,MAAMA,OACdqG,QAAQrG,MAAM,gGAGdlD,KAAKga,aAAa1K,kBAClBtP,KAAKga,aAAa1K,iBAAiBxG,UAAU,WACzCnB,MAAMuG,KAAO,KACbvG,MAAMwS,IAAIb,mBAAoB,EAC9B3R,MAAMwS,IAAId,WAAY,EACtB1R,MAAMwS,IAAIhL,WACVxH,MAAMgT,kBACNhT,MAAMpI,UAAUmT,yBAKhC6G,QAAQzI,aACFC,KAAMtR,KAAKgU,UAAWC,OACZC,SAAU,gBAI1B4F,QAAQrI,eAAiB,WAAc,QACjCH,KAAMU,aAAcX,aAAeC,KAAMtR,KAAKkX,SAC9C5F,KAAMtR,KAAK8b,cACXxK,KAAMtR,KAAK+b,mBACXzK,KAAMtR,KAAKgc,oBACX1K,KAAMtR,KAAKoX,UAEjB0C,QAAQ3F,gBACJ+F,yBAA2B5I,KAAMtR,KAAK0Z,QACtCS,eAAiB7I,KAAMtR,KAAK0Z,QAC5BU,mBAAqB9I,KAAMtR,KAAK0Z,QAChCW,uBAAyB/I,KAAMtR,KAAK0Z,QACpCY,0BAA4BhJ,KAAMtR,KAAK0Z,QACvC2B,cAAgB/J,KAAMtR,KAAK0Z,MAAOzF,MAAO,aACzCgI,eAAiB3K,KAAMtR,KAAK0Z,MAAOzF,MAAO,0BAEvC6F,QA7RiB,GAoSxBoC,OAAwB,WACxB,SAASA,OAAO1H,GAAI2H,SAAU9J,UAC1B9R,KAAKiU,GAAKA,GACVjU,KAAK4b,SAAWA,SAChB5b,KAAK8R,SAAWA,SAChB9R,KAAK0R,UAAW,EAChB1R,KAAK6b,UAAY,EACjB7b,KAAK8b,MAAQ,KAqHjB,OAhHAH,OAAO/b,UAAU0U,YAGjB,WACQtU,KAAK6b,WACL7b,KAAK8R,SAASuD,cAAcrV,KAAK6b,YAGzCrb,OAAO4S,eAAeuI,OAAO/b,UAAW,UACpCyT,IAIA,SAAUnO,OACNlF,KAAK6b,UAAY3W,MACjBlF,KAAK8R,SAASmD,YAAY,IAAInB,WAAW9T,KAAMA,KAAK6b,aAExDvI,YAAY,EACZC,cAAc,IAElB/S,OAAO4S,eAAeuI,OAAO/b,UAAW,YACpCyT,IAIA,SAAUhF,MACNrO,KAAK8b,MAAQzN,MAEjBiF,YAAY,EACZC,cAAc,IAMlBoI,OAAO/b,UAAUqZ,QAIjB,SAAUjE,OACNhV,KAAK8R,SAASS,WAAWvS,KAAK8b,QAMlCH,OAAO/b,UAAUmc,aAIjB,SAAU/G,OACNhV,KAAK8R,SAAS0B,aAAaxT,KAAK6b,YAMpCF,OAAO/b,UAAUmV,YAIjB,SAAUC,OACNhV,KAAK8R,SAASuE,gBAMlBsF,OAAO/b,UAAU6V,eAIjB,SAAU/D,UACN1R,KAAK0R,SAAWA,SAChB1R,KAAK4b,SAASI,gBAAgBhc,KAAKiU,GAAGS,cAAe,yBAA0B1U,KAAK0R,WAKxFiK,OAAO/b,UAAUkW,iBAGjB,WACI,OAAO9V,KAAKiU,GAAGS,eAKnBiH,OAAO/b,UAAU8V,YAGjB,WACI,OAAO1V,KAAK8b,OAEhBH,OAAO7K,aACDC,KAAMtR,KAAKgU,UAAWC,OACZC,SAAU,eAI1BgI,OAAOzK,eAAiB,WAAc,QAChCH,KAAMtR,KAAKmX,aACX7F,KAAMtR,KAAKwc,WACXlL,KAAMiD,YAAalD,aAAeC,KAAMtR,KAAKkX,UAEnDgF,OAAO/H,gBACHsI,SAAWnL,KAAMtR,KAAK0Z,QACtBgD,WAAapL,KAAMtR,KAAK0Z,QACxBF,UAAYlI,KAAMtR,KAAKqX,aAAcpD,MAAO,SAAU,aACtDqI,eAAiBhL,KAAMtR,KAAKqX,aAAcpD,MAAO,cAAe,aAChEqB,cAAgBhE,KAAMtR,KAAKqX,aAAcpD,MAAO,aAAc,cAE3DiI,OA5HgB,GAmIvBS,qBAAsC,WACtC,SAASA,uBACLpc,KAAKqc,KAAO,GACZrc,KAAK6X,UAAY,GACjB7X,KAAKsc,WAAa,GAClBtc,KAAK+Q,KAAO,GACZ/Q,KAAKuc,SAmDT,OA9CAH,qBAAqBxc,UAAU0a,SAG/B,WACI,GAAKta,KAAK6X,UAAV,CAUA,IALA,IAAI2E,SAAWxc,KAAKqc,KAAK7N,cAErBiO,SAAWD,SAASrV,QAAQnH,KAAK6X,UAAUrJ,eAE3CkO,WAAa,EACVD,UAAY,GAAG,CAElB,IAAIE,UAAY3c,KAAKqc,KAAK1R,MAAM8R,SAAUA,SAAWzc,KAAK6X,UAAUhW,QACpE,GAAiB,IAAb4a,SACAzc,KAAKuc,MAAM7V,MAAOkW,SAAS,EAAMP,KAAMM,YACvCD,YAAc1c,KAAK6X,UAAUhW,YAE5B,GAAI4a,SAAW,EAAG,CAEnB,IAAII,UAAY7c,KAAKqc,KAAK1R,MAAM+R,WAAYD,UAC5Czc,KAAKuc,MAAM7V,MAAOkW,SAAS,EAAOP,KAAMQ,YACxC7c,KAAKuc,MAAM7V,MAAOkW,SAAS,EAAMP,KAAMM,YACvCD,YAAc1c,KAAK6X,UAAUhW,OAASgb,UAAUhb,OAEpD4a,SAAWD,SAASrV,QAAQnH,KAAK6X,UAAUrJ,cAAekO,YAE1DA,WAAa1c,KAAKqc,KAAKxa,QACvB7B,KAAKuc,MAAM7V,MAAOkW,SAAS,EAAOP,KAAMrc,KAAKqc,KAAK1R,MAAM+R,WAAY1c,KAAKqc,KAAKxa,eA1B9E7B,KAAKuc,MAAM7V,MAAOkW,SAAS,EAAOP,KAAMrc,KAAKqc,QA6BrDD,qBAAqBtL,aACfC,KAAMtR,KAAKqd,UAAWpJ,OACZC,SAAU,sBACVoJ,SAAU,mTAG1BX,qBAAqBxI,gBACjByI,OAAStL,KAAMtR,KAAK0Z,QACpBtB,YAAc9G,KAAMtR,KAAK0Z,QACzBmD,aAAevL,KAAMtR,KAAK0Z,QAC1BpI,OAASA,KAAMtR,KAAK0Z,SAEjBiD,qBAzD8B,GAiErCY,OAAS,aAITC,kCACAC,OAAO,EACPC,QAASpd,MAAMqd,kBACfC,YAAa5d,KAAK6d,WAAW,WAAc,OAAOC,gBAElDA,aAA8B,WAC9B,SAASA,aAAaC,iBAAkBC,KACpCzd,KAAKwd,iBAAmBA,iBACxBxd,KAAKyd,IAAMA,IACXzd,KAAK0d,UAAY,GACjB1d,KAAK2d,QAAU,GACf3d,KAAK4d,MAAQpR,MACbxM,KAAK6d,gBAAkBtR,kBACvBvM,KAAK8d,SAAWxR,UAChBtM,KAAKmX,mBAAoB,EACzBnX,KAAKiX,eAAgB,EACrBjX,KAAKkX,iBAAkB,EACvBlX,KAAKoX,iBAAkB,EACvBpX,KAAK+d,YAAc,GACnB/d,KAAKge,WAAY,EACjBhe,KAAKie,cAAe,EACpBje,KAAKke,WAAY,EACjBle,KAAKqX,aAAc,EACnBrX,KAAKsX,aAAc,EACnBtX,KAAKuX,eAAgB,EACrBvX,KAAKwX,eAAgB,EACrBxX,KAAKme,eAAgB,EACrBne,KAAK0R,SAAW,IAAIjS,KAAK8P,aACzBvP,KAAK2R,YAAc,IAAIlS,KAAK8P,aAC5BvP,KAAKoe,UAAY,IAAI3e,KAAK8P,aAC1BvP,KAAKqe,MAAQ,IAAI5e,KAAK8P,aACtBvP,KAAKse,WAAa,IAAI7e,KAAK8P,aAC3BvP,KAAK4R,OAAS,IAAInS,KAAK8P,aACvBvP,KAAKue,MAAQ,IAAI9e,KAAK8P,aACtBvP,KAAKwe,QAAU,IAAI/e,KAAK8P,aACxBvP,KAAKye,QAAU,IAAI1e,MAAM2e,YAAY,IACrC1e,KAAK2e,kBAAmB,EACxB3e,KAAK4e,kBAAmB,EACxB5e,KAAK6e,eAAiBnS,gBACtB1M,KAAK8e,eAAiBrS,eACtBzM,KAAK+e,mBAAqB/B,OAC1Bhd,KAAKgf,kBAAoBhC,OACzBhd,KAAKif,QAAS,EACdjf,KAAKkf,OAAQ,EACblf,KAAK0X,WAAa,GAuXtB,OArXAlX,OAAO4S,eAAemK,aAAa3d,UAAW,SAC1C+Q,IAGA,WAAc,OAAO3Q,KAAK6X,WAC1BxE,IAIA,SAAU8L,GACFA,IAAMnf,KAAK6X,YACX7X,KAAK6X,UAAYsH,GAGrBnf,KAAKgf,kBAAkBG,IAE3B7L,YAAY,EACZC,cAAc,IAElB/S,OAAO4S,eAAemK,aAAa3d,UAAW,aAC1C+Q,IAGA,WACI,OAAO3Q,KAAK0X,YAEhBrE,IAIA,SAAUpP,OACe,iBAAVA,OAAsBoB,MAAMpB,OACnCjE,KAAK0X,WAAazT,MAGlBjE,KAAK0X,WAAa/J,KAAKC,UAAU3J,QAGzCqP,YAAY,EACZC,cAAc,IAKlBgK,aAAa3d,UAAU2U,gBAGvB,WACQvU,KAAKke,YACLle,KAAKif,QAAS,IAMtB1B,aAAa3d,UAAUwf,mBAGvB,WACI,IAAIzX,MAAQ3H,KACRA,KAAKif,QACLne,WAAW,WACD6G,MAAM0X,WACR1X,MAAM0X,SAAS3K,cAAckE,QAC7BjR,MAAMsX,QAAS,IAEpB,IAMX1B,aAAa3d,UAAU0f,UAGvB,WACItf,KAAK+e,sBAMTxB,aAAa3d,UAAU2f,WAIvB,SAAUtb,OACNjE,KAAK6X,UAAY5T,OAMrBsZ,aAAa3d,UAAU4f,iBAIvB,SAAUje,IACNvB,KAAKgf,kBAAoBzd,IAM7Bgc,aAAa3d,UAAU6f,kBAIvB,SAAUle,IACNvB,KAAK+e,mBAAqBxd,IAM9Bgc,aAAa3d,UAAU8f,iBAIvB,SAAUC,YACN3f,KAAKie,aAAe0B,YAExBnf,OAAO4S,eAAemK,aAAa3d,UAAW,cAC1CyT,IAIA,SAAUjK,QACFA,SACIA,kBAAkB5D,MAClBxF,KAAK8a,YAAc9a,KAAKwd,iBAAiBjM,MAAMnI,QAG/CpJ,KAAK8a,YADoB,iBAAb,OACO9a,KAAKwd,iBAAiBhM,OAAOpI,QAGZ,SAIhDkK,YAAY,EACZC,cAAc,IAElB/S,OAAO4S,eAAemK,aAAa3d,UAAW,iBAC1CyT,IAIA,SAAUgJ,MACFrc,KAAK6e,iBAAmBxC,OACxBrc,KAAK6e,eAAiBxC,KACtBrc,KAAK4e,mBAAqB5e,KAAK6e,gBAA0C,UAAxB7e,KAAK6e,iBAG9DvL,YAAY,EACZC,cAAc,IAElB/S,OAAO4S,eAAemK,aAAa3d,UAAW,iBAC1CyT,IAIA,SAAUgJ,MACFrc,KAAK8e,iBAAmBzC,OACxBrc,KAAK8e,eAAiBzC,KACtBrc,KAAK2e,mBAAqB3e,KAAK8e,gBAA0C,UAAxB9e,KAAK8e,iBAG9DxL,YAAY,EACZC,cAAc,IAKlBgK,aAAa3d,UAAU0a,SAGvB,WACI,IAAI3S,MAAQ3H,KACPA,KAAKT,YAGVS,KAAKT,UAAUmS,SAAS5I,UAAU,SAAUuF,MACxC1G,MAAM+J,SAAS7B,KAAKxB,QAExBrO,KAAKT,UAAUoS,YAAY7I,UAAU,SAAUuF,MAC3C1G,MAAMgK,YAAY9B,KAAKxB,QAE3BrO,KAAKT,UAAUqS,OAAO9I,UAAU,SAAU8J,QACtCjL,MAAMuX,MAAQtM,OACdjL,MAAMiK,OAAO/B,KAAK+C,YAM1B2K,aAAa3d,UAAU+Y,OAGvB,WACI3Y,KAAKoe,UAAUvO,OACf7P,KAAKsf,YACLtf,KAAKyd,IAAIzC,iBAKbuC,aAAa3d,UAAUggB,QAGvB,WACI5f,KAAKse,WAAWzO,OAChB7P,KAAKsf,aAMT/B,aAAa3d,UAAUqZ,QAIvB,SAAUjE,OACNhV,KAAKqe,MAAMxO,KAAKmF,OAChBhV,KAAKsf,aAMT/B,aAAa3d,UAAUigB,QAIvB,SAAU7K,OACNhV,KAAKue,MAAM1O,KAAKmF,OAChBA,MAAMmD,mBAMVoF,aAAa3d,UAAUkgB,UAIvB,SAAU9K,OACNhV,KAAKwe,QAAQ3O,KAAKmF,OAClBA,MAAMmD,mBAMVoF,aAAa3d,UAAUmgB,SAIvB,SAAU9b,OACNjE,KAAKiE,MAAQA,OAKjBsZ,aAAa3d,UAAUuT,KAGvB,WACSnT,KAAKT,WAGVS,KAAKT,UAAU4T,QAKnBoK,aAAa3d,UAAUogB,MAGvB,WACShgB,KAAKT,WAGVS,KAAKT,UAAUkT,SAKnB8K,aAAa3d,UAAUgZ,MAGvB,WACQ5Y,KAAKqf,SACLrf,KAAKqf,SAAS3K,cAAckE,QAG5B5Y,KAAKif,QAAS,GAMtB1B,aAAa3d,UAAUqgB,KAGvB,WACQjgB,KAAKqf,SACLrf,KAAKqf,SAAS3K,cAAcuL,OAG5BjgB,KAAKif,QAAS,GAMtB1B,aAAa3d,UAAUgT,OAGvB,WACI,OAAO5S,KAAKkf,OAEhB3B,aAAazM,aACPC,KAAMtR,KAAKqd,UAAWpJ,OACZC,SAAU,gBACVoJ,SAAU,ohHACVmD,QAAS,y/BACTC,WAAYlD,sCAI5BM,aAAarM,eAAiB,WAAc,QACtCH,KAAMK,mBACNL,KAAMtR,KAAKgc,qBAEjB8B,aAAa3J,gBACTkH,cAAgB/J,KAAMtR,KAAK0Z,QAC3BuE,YAAc3M,KAAMtR,KAAK0Z,QACzBwE,UAAY5M,KAAMtR,KAAK0Z,QACvByE,QAAU7M,KAAMtR,KAAK0Z,QACrB0E,kBAAoB9M,KAAMtR,KAAK0Z,QAC/B2E,WAAa/M,KAAMtR,KAAK0Z,QACxBhC,oBAAsBpG,KAAMtR,KAAK0Z,QACjClC,gBAAkBlG,KAAMtR,KAAK0Z,QAC7BjC,kBAAoBnG,KAAMtR,KAAK0Z,QAC/B/B,kBAAoBrG,KAAMtR,KAAK0Z,QAC/B4E,cAAgBhN,KAAMtR,KAAK0Z,QAC3BmD,aAAevL,KAAMtR,KAAK0Z,QAC1BiH,gBAAkBrP,KAAMtR,KAAK0Z,QAC7B6E,YAAcjN,KAAMtR,KAAK0Z,QACzB8E,eAAiBlN,KAAMtR,KAAK0Z,QAC5BkH,aAAetP,KAAMtR,KAAK0Z,QAC1B+E,YAAcnN,KAAMtR,KAAK0Z,QACzB9B,cAAgBtG,KAAMtR,KAAK0Z,QAC3B7B,cAAgBvG,KAAMtR,KAAK0Z,QAC3B5B,gBAAkBxG,KAAMtR,KAAK0Z,QAC7B3B,gBAAkBzG,KAAMtR,KAAK0Z,QAC7BuC,eAAiB3K,KAAMtR,KAAK0Z,QAC5BgF,gBAAkBpN,KAAMtR,KAAK0Z,QAC7BzH,WAAaX,KAAMtR,KAAKoU,SACxBlC,cAAgBZ,KAAMtR,KAAKoU,SAC3BuK,YAAcrN,KAAMtR,KAAKoU,OAAQH,MAAO,UACxC2K,QAAUtN,KAAMtR,KAAKoU,SACrByK,aAAevN,KAAMtR,KAAKoU,OAAQH,MAAO,WACzC9B,SAAWb,KAAMtR,KAAKoU,SACtB0K,QAAUxN,KAAMtR,KAAKoU,SACrB2K,UAAYzN,KAAMtR,KAAKoU,SACvBtU,YAAcwR,KAAMtR,KAAK6gB,UAAW5M,MAAOjC,gBAC3C4N,WAAatO,KAAMtR,KAAK6gB,UAAW5M,MAAO,cAC1C6M,aAAexP,KAAMtR,KAAK0Z,QAC1BqH,gBAAkBzP,KAAMtR,KAAK0Z,QAC7BsH,gBAAkB1P,KAAMtR,KAAK0Z,SAE1BoE,aA9ZsB,GAsa7B4C,WACA/O,iBACAP,iBACAI,mBAEAyP,mBAAoC,WACpC,SAASA,sBAqDT,OAhDAA,mBAAmBC,QAGnB,WACI,OACIC,SAAUF,mBACVP,UAAWA,YAMnBO,mBAAmBG,SAGnB,WACI,OACID,SAAUF,mBACVP,UAAWA,YAGnBO,mBAAmB5P,aACbC,KAAMtR,KAAKqhB,SAAUpN,OACXqN,cACI3E,qBACA3K,aACAuC,YACA+C,SACAwC,QACAoC,OACA4B,cAEJte,SACImd,qBACA3K,aACAuC,YACA+C,SACAwC,QACAoC,OACA4B,cAEJyD,SACInhB,OAAOohB,aACPlhB,MAAMmhB,aAEVf,UAAWA,cAGpBO,mBAtD4B,GAyDvCzhB,QAAQoQ,UAAYA,UACpBpQ,QAAQ6Q,WAAaA,WACrB7Q,QAAQ4R,iBAAmBA,iBAC3B5R,QAAQgS,kBAAoBA,kBAC5BhS,QAAQmS,iBAAmBA,iBAC3BnS,QAAQwS,aAAeA,aACvBxS,QAAQ+U,YAAcA,YACtB/U,QAAQ8X,SAAWA,SACnB9X,QAAQsa,QAAUA,QAClBta,QAAQ0c,OAASA,OACjB1c,QAAQmd,qBAAuBA,qBAC/Bnd,QAAQse,aAAeA,aACvBte,QAAQyhB,mBAAqBA,mBAC7BzhB,QAAQkiB,GAAK/H,eACbna,QAAQmiB,GAAKzU,kBAEbnM,OAAO4S,eAAenU,QAAS,cAAgBgF,OAAO","file":"ng2-completer.umd.min.js.map","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs/operators'), require('@angular/common/http'), require('@angular/forms'), require('@angular/common')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs/operators', '@angular/common/http', '@angular/forms', '@angular/common'], factory) :\n    (factory((global.ng2 = global.ng2 || {}, global.ng2.completer = {}),global.ng.core,global.Rx.Observable.prototype,global.ng.common.http,global.ng.forms,global.ng.common));\n}(this, (function (exports,core,operators,http,forms,common) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\n\n    /** PURE_IMPORTS_START  PURE_IMPORTS_END */\n    function isFunction(x) {\n        return typeof x === 'function';\n    }\n\n    /** PURE_IMPORTS_START  PURE_IMPORTS_END */\n    var _enable_super_gross_mode_that_will_cause_bad_things = false;\n    var config = {\n        Promise: undefined,\n        set useDeprecatedSynchronousErrorHandling(value) {\n            if (value) {\n                var error = /*@__PURE__*/ new Error();\n                /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n            }\n            else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n                /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');\n            }\n            _enable_super_gross_mode_that_will_cause_bad_things = value;\n        },\n        get useDeprecatedSynchronousErrorHandling() {\n            return _enable_super_gross_mode_that_will_cause_bad_things;\n        },\n    };\n\n    /** PURE_IMPORTS_START  PURE_IMPORTS_END */\n    function hostReportError(err) {\n        setTimeout(function () { throw err; });\n    }\n\n    /** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */\n    var empty = {\n        closed: true,\n        next: function (value) { },\n        error: function (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        },\n        complete: function () { }\n    };\n\n    /** PURE_IMPORTS_START  PURE_IMPORTS_END */\n    var isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n\n    /** PURE_IMPORTS_START  PURE_IMPORTS_END */\n    function isObject(x) {\n        return x != null && typeof x === 'object';\n    }\n\n    /** PURE_IMPORTS_START  PURE_IMPORTS_END */\n    var errorObject = { e: {} };\n\n    /** PURE_IMPORTS_START _errorObject PURE_IMPORTS_END */\n    var tryCatchTarget;\n    function tryCatcher() {\n        try {\n            return tryCatchTarget.apply(this, arguments);\n        }\n        catch (e) {\n            errorObject.e = e;\n            return errorObject;\n        }\n    }\n    function tryCatch(fn) {\n        tryCatchTarget = fn;\n        return tryCatcher;\n    }\n\n    /** PURE_IMPORTS_START  PURE_IMPORTS_END */\n    function UnsubscriptionErrorImpl(errors) {\n        Error.call(this);\n        this.message = errors ?\n            errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n        return this;\n    }\n    UnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\n    var UnsubscriptionError = UnsubscriptionErrorImpl;\n\n    /** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_tryCatch,_util_errorObject,_util_UnsubscriptionError PURE_IMPORTS_END */\n    var Subscription = /*@__PURE__*/ (function () {\n        function Subscription(unsubscribe) {\n            this.closed = false;\n            this._parent = null;\n            this._parents = null;\n            this._subscriptions = null;\n            if (unsubscribe) {\n                this._unsubscribe = unsubscribe;\n            }\n        }\n        Subscription.prototype.unsubscribe = function () {\n            var hasErrors = false;\n            var errors;\n            if (this.closed) {\n                return;\n            }\n            var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n            this.closed = true;\n            this._parent = null;\n            this._parents = null;\n            this._subscriptions = null;\n            var index = -1;\n            var len = _parents ? _parents.length : 0;\n            while (_parent) {\n                _parent.remove(this);\n                _parent = ++index < len && _parents[index] || null;\n            }\n            if (isFunction(_unsubscribe)) {\n                var trial = tryCatch(_unsubscribe).call(this);\n                if (trial === errorObject) {\n                    hasErrors = true;\n                    errors = errors || (errorObject.e instanceof UnsubscriptionError ?\n                        flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]);\n                }\n            }\n            if (isArray(_subscriptions)) {\n                index = -1;\n                len = _subscriptions.length;\n                while (++index < len) {\n                    var sub = _subscriptions[index];\n                    if (isObject(sub)) {\n                        var trial = tryCatch(sub.unsubscribe).call(sub);\n                        if (trial === errorObject) {\n                            hasErrors = true;\n                            errors = errors || [];\n                            var err = errorObject.e;\n                            if (err instanceof UnsubscriptionError) {\n                                errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                            }\n                            else {\n                                errors.push(err);\n                            }\n                        }\n                    }\n                }\n            }\n            if (hasErrors) {\n                throw new UnsubscriptionError(errors);\n            }\n        };\n        Subscription.prototype.add = function (teardown) {\n            if (!teardown || (teardown === Subscription.EMPTY)) {\n                return Subscription.EMPTY;\n            }\n            if (teardown === this) {\n                return this;\n            }\n            var subscription = teardown;\n            switch (typeof teardown) {\n                case 'function':\n                    subscription = new Subscription(teardown);\n                case 'object':\n                    if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                        return subscription;\n                    }\n                    else if (this.closed) {\n                        subscription.unsubscribe();\n                        return subscription;\n                    }\n                    else if (typeof subscription._addParent !== 'function') {\n                        var tmp = subscription;\n                        subscription = new Subscription();\n                        subscription._subscriptions = [tmp];\n                    }\n                    break;\n                default:\n                    throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n            var subscriptions = this._subscriptions || (this._subscriptions = []);\n            subscriptions.push(subscription);\n            subscription._addParent(this);\n            return subscription;\n        };\n        Subscription.prototype.remove = function (subscription) {\n            var subscriptions = this._subscriptions;\n            if (subscriptions) {\n                var subscriptionIndex = subscriptions.indexOf(subscription);\n                if (subscriptionIndex !== -1) {\n                    subscriptions.splice(subscriptionIndex, 1);\n                }\n            }\n        };\n        Subscription.prototype._addParent = function (parent) {\n            var _a = this, _parent = _a._parent, _parents = _a._parents;\n            if (!_parent || _parent === parent) {\n                this._parent = parent;\n            }\n            else if (!_parents) {\n                this._parents = [parent];\n            }\n            else if (_parents.indexOf(parent) === -1) {\n                _parents.push(parent);\n            }\n        };\n        Subscription.EMPTY = (function (empty) {\n            empty.closed = true;\n            return empty;\n        }(new Subscription()));\n        return Subscription;\n    }());\n    function flattenUnsubscriptionErrors(errors) {\n        return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n    }\n\n    /** PURE_IMPORTS_START  PURE_IMPORTS_END */\n    var rxSubscriber = typeof Symbol === 'function'\n        ? /*@__PURE__*/ Symbol('rxSubscriber')\n        : '@@rxSubscriber_' + /*@__PURE__*/ Math.random();\n\n    /** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */\n    var Subscriber = /*@__PURE__*/ (function (_super) {\n        __extends(Subscriber, _super);\n        function Subscriber(destinationOrNext, error, complete) {\n            var _this = _super.call(this) || this;\n            _this.syncErrorValue = null;\n            _this.syncErrorThrown = false;\n            _this.syncErrorThrowable = false;\n            _this.isStopped = false;\n            _this._parentSubscription = null;\n            switch (arguments.length) {\n                case 0:\n                    _this.destination = empty;\n                    break;\n                case 1:\n                    if (!destinationOrNext) {\n                        _this.destination = empty;\n                        break;\n                    }\n                    if (typeof destinationOrNext === 'object') {\n                        if (destinationOrNext instanceof Subscriber) {\n                            _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                            _this.destination = destinationOrNext;\n                            destinationOrNext.add(_this);\n                        }\n                        else {\n                            _this.syncErrorThrowable = true;\n                            _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                        }\n                        break;\n                    }\n                default:\n                    _this.syncErrorThrowable = true;\n                    _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                    break;\n            }\n            return _this;\n        }\n        Subscriber.prototype[rxSubscriber] = function () { return this; };\n        Subscriber.create = function (next, error, complete) {\n            var subscriber = new Subscriber(next, error, complete);\n            subscriber.syncErrorThrowable = false;\n            return subscriber;\n        };\n        Subscriber.prototype.next = function (value) {\n            if (!this.isStopped) {\n                this._next(value);\n            }\n        };\n        Subscriber.prototype.error = function (err) {\n            if (!this.isStopped) {\n                this.isStopped = true;\n                this._error(err);\n            }\n        };\n        Subscriber.prototype.complete = function () {\n            if (!this.isStopped) {\n                this.isStopped = true;\n                this._complete();\n            }\n        };\n        Subscriber.prototype.unsubscribe = function () {\n            if (this.closed) {\n                return;\n            }\n            this.isStopped = true;\n            _super.prototype.unsubscribe.call(this);\n        };\n        Subscriber.prototype._next = function (value) {\n            this.destination.next(value);\n        };\n        Subscriber.prototype._error = function (err) {\n            this.destination.error(err);\n            this.unsubscribe();\n        };\n        Subscriber.prototype._complete = function () {\n            this.destination.complete();\n            this.unsubscribe();\n        };\n        Subscriber.prototype._unsubscribeAndRecycle = function () {\n            var _a = this, _parent = _a._parent, _parents = _a._parents;\n            this._parent = null;\n            this._parents = null;\n            this.unsubscribe();\n            this.closed = false;\n            this.isStopped = false;\n            this._parent = _parent;\n            this._parents = _parents;\n            this._parentSubscription = null;\n            return this;\n        };\n        return Subscriber;\n    }(Subscription));\n    var SafeSubscriber = /*@__PURE__*/ (function (_super) {\n        __extends(SafeSubscriber, _super);\n        function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n            var _this = _super.call(this) || this;\n            _this._parentSubscriber = _parentSubscriber;\n            var next;\n            var context = _this;\n            if (isFunction(observerOrNext)) {\n                next = observerOrNext;\n            }\n            else if (observerOrNext) {\n                next = observerOrNext.next;\n                error = observerOrNext.error;\n                complete = observerOrNext.complete;\n                if (observerOrNext !== empty) {\n                    context = Object.create(observerOrNext);\n                    if (isFunction(context.unsubscribe)) {\n                        _this.add(context.unsubscribe.bind(context));\n                    }\n                    context.unsubscribe = _this.unsubscribe.bind(_this);\n                }\n            }\n            _this._context = context;\n            _this._next = next;\n            _this._error = error;\n            _this._complete = complete;\n            return _this;\n        }\n        SafeSubscriber.prototype.next = function (value) {\n            if (!this.isStopped && this._next) {\n                var _parentSubscriber = this._parentSubscriber;\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._next, value);\n                }\n                else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                    this.unsubscribe();\n                }\n            }\n        };\n        SafeSubscriber.prototype.error = function (err) {\n            if (!this.isStopped) {\n                var _parentSubscriber = this._parentSubscriber;\n                var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\n                if (this._error) {\n                    if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                        this.__tryOrUnsub(this._error, err);\n                        this.unsubscribe();\n                    }\n                    else {\n                        this.__tryOrSetError(_parentSubscriber, this._error, err);\n                        this.unsubscribe();\n                    }\n                }\n                else if (!_parentSubscriber.syncErrorThrowable) {\n                    this.unsubscribe();\n                    if (useDeprecatedSynchronousErrorHandling) {\n                        throw err;\n                    }\n                    hostReportError(err);\n                }\n                else {\n                    if (useDeprecatedSynchronousErrorHandling) {\n                        _parentSubscriber.syncErrorValue = err;\n                        _parentSubscriber.syncErrorThrown = true;\n                    }\n                    else {\n                        hostReportError(err);\n                    }\n                    this.unsubscribe();\n                }\n            }\n        };\n        SafeSubscriber.prototype.complete = function () {\n            var _this = this;\n            if (!this.isStopped) {\n                var _parentSubscriber = this._parentSubscriber;\n                if (this._complete) {\n                    var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                    if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                        this.__tryOrUnsub(wrappedComplete);\n                        this.unsubscribe();\n                    }\n                    else {\n                        this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                        this.unsubscribe();\n                    }\n                }\n                else {\n                    this.unsubscribe();\n                }\n            }\n        };\n        SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n            try {\n                fn.call(this._context, value);\n            }\n            catch (err) {\n                this.unsubscribe();\n                if (config.useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                else {\n                    hostReportError(err);\n                }\n            }\n        };\n        SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n            if (!config.useDeprecatedSynchronousErrorHandling) {\n                throw new Error('bad call');\n            }\n            try {\n                fn.call(this._context, value);\n            }\n            catch (err) {\n                if (config.useDeprecatedSynchronousErrorHandling) {\n                    parent.syncErrorValue = err;\n                    parent.syncErrorThrown = true;\n                    return true;\n                }\n                else {\n                    hostReportError(err);\n                    return true;\n                }\n            }\n            return false;\n        };\n        SafeSubscriber.prototype._unsubscribe = function () {\n            var _parentSubscriber = this._parentSubscriber;\n            this._context = null;\n            this._parentSubscriber = null;\n            _parentSubscriber.unsubscribe();\n        };\n        return SafeSubscriber;\n    }(Subscriber));\n\n    /** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */\n    function canReportError(observer) {\n        while (observer) {\n            var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;\n            if (closed_1 || isStopped) {\n                return false;\n            }\n            else if (destination && destination instanceof Subscriber) {\n                observer = destination;\n            }\n            else {\n                observer = null;\n            }\n        }\n        return true;\n    }\n\n    /** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */\n    function toSubscriber(nextOrObserver, error, complete) {\n        if (nextOrObserver) {\n            if (nextOrObserver instanceof Subscriber) {\n                return nextOrObserver;\n            }\n            if (nextOrObserver[rxSubscriber]) {\n                return nextOrObserver[rxSubscriber]();\n            }\n        }\n        if (!nextOrObserver && !error && !complete) {\n            return new Subscriber(empty);\n        }\n        return new Subscriber(nextOrObserver, error, complete);\n    }\n\n    /** PURE_IMPORTS_START  PURE_IMPORTS_END */\n    var observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';\n\n    /** PURE_IMPORTS_START  PURE_IMPORTS_END */\n    function noop() { }\n\n    /** PURE_IMPORTS_START _noop PURE_IMPORTS_END */\n    function pipeFromArray(fns) {\n        if (!fns) {\n            return noop;\n        }\n        if (fns.length === 1) {\n            return fns[0];\n        }\n        return function piped(input) {\n            return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n        };\n    }\n\n    /** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_internal_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\n    var Observable = /*@__PURE__*/ (function () {\n        function Observable(subscribe) {\n            this._isScalar = false;\n            if (subscribe) {\n                this._subscribe = subscribe;\n            }\n        }\n        Observable.prototype.lift = function (operator) {\n            var observable$$1 = new Observable();\n            observable$$1.source = this;\n            observable$$1.operator = operator;\n            return observable$$1;\n        };\n        Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n            var operator = this.operator;\n            var sink = toSubscriber(observerOrNext, error, complete);\n            if (operator) {\n                operator.call(sink, this.source);\n            }\n            else {\n                sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                    this._subscribe(sink) :\n                    this._trySubscribe(sink));\n            }\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                if (sink.syncErrorThrowable) {\n                    sink.syncErrorThrowable = false;\n                    if (sink.syncErrorThrown) {\n                        throw sink.syncErrorValue;\n                    }\n                }\n            }\n            return sink;\n        };\n        Observable.prototype._trySubscribe = function (sink) {\n            try {\n                return this._subscribe(sink);\n            }\n            catch (err) {\n                if (config.useDeprecatedSynchronousErrorHandling) {\n                    sink.syncErrorThrown = true;\n                    sink.syncErrorValue = err;\n                }\n                if (canReportError(sink)) {\n                    sink.error(err);\n                }\n                else {\n                    console.warn(err);\n                }\n            }\n        };\n        Observable.prototype.forEach = function (next, promiseCtor) {\n            var _this = this;\n            promiseCtor = getPromiseCtor(promiseCtor);\n            return new promiseCtor(function (resolve, reject) {\n                var subscription;\n                subscription = _this.subscribe(function (value) {\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        if (subscription) {\n                            subscription.unsubscribe();\n                        }\n                    }\n                }, reject, resolve);\n            });\n        };\n        Observable.prototype._subscribe = function (subscriber) {\n            var source = this.source;\n            return source && source.subscribe(subscriber);\n        };\n        Observable.prototype[observable] = function () {\n            return this;\n        };\n        Observable.prototype.pipe = function () {\n            var operations = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                operations[_i] = arguments[_i];\n            }\n            if (operations.length === 0) {\n                return this;\n            }\n            return pipeFromArray(operations)(this);\n        };\n        Observable.prototype.toPromise = function (promiseCtor) {\n            var _this = this;\n            promiseCtor = getPromiseCtor(promiseCtor);\n            return new promiseCtor(function (resolve, reject) {\n                var value;\n                _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n            });\n        };\n        Observable.create = function (subscribe) {\n            return new Observable(subscribe);\n        };\n        return Observable;\n    }());\n    function getPromiseCtor(promiseCtor) {\n        if (!promiseCtor) {\n            promiseCtor = config.Promise || Promise;\n        }\n        if (!promiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return promiseCtor;\n    }\n\n    /** PURE_IMPORTS_START  PURE_IMPORTS_END */\n    function ObjectUnsubscribedErrorImpl() {\n        Error.call(this);\n        this.message = 'object unsubscribed';\n        this.name = 'ObjectUnsubscribedError';\n        return this;\n    }\n    ObjectUnsubscribedErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\n    var ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;\n\n    /** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\n    var SubjectSubscription = /*@__PURE__*/ (function (_super) {\n        __extends(SubjectSubscription, _super);\n        function SubjectSubscription(subject, subscriber) {\n            var _this = _super.call(this) || this;\n            _this.subject = subject;\n            _this.subscriber = subscriber;\n            _this.closed = false;\n            return _this;\n        }\n        SubjectSubscription.prototype.unsubscribe = function () {\n            if (this.closed) {\n                return;\n            }\n            this.closed = true;\n            var subject = this.subject;\n            var observers = subject.observers;\n            this.subject = null;\n            if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n                return;\n            }\n            var subscriberIndex = observers.indexOf(this.subscriber);\n            if (subscriberIndex !== -1) {\n                observers.splice(subscriberIndex, 1);\n            }\n        };\n        return SubjectSubscription;\n    }(Subscription));\n\n    /** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */\n    var SubjectSubscriber = /*@__PURE__*/ (function (_super) {\n        __extends(SubjectSubscriber, _super);\n        function SubjectSubscriber(destination) {\n            var _this = _super.call(this, destination) || this;\n            _this.destination = destination;\n            return _this;\n        }\n        return SubjectSubscriber;\n    }(Subscriber));\n    var Subject = /*@__PURE__*/ (function (_super) {\n        __extends(Subject, _super);\n        function Subject() {\n            var _this = _super.call(this) || this;\n            _this.observers = [];\n            _this.closed = false;\n            _this.isStopped = false;\n            _this.hasError = false;\n            _this.thrownError = null;\n            return _this;\n        }\n        Subject.prototype[rxSubscriber] = function () {\n            return new SubjectSubscriber(this);\n        };\n        Subject.prototype.lift = function (operator) {\n            var subject = new AnonymousSubject(this, this);\n            subject.operator = operator;\n            return subject;\n        };\n        Subject.prototype.next = function (value) {\n            if (this.closed) {\n                throw new ObjectUnsubscribedError();\n            }\n            if (!this.isStopped) {\n                var observers = this.observers;\n                var len = observers.length;\n                var copy = observers.slice();\n                for (var i = 0; i < len; i++) {\n                    copy[i].next(value);\n                }\n            }\n        };\n        Subject.prototype.error = function (err) {\n            if (this.closed) {\n                throw new ObjectUnsubscribedError();\n            }\n            this.hasError = true;\n            this.thrownError = err;\n            this.isStopped = true;\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].error(err);\n            }\n            this.observers.length = 0;\n        };\n        Subject.prototype.complete = function () {\n            if (this.closed) {\n                throw new ObjectUnsubscribedError();\n            }\n            this.isStopped = true;\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].complete();\n            }\n            this.observers.length = 0;\n        };\n        Subject.prototype.unsubscribe = function () {\n            this.isStopped = true;\n            this.closed = true;\n            this.observers = null;\n        };\n        Subject.prototype._trySubscribe = function (subscriber) {\n            if (this.closed) {\n                throw new ObjectUnsubscribedError();\n            }\n            else {\n                return _super.prototype._trySubscribe.call(this, subscriber);\n            }\n        };\n        Subject.prototype._subscribe = function (subscriber) {\n            if (this.closed) {\n                throw new ObjectUnsubscribedError();\n            }\n            else if (this.hasError) {\n                subscriber.error(this.thrownError);\n                return Subscription.EMPTY;\n            }\n            else if (this.isStopped) {\n                subscriber.complete();\n                return Subscription.EMPTY;\n            }\n            else {\n                this.observers.push(subscriber);\n                return new SubjectSubscription(this, subscriber);\n            }\n        };\n        Subject.prototype.asObservable = function () {\n            var observable = new Observable();\n            observable.source = this;\n            return observable;\n        };\n        Subject.create = function (destination, source) {\n            return new AnonymousSubject(destination, source);\n        };\n        return Subject;\n    }(Observable));\n    var AnonymousSubject = /*@__PURE__*/ (function (_super) {\n        __extends(AnonymousSubject, _super);\n        function AnonymousSubject(destination, source) {\n            var _this = _super.call(this) || this;\n            _this.destination = destination;\n            _this.source = source;\n            return _this;\n        }\n        AnonymousSubject.prototype.next = function (value) {\n            var destination = this.destination;\n            if (destination && destination.next) {\n                destination.next(value);\n            }\n        };\n        AnonymousSubject.prototype.error = function (err) {\n            var destination = this.destination;\n            if (destination && destination.error) {\n                this.destination.error(err);\n            }\n        };\n        AnonymousSubject.prototype.complete = function () {\n            var destination = this.destination;\n            if (destination && destination.complete) {\n                this.destination.complete();\n            }\n        };\n        AnonymousSubject.prototype._subscribe = function (subscriber) {\n            var source = this.source;\n            if (source) {\n                return this.source.subscribe(subscriber);\n            }\n            else {\n                return Subscription.EMPTY;\n            }\n        };\n        return AnonymousSubject;\n    }(Subject));\n\n    /** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n    function refCount() {\n        return function refCountOperatorFunction(source) {\n            return source.lift(new RefCountOperator(source));\n        };\n    }\n    var RefCountOperator = /*@__PURE__*/ (function () {\n        function RefCountOperator(connectable) {\n            this.connectable = connectable;\n        }\n        RefCountOperator.prototype.call = function (subscriber, source) {\n            var connectable = this.connectable;\n            connectable._refCount++;\n            var refCounter = new RefCountSubscriber(subscriber, connectable);\n            var subscription = source.subscribe(refCounter);\n            if (!refCounter.closed) {\n                refCounter.connection = connectable.connect();\n            }\n            return subscription;\n        };\n        return RefCountOperator;\n    }());\n    var RefCountSubscriber = /*@__PURE__*/ (function (_super) {\n        __extends(RefCountSubscriber, _super);\n        function RefCountSubscriber(destination, connectable) {\n            var _this = _super.call(this, destination) || this;\n            _this.connectable = connectable;\n            return _this;\n        }\n        RefCountSubscriber.prototype._unsubscribe = function () {\n            var connectable = this.connectable;\n            if (!connectable) {\n                this.connection = null;\n                return;\n            }\n            this.connectable = null;\n            var refCount = connectable._refCount;\n            if (refCount <= 0) {\n                this.connection = null;\n                return;\n            }\n            connectable._refCount = refCount - 1;\n            if (refCount > 1) {\n                this.connection = null;\n                return;\n            }\n            var connection = this.connection;\n            var sharedConnection = connectable._connection;\n            this.connection = null;\n            if (sharedConnection && (!connection || sharedConnection === connection)) {\n                sharedConnection.unsubscribe();\n            }\n        };\n        return RefCountSubscriber;\n    }(Subscriber));\n\n    /** PURE_IMPORTS_START tslib,_Subject,_Observable,_Subscriber,_Subscription,_operators_refCount PURE_IMPORTS_END */\n    var ConnectableObservable = /*@__PURE__*/ (function (_super) {\n        __extends(ConnectableObservable, _super);\n        function ConnectableObservable(source, subjectFactory) {\n            var _this = _super.call(this) || this;\n            _this.source = source;\n            _this.subjectFactory = subjectFactory;\n            _this._refCount = 0;\n            _this._isComplete = false;\n            return _this;\n        }\n        ConnectableObservable.prototype._subscribe = function (subscriber) {\n            return this.getSubject().subscribe(subscriber);\n        };\n        ConnectableObservable.prototype.getSubject = function () {\n            var subject = this._subject;\n            if (!subject || subject.isStopped) {\n                this._subject = this.subjectFactory();\n            }\n            return this._subject;\n        };\n        ConnectableObservable.prototype.connect = function () {\n            var connection = this._connection;\n            if (!connection) {\n                this._isComplete = false;\n                connection = this._connection = new Subscription();\n                connection.add(this.source\n                    .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n                if (connection.closed) {\n                    this._connection = null;\n                    connection = Subscription.EMPTY;\n                }\n                else {\n                    this._connection = connection;\n                }\n            }\n            return connection;\n        };\n        ConnectableObservable.prototype.refCount = function () {\n            return refCount()(this);\n        };\n        return ConnectableObservable;\n    }(Observable));\n    var ConnectableSubscriber = /*@__PURE__*/ (function (_super) {\n        __extends(ConnectableSubscriber, _super);\n        function ConnectableSubscriber(destination, connectable) {\n            var _this = _super.call(this, destination) || this;\n            _this.connectable = connectable;\n            return _this;\n        }\n        ConnectableSubscriber.prototype._error = function (err) {\n            this._unsubscribe();\n            _super.prototype._error.call(this, err);\n        };\n        ConnectableSubscriber.prototype._complete = function () {\n            this.connectable._isComplete = true;\n            this._unsubscribe();\n            _super.prototype._complete.call(this);\n        };\n        ConnectableSubscriber.prototype._unsubscribe = function () {\n            var connectable = this.connectable;\n            if (connectable) {\n                this.connectable = null;\n                var connection = connectable._connection;\n                connectable._refCount = 0;\n                connectable._subject = null;\n                connectable._connection = null;\n                if (connection) {\n                    connection.unsubscribe();\n                }\n            }\n        };\n        return ConnectableSubscriber;\n    }(SubjectSubscriber));\n    var RefCountSubscriber$1 = /*@__PURE__*/ (function (_super) {\n        __extends(RefCountSubscriber, _super);\n        function RefCountSubscriber(destination, connectable) {\n            var _this = _super.call(this, destination) || this;\n            _this.connectable = connectable;\n            return _this;\n        }\n        RefCountSubscriber.prototype._unsubscribe = function () {\n            var connectable = this.connectable;\n            if (!connectable) {\n                this.connection = null;\n                return;\n            }\n            this.connectable = null;\n            var refCount$$1 = connectable._refCount;\n            if (refCount$$1 <= 0) {\n                this.connection = null;\n                return;\n            }\n            connectable._refCount = refCount$$1 - 1;\n            if (refCount$$1 > 1) {\n                this.connection = null;\n                return;\n            }\n            var connection = this.connection;\n            var sharedConnection = connectable._connection;\n            this.connection = null;\n            if (sharedConnection && (!connection || sharedConnection === connection)) {\n                sharedConnection.unsubscribe();\n            }\n        };\n        return RefCountSubscriber;\n    }(Subscriber));\n\n    /** PURE_IMPORTS_START tslib,_Subscriber,_Subscription,_Observable,_Subject PURE_IMPORTS_END */\n    var GroupBySubscriber = /*@__PURE__*/ (function (_super) {\n        __extends(GroupBySubscriber, _super);\n        function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n            var _this = _super.call(this, destination) || this;\n            _this.keySelector = keySelector;\n            _this.elementSelector = elementSelector;\n            _this.durationSelector = durationSelector;\n            _this.subjectSelector = subjectSelector;\n            _this.groups = null;\n            _this.attemptedToUnsubscribe = false;\n            _this.count = 0;\n            return _this;\n        }\n        GroupBySubscriber.prototype._next = function (value) {\n            var key;\n            try {\n                key = this.keySelector(value);\n            }\n            catch (err) {\n                this.error(err);\n                return;\n            }\n            this._group(value, key);\n        };\n        GroupBySubscriber.prototype._group = function (value, key) {\n            var groups = this.groups;\n            if (!groups) {\n                groups = this.groups = new Map();\n            }\n            var group = groups.get(key);\n            var element;\n            if (this.elementSelector) {\n                try {\n                    element = this.elementSelector(value);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            }\n            else {\n                element = value;\n            }\n            if (!group) {\n                group = (this.subjectSelector ? this.subjectSelector() : new Subject());\n                groups.set(key, group);\n                var groupedObservable = new GroupedObservable(key, group, this);\n                this.destination.next(groupedObservable);\n                if (this.durationSelector) {\n                    var duration = void 0;\n                    try {\n                        duration = this.durationSelector(new GroupedObservable(key, group));\n                    }\n                    catch (err) {\n                        this.error(err);\n                        return;\n                    }\n                    this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n                }\n            }\n            if (!group.closed) {\n                group.next(element);\n            }\n        };\n        GroupBySubscriber.prototype._error = function (err) {\n            var groups = this.groups;\n            if (groups) {\n                groups.forEach(function (group, key) {\n                    group.error(err);\n                });\n                groups.clear();\n            }\n            this.destination.error(err);\n        };\n        GroupBySubscriber.prototype._complete = function () {\n            var groups = this.groups;\n            if (groups) {\n                groups.forEach(function (group, key) {\n                    group.complete();\n                });\n                groups.clear();\n            }\n            this.destination.complete();\n        };\n        GroupBySubscriber.prototype.removeGroup = function (key) {\n            this.groups.delete(key);\n        };\n        GroupBySubscriber.prototype.unsubscribe = function () {\n            if (!this.closed) {\n                this.attemptedToUnsubscribe = true;\n                if (this.count === 0) {\n                    _super.prototype.unsubscribe.call(this);\n                }\n            }\n        };\n        return GroupBySubscriber;\n    }(Subscriber));\n    var GroupDurationSubscriber = /*@__PURE__*/ (function (_super) {\n        __extends(GroupDurationSubscriber, _super);\n        function GroupDurationSubscriber(key, group, parent) {\n            var _this = _super.call(this, group) || this;\n            _this.key = key;\n            _this.group = group;\n            _this.parent = parent;\n            return _this;\n        }\n        GroupDurationSubscriber.prototype._next = function (value) {\n            this.complete();\n        };\n        GroupDurationSubscriber.prototype._unsubscribe = function () {\n            var _a = this, parent = _a.parent, key = _a.key;\n            this.key = this.parent = null;\n            if (parent) {\n                parent.removeGroup(key);\n            }\n        };\n        return GroupDurationSubscriber;\n    }(Subscriber));\n    var GroupedObservable = /*@__PURE__*/ (function (_super) {\n        __extends(GroupedObservable, _super);\n        function GroupedObservable(key, groupSubject, refCountSubscription) {\n            var _this = _super.call(this) || this;\n            _this.key = key;\n            _this.groupSubject = groupSubject;\n            _this.refCountSubscription = refCountSubscription;\n            return _this;\n        }\n        GroupedObservable.prototype._subscribe = function (subscriber) {\n            var subscription = new Subscription();\n            var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;\n            if (refCountSubscription && !refCountSubscription.closed) {\n                subscription.add(new InnerRefCountSubscription(refCountSubscription));\n            }\n            subscription.add(groupSubject.subscribe(subscriber));\n            return subscription;\n        };\n        return GroupedObservable;\n    }(Observable));\n    var InnerRefCountSubscription = /*@__PURE__*/ (function (_super) {\n        __extends(InnerRefCountSubscription, _super);\n        function InnerRefCountSubscription(parent) {\n            var _this = _super.call(this) || this;\n            _this.parent = parent;\n            parent.count++;\n            return _this;\n        }\n        InnerRefCountSubscription.prototype.unsubscribe = function () {\n            var parent = this.parent;\n            if (!parent.closed && !this.closed) {\n                _super.prototype.unsubscribe.call(this);\n                parent.count -= 1;\n                if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                    parent.unsubscribe();\n                }\n            }\n        };\n        return InnerRefCountSubscription;\n    }(Subscription));\n\n    /** PURE_IMPORTS_START tslib,_Subject,_util_ObjectUnsubscribedError PURE_IMPORTS_END */\n    var BehaviorSubject = /*@__PURE__*/ (function (_super) {\n        __extends(BehaviorSubject, _super);\n        function BehaviorSubject(_value) {\n            var _this = _super.call(this) || this;\n            _this._value = _value;\n            return _this;\n        }\n        Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n            get: function () {\n                return this.getValue();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        BehaviorSubject.prototype._subscribe = function (subscriber) {\n            var subscription = _super.prototype._subscribe.call(this, subscriber);\n            if (subscription && !subscription.closed) {\n                subscriber.next(this._value);\n            }\n            return subscription;\n        };\n        BehaviorSubject.prototype.getValue = function () {\n            if (this.hasError) {\n                throw this.thrownError;\n            }\n            else if (this.closed) {\n                throw new ObjectUnsubscribedError();\n            }\n            else {\n                return this._value;\n            }\n        };\n        BehaviorSubject.prototype.next = function (value) {\n            _super.prototype.next.call(this, this._value = value);\n        };\n        return BehaviorSubject;\n    }(Subject));\n\n    /** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\n    var Action = /*@__PURE__*/ (function (_super) {\n        __extends(Action, _super);\n        function Action(scheduler, work) {\n            return _super.call(this) || this;\n        }\n        Action.prototype.schedule = function (state, delay) {\n            if (delay === void 0) {\n                delay = 0;\n            }\n            return this;\n        };\n        return Action;\n    }(Subscription));\n\n    /** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */\n    var AsyncAction = /*@__PURE__*/ (function (_super) {\n        __extends(AsyncAction, _super);\n        function AsyncAction(scheduler, work) {\n            var _this = _super.call(this, scheduler, work) || this;\n            _this.scheduler = scheduler;\n            _this.work = work;\n            _this.pending = false;\n            return _this;\n        }\n        AsyncAction.prototype.schedule = function (state, delay) {\n            if (delay === void 0) {\n                delay = 0;\n            }\n            if (this.closed) {\n                return this;\n            }\n            this.state = state;\n            var id = this.id;\n            var scheduler = this.scheduler;\n            if (id != null) {\n                this.id = this.recycleAsyncId(scheduler, id, delay);\n            }\n            this.pending = true;\n            this.delay = delay;\n            this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n            return this;\n        };\n        AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n            if (delay === void 0) {\n                delay = 0;\n            }\n            return setInterval(scheduler.flush.bind(scheduler, this), delay);\n        };\n        AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n            if (delay === void 0) {\n                delay = 0;\n            }\n            if (delay !== null && this.delay === delay && this.pending === false) {\n                return id;\n            }\n            clearInterval(id);\n        };\n        AsyncAction.prototype.execute = function (state, delay) {\n            if (this.closed) {\n                return new Error('executing a cancelled action');\n            }\n            this.pending = false;\n            var error = this._execute(state, delay);\n            if (error) {\n                return error;\n            }\n            else if (this.pending === false && this.id != null) {\n                this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n            }\n        };\n        AsyncAction.prototype._execute = function (state, delay) {\n            var errored = false;\n            var errorValue = undefined;\n            try {\n                this.work(state);\n            }\n            catch (e) {\n                errored = true;\n                errorValue = !!e && e || new Error(e);\n            }\n            if (errored) {\n                this.unsubscribe();\n                return errorValue;\n            }\n        };\n        AsyncAction.prototype._unsubscribe = function () {\n            var id = this.id;\n            var scheduler = this.scheduler;\n            var actions = scheduler.actions;\n            var index = actions.indexOf(this);\n            this.work = null;\n            this.state = null;\n            this.pending = false;\n            this.scheduler = null;\n            if (index !== -1) {\n                actions.splice(index, 1);\n            }\n            if (id != null) {\n                this.id = this.recycleAsyncId(scheduler, id, null);\n            }\n            this.delay = null;\n        };\n        return AsyncAction;\n    }(Action));\n\n    /** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\n    var QueueAction = /*@__PURE__*/ (function (_super) {\n        __extends(QueueAction, _super);\n        function QueueAction(scheduler, work) {\n            var _this = _super.call(this, scheduler, work) || this;\n            _this.scheduler = scheduler;\n            _this.work = work;\n            return _this;\n        }\n        QueueAction.prototype.schedule = function (state, delay) {\n            if (delay === void 0) {\n                delay = 0;\n            }\n            if (delay > 0) {\n                return _super.prototype.schedule.call(this, state, delay);\n            }\n            this.delay = delay;\n            this.state = state;\n            this.scheduler.flush(this);\n            return this;\n        };\n        QueueAction.prototype.execute = function (state, delay) {\n            return (delay > 0 || this.closed) ?\n                _super.prototype.execute.call(this, state, delay) :\n                this._execute(state, delay);\n        };\n        QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n            if (delay === void 0) {\n                delay = 0;\n            }\n            if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n                return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n            }\n            return scheduler.flush(this);\n        };\n        return QueueAction;\n    }(AsyncAction));\n\n    var Scheduler = /*@__PURE__*/ (function () {\n        function Scheduler(SchedulerAction, now) {\n            if (now === void 0) {\n                now = Scheduler.now;\n            }\n            this.SchedulerAction = SchedulerAction;\n            this.now = now;\n        }\n        Scheduler.prototype.schedule = function (work, delay, state) {\n            if (delay === void 0) {\n                delay = 0;\n            }\n            return new this.SchedulerAction(this, work).schedule(state, delay);\n        };\n        Scheduler.now = function () { return Date.now(); };\n        return Scheduler;\n    }());\n\n    /** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */\n    var AsyncScheduler = /*@__PURE__*/ (function (_super) {\n        __extends(AsyncScheduler, _super);\n        function AsyncScheduler(SchedulerAction, now) {\n            if (now === void 0) {\n                now = Scheduler.now;\n            }\n            var _this = _super.call(this, SchedulerAction, function () {\n                if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {\n                    return AsyncScheduler.delegate.now();\n                }\n                else {\n                    return now();\n                }\n            }) || this;\n            _this.actions = [];\n            _this.active = false;\n            _this.scheduled = undefined;\n            return _this;\n        }\n        AsyncScheduler.prototype.schedule = function (work, delay, state) {\n            if (delay === void 0) {\n                delay = 0;\n            }\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n                return AsyncScheduler.delegate.schedule(work, delay, state);\n            }\n            else {\n                return _super.prototype.schedule.call(this, work, delay, state);\n            }\n        };\n        AsyncScheduler.prototype.flush = function (action) {\n            var actions = this.actions;\n            if (this.active) {\n                actions.push(action);\n                return;\n            }\n            var error;\n            this.active = true;\n            do {\n                if (error = action.execute(action.state, action.delay)) {\n                    break;\n                }\n            } while (action = actions.shift());\n            this.active = false;\n            if (error) {\n                while (action = actions.shift()) {\n                    action.unsubscribe();\n                }\n                throw error;\n            }\n        };\n        return AsyncScheduler;\n    }(Scheduler));\n\n    /** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\n    var QueueScheduler = /*@__PURE__*/ (function (_super) {\n        __extends(QueueScheduler, _super);\n        function QueueScheduler() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return QueueScheduler;\n    }(AsyncScheduler));\n\n    /** PURE_IMPORTS_START _QueueAction,_QueueScheduler PURE_IMPORTS_END */\n    var queue = /*@__PURE__*/ new QueueScheduler(QueueAction);\n\n    /** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\n    var EMPTY = /*@__PURE__*/ new Observable(function (subscriber) { return subscriber.complete(); });\n    function empty$1(scheduler) {\n        return scheduler ? emptyScheduled(scheduler) : EMPTY;\n    }\n    function emptyScheduled(scheduler) {\n        return new Observable(function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });\n    }\n\n    /** PURE_IMPORTS_START  PURE_IMPORTS_END */\n    function isScheduler(value) {\n        return value && typeof value.schedule === 'function';\n    }\n\n    /** PURE_IMPORTS_START  PURE_IMPORTS_END */\n    var subscribeToArray = function (array) {\n        return function (subscriber) {\n            for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        };\n    };\n\n    /** PURE_IMPORTS_START _Observable,_Subscription,_util_subscribeToArray PURE_IMPORTS_END */\n    function fromArray(input, scheduler) {\n        if (!scheduler) {\n            return new Observable(subscribeToArray(input));\n        }\n        else {\n            return new Observable(function (subscriber) {\n                var sub = new Subscription();\n                var i = 0;\n                sub.add(scheduler.schedule(function () {\n                    if (i === input.length) {\n                        subscriber.complete();\n                        return;\n                    }\n                    subscriber.next(input[i++]);\n                    if (!subscriber.closed) {\n                        sub.add(this.schedule());\n                    }\n                }));\n                return sub;\n            });\n        }\n    }\n\n    /** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\n    function scalar(value) {\n        var result = new Observable(function (subscriber) {\n            subscriber.next(value);\n            subscriber.complete();\n        });\n        result._isScalar = true;\n        result.value = value;\n        return result;\n    }\n\n    /** PURE_IMPORTS_START _util_isScheduler,_fromArray,_empty,_scalar PURE_IMPORTS_END */\n    function of() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var scheduler = args[args.length - 1];\n        if (isScheduler(scheduler)) {\n            args.pop();\n        }\n        else {\n            scheduler = undefined;\n        }\n        switch (args.length) {\n            case 0:\n                return empty$1(scheduler);\n            case 1:\n                return scheduler ? fromArray(args, scheduler) : scalar(args[0]);\n            default:\n                return fromArray(args, scheduler);\n        }\n    }\n\n    /** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\n    function throwError(error, scheduler) {\n        if (!scheduler) {\n            return new Observable(function (subscriber) { return subscriber.error(error); });\n        }\n        else {\n            return new Observable(function (subscriber) { return scheduler.schedule(dispatch, 0, { error: error, subscriber: subscriber }); });\n        }\n    }\n    function dispatch(_a) {\n        var error = _a.error, subscriber = _a.subscriber;\n        subscriber.error(error);\n    }\n\n    /** PURE_IMPORTS_START _observable_empty,_observable_of,_observable_throwError PURE_IMPORTS_END */\n    var Notification = /*@__PURE__*/ (function () {\n        function Notification(kind, value, error) {\n            this.kind = kind;\n            this.value = value;\n            this.error = error;\n            this.hasValue = kind === 'N';\n        }\n        Notification.prototype.observe = function (observer) {\n            switch (this.kind) {\n                case 'N':\n                    return observer.next && observer.next(this.value);\n                case 'E':\n                    return observer.error && observer.error(this.error);\n                case 'C':\n                    return observer.complete && observer.complete();\n            }\n        };\n        Notification.prototype.do = function (next, error, complete) {\n            var kind = this.kind;\n            switch (kind) {\n                case 'N':\n                    return next && next(this.value);\n                case 'E':\n                    return error && error(this.error);\n                case 'C':\n                    return complete && complete();\n            }\n        };\n        Notification.prototype.accept = function (nextOrObserver, error, complete) {\n            if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n                return this.observe(nextOrObserver);\n            }\n            else {\n                return this.do(nextOrObserver, error, complete);\n            }\n        };\n        Notification.prototype.toObservable = function () {\n            var kind = this.kind;\n            switch (kind) {\n                case 'N':\n                    return of(this.value);\n                case 'E':\n                    return throwError(this.error);\n                case 'C':\n                    return empty$1();\n            }\n            throw new Error('unexpected notification kind value');\n        };\n        Notification.createNext = function (value) {\n            if (typeof value !== 'undefined') {\n                return new Notification('N', value);\n            }\n            return Notification.undefinedValueNotification;\n        };\n        Notification.createError = function (err) {\n            return new Notification('E', undefined, err);\n        };\n        Notification.createComplete = function () {\n            return Notification.completeNotification;\n        };\n        Notification.completeNotification = new Notification('C');\n        Notification.undefinedValueNotification = new Notification('N', undefined);\n        return Notification;\n    }());\n\n    /** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */\n    var ObserveOnSubscriber = /*@__PURE__*/ (function (_super) {\n        __extends(ObserveOnSubscriber, _super);\n        function ObserveOnSubscriber(destination, scheduler, delay) {\n            if (delay === void 0) {\n                delay = 0;\n            }\n            var _this = _super.call(this, destination) || this;\n            _this.scheduler = scheduler;\n            _this.delay = delay;\n            return _this;\n        }\n        ObserveOnSubscriber.dispatch = function (arg) {\n            var notification = arg.notification, destination = arg.destination;\n            notification.observe(destination);\n            this.unsubscribe();\n        };\n        ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n            var destination = this.destination;\n            destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n        };\n        ObserveOnSubscriber.prototype._next = function (value) {\n            this.scheduleMessage(Notification.createNext(value));\n        };\n        ObserveOnSubscriber.prototype._error = function (err) {\n            this.scheduleMessage(Notification.createError(err));\n            this.unsubscribe();\n        };\n        ObserveOnSubscriber.prototype._complete = function () {\n            this.scheduleMessage(Notification.createComplete());\n            this.unsubscribe();\n        };\n        return ObserveOnSubscriber;\n    }(Subscriber));\n    var ObserveOnMessage = /*@__PURE__*/ (function () {\n        function ObserveOnMessage(notification, destination) {\n            this.notification = notification;\n            this.destination = destination;\n        }\n        return ObserveOnMessage;\n    }());\n\n    /** PURE_IMPORTS_START tslib,_Subject,_scheduler_queue,_Subscription,_operators_observeOn,_util_ObjectUnsubscribedError,_SubjectSubscription PURE_IMPORTS_END */\n    var ReplaySubject = /*@__PURE__*/ (function (_super) {\n        __extends(ReplaySubject, _super);\n        function ReplaySubject(bufferSize, windowTime, scheduler) {\n            if (bufferSize === void 0) {\n                bufferSize = Number.POSITIVE_INFINITY;\n            }\n            if (windowTime === void 0) {\n                windowTime = Number.POSITIVE_INFINITY;\n            }\n            var _this = _super.call(this) || this;\n            _this.scheduler = scheduler;\n            _this._events = [];\n            _this._infiniteTimeWindow = false;\n            _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n            _this._windowTime = windowTime < 1 ? 1 : windowTime;\n            if (windowTime === Number.POSITIVE_INFINITY) {\n                _this._infiniteTimeWindow = true;\n                _this.next = _this.nextInfiniteTimeWindow;\n            }\n            else {\n                _this.next = _this.nextTimeWindow;\n            }\n            return _this;\n        }\n        ReplaySubject.prototype.nextInfiniteTimeWindow = function (value) {\n            var _events = this._events;\n            _events.push(value);\n            if (_events.length > this._bufferSize) {\n                _events.shift();\n            }\n            _super.prototype.next.call(this, value);\n        };\n        ReplaySubject.prototype.nextTimeWindow = function (value) {\n            this._events.push(new ReplayEvent(this._getNow(), value));\n            this._trimBufferThenGetEvents();\n            _super.prototype.next.call(this, value);\n        };\n        ReplaySubject.prototype._subscribe = function (subscriber) {\n            var _infiniteTimeWindow = this._infiniteTimeWindow;\n            var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n            var scheduler = this.scheduler;\n            var len = _events.length;\n            var subscription;\n            if (this.closed) {\n                throw new ObjectUnsubscribedError();\n            }\n            else if (this.isStopped || this.hasError) {\n                subscription = Subscription.EMPTY;\n            }\n            else {\n                this.observers.push(subscriber);\n                subscription = new SubjectSubscription(this, subscriber);\n            }\n            if (scheduler) {\n                subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n            }\n            if (_infiniteTimeWindow) {\n                for (var i = 0; i < len && !subscriber.closed; i++) {\n                    subscriber.next(_events[i]);\n                }\n            }\n            else {\n                for (var i = 0; i < len && !subscriber.closed; i++) {\n                    subscriber.next(_events[i].value);\n                }\n            }\n            if (this.hasError) {\n                subscriber.error(this.thrownError);\n            }\n            else if (this.isStopped) {\n                subscriber.complete();\n            }\n            return subscription;\n        };\n        ReplaySubject.prototype._getNow = function () {\n            return (this.scheduler || queue).now();\n        };\n        ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n            var now = this._getNow();\n            var _bufferSize = this._bufferSize;\n            var _windowTime = this._windowTime;\n            var _events = this._events;\n            var eventsCount = _events.length;\n            var spliceCount = 0;\n            while (spliceCount < eventsCount) {\n                if ((now - _events[spliceCount].time) < _windowTime) {\n                    break;\n                }\n                spliceCount++;\n            }\n            if (eventsCount > _bufferSize) {\n                spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n            }\n            if (spliceCount > 0) {\n                _events.splice(0, spliceCount);\n            }\n            return _events;\n        };\n        return ReplaySubject;\n    }(Subject));\n    var ReplayEvent = /*@__PURE__*/ (function () {\n        function ReplayEvent(time, value) {\n            this.time = time;\n            this.value = value;\n        }\n        return ReplayEvent;\n    }());\n\n    /** PURE_IMPORTS_START tslib,_Subject,_Subscription PURE_IMPORTS_END */\n    var AsyncSubject = /*@__PURE__*/ (function (_super) {\n        __extends(AsyncSubject, _super);\n        function AsyncSubject() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.value = null;\n            _this.hasNext = false;\n            _this.hasCompleted = false;\n            return _this;\n        }\n        AsyncSubject.prototype._subscribe = function (subscriber) {\n            if (this.hasError) {\n                subscriber.error(this.thrownError);\n                return Subscription.EMPTY;\n            }\n            else if (this.hasCompleted && this.hasNext) {\n                subscriber.next(this.value);\n                subscriber.complete();\n                return Subscription.EMPTY;\n            }\n            return _super.prototype._subscribe.call(this, subscriber);\n        };\n        AsyncSubject.prototype.next = function (value) {\n            if (!this.hasCompleted) {\n                this.value = value;\n                this.hasNext = true;\n            }\n        };\n        AsyncSubject.prototype.error = function (error) {\n            if (!this.hasCompleted) {\n                _super.prototype.error.call(this, error);\n            }\n        };\n        AsyncSubject.prototype.complete = function () {\n            this.hasCompleted = true;\n            if (this.hasNext) {\n                _super.prototype.next.call(this, this.value);\n            }\n            _super.prototype.complete.call(this);\n        };\n        return AsyncSubject;\n    }(Subject));\n\n    /** PURE_IMPORTS_START  PURE_IMPORTS_END */\n    var nextHandle = 1;\n    var tasksByHandle = {};\n    function runIfPresent(handle) {\n        var cb = tasksByHandle[handle];\n        if (cb) {\n            cb();\n        }\n    }\n    var Immediate = {\n        setImmediate: function (cb) {\n            var handle = nextHandle++;\n            tasksByHandle[handle] = cb;\n            Promise.resolve().then(function () { return runIfPresent(handle); });\n            return handle;\n        },\n        clearImmediate: function (handle) {\n            delete tasksByHandle[handle];\n        },\n    };\n\n    /** PURE_IMPORTS_START tslib,_util_Immediate,_AsyncAction PURE_IMPORTS_END */\n    var AsapAction = /*@__PURE__*/ (function (_super) {\n        __extends(AsapAction, _super);\n        function AsapAction(scheduler, work) {\n            var _this = _super.call(this, scheduler, work) || this;\n            _this.scheduler = scheduler;\n            _this.work = work;\n            return _this;\n        }\n        AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n            if (delay === void 0) {\n                delay = 0;\n            }\n            if (delay !== null && delay > 0) {\n                return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n            }\n            scheduler.actions.push(this);\n            return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n        };\n        AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n            if (delay === void 0) {\n                delay = 0;\n            }\n            if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n                return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n            }\n            if (scheduler.actions.length === 0) {\n                Immediate.clearImmediate(id);\n                scheduler.scheduled = undefined;\n            }\n            return undefined;\n        };\n        return AsapAction;\n    }(AsyncAction));\n\n    /** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\n    var AsapScheduler = /*@__PURE__*/ (function (_super) {\n        __extends(AsapScheduler, _super);\n        function AsapScheduler() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        AsapScheduler.prototype.flush = function (action) {\n            this.active = true;\n            this.scheduled = undefined;\n            var actions = this.actions;\n            var error;\n            var index = -1;\n            var count = actions.length;\n            action = action || actions.shift();\n            do {\n                if (error = action.execute(action.state, action.delay)) {\n                    break;\n                }\n            } while (++index < count && (action = actions.shift()));\n            this.active = false;\n            if (error) {\n                while (++index < count && (action = actions.shift())) {\n                    action.unsubscribe();\n                }\n                throw error;\n            }\n        };\n        return AsapScheduler;\n    }(AsyncScheduler));\n\n    /** PURE_IMPORTS_START _AsapAction,_AsapScheduler PURE_IMPORTS_END */\n    var asap = /*@__PURE__*/ new AsapScheduler(AsapAction);\n\n    /** PURE_IMPORTS_START _AsyncAction,_AsyncScheduler PURE_IMPORTS_END */\n    var async = /*@__PURE__*/ new AsyncScheduler(AsyncAction);\n\n    /** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\n    var AnimationFrameAction = /*@__PURE__*/ (function (_super) {\n        __extends(AnimationFrameAction, _super);\n        function AnimationFrameAction(scheduler, work) {\n            var _this = _super.call(this, scheduler, work) || this;\n            _this.scheduler = scheduler;\n            _this.work = work;\n            return _this;\n        }\n        AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n            if (delay === void 0) {\n                delay = 0;\n            }\n            if (delay !== null && delay > 0) {\n                return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n            }\n            scheduler.actions.push(this);\n            return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(function () { return scheduler.flush(null); }));\n        };\n        AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n            if (delay === void 0) {\n                delay = 0;\n            }\n            if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n                return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n            }\n            if (scheduler.actions.length === 0) {\n                cancelAnimationFrame(id);\n                scheduler.scheduled = undefined;\n            }\n            return undefined;\n        };\n        return AnimationFrameAction;\n    }(AsyncAction));\n\n    /** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\n    var AnimationFrameScheduler = /*@__PURE__*/ (function (_super) {\n        __extends(AnimationFrameScheduler, _super);\n        function AnimationFrameScheduler() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        AnimationFrameScheduler.prototype.flush = function (action) {\n            this.active = true;\n            this.scheduled = undefined;\n            var actions = this.actions;\n            var error;\n            var index = -1;\n            var count = actions.length;\n            action = action || actions.shift();\n            do {\n                if (error = action.execute(action.state, action.delay)) {\n                    break;\n                }\n            } while (++index < count && (action = actions.shift()));\n            this.active = false;\n            if (error) {\n                while (++index < count && (action = actions.shift())) {\n                    action.unsubscribe();\n                }\n                throw error;\n            }\n        };\n        return AnimationFrameScheduler;\n    }(AsyncScheduler));\n\n    /** PURE_IMPORTS_START _AnimationFrameAction,_AnimationFrameScheduler PURE_IMPORTS_END */\n    var animationFrame = /*@__PURE__*/ new AnimationFrameScheduler(AnimationFrameAction);\n\n    /** PURE_IMPORTS_START tslib,_AsyncAction,_AsyncScheduler PURE_IMPORTS_END */\n    var VirtualTimeScheduler = /*@__PURE__*/ (function (_super) {\n        __extends(VirtualTimeScheduler, _super);\n        function VirtualTimeScheduler(SchedulerAction, maxFrames) {\n            if (SchedulerAction === void 0) {\n                SchedulerAction = VirtualAction;\n            }\n            if (maxFrames === void 0) {\n                maxFrames = Number.POSITIVE_INFINITY;\n            }\n            var _this = _super.call(this, SchedulerAction, function () { return _this.frame; }) || this;\n            _this.maxFrames = maxFrames;\n            _this.frame = 0;\n            _this.index = -1;\n            return _this;\n        }\n        VirtualTimeScheduler.prototype.flush = function () {\n            var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;\n            var error, action;\n            while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n                if (error = action.execute(action.state, action.delay)) {\n                    break;\n                }\n            }\n            if (error) {\n                while (action = actions.shift()) {\n                    action.unsubscribe();\n                }\n                throw error;\n            }\n        };\n        VirtualTimeScheduler.frameTimeFactor = 10;\n        return VirtualTimeScheduler;\n    }(AsyncScheduler));\n    var VirtualAction = /*@__PURE__*/ (function (_super) {\n        __extends(VirtualAction, _super);\n        function VirtualAction(scheduler, work, index) {\n            if (index === void 0) {\n                index = scheduler.index += 1;\n            }\n            var _this = _super.call(this, scheduler, work) || this;\n            _this.scheduler = scheduler;\n            _this.work = work;\n            _this.index = index;\n            _this.active = true;\n            _this.index = scheduler.index = index;\n            return _this;\n        }\n        VirtualAction.prototype.schedule = function (state, delay) {\n            if (delay === void 0) {\n                delay = 0;\n            }\n            if (!this.id) {\n                return _super.prototype.schedule.call(this, state, delay);\n            }\n            this.active = false;\n            var action = new VirtualAction(this.scheduler, this.work);\n            this.add(action);\n            return action.schedule(state, delay);\n        };\n        VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n            if (delay === void 0) {\n                delay = 0;\n            }\n            this.delay = scheduler.frame + delay;\n            var actions = scheduler.actions;\n            actions.push(this);\n            actions.sort(VirtualAction.sortActions);\n            return true;\n        };\n        VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n            if (delay === void 0) {\n                delay = 0;\n            }\n            return undefined;\n        };\n        VirtualAction.prototype._execute = function (state, delay) {\n            if (this.active === true) {\n                return _super.prototype._execute.call(this, state, delay);\n            }\n        };\n        VirtualAction.sortActions = function (a, b) {\n            if (a.delay === b.delay) {\n                if (a.index === b.index) {\n                    return 0;\n                }\n                else if (a.index > b.index) {\n                    return 1;\n                }\n                else {\n                    return -1;\n                }\n            }\n            else if (a.delay > b.delay) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        };\n        return VirtualAction;\n    }(AsyncAction));\n\n    /** PURE_IMPORTS_START  PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START  PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START  PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START  PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n    var MapSubscriber = /*@__PURE__*/ (function (_super) {\n        __extends(MapSubscriber, _super);\n        function MapSubscriber(destination, project, thisArg) {\n            var _this = _super.call(this, destination) || this;\n            _this.project = project;\n            _this.count = 0;\n            _this.thisArg = thisArg || _this;\n            return _this;\n        }\n        MapSubscriber.prototype._next = function (value) {\n            var result;\n            try {\n                result = this.project.call(this.thisArg, value, this.count++);\n            }\n            catch (err) {\n                this.destination.error(err);\n                return;\n            }\n            this.destination.next(result);\n        };\n        return MapSubscriber;\n    }(Subscriber));\n\n    /** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_canReportError,_util_isArray,_util_isScheduler PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_canReportError,_util_isScheduler,_util_isArray PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n    var OuterSubscriber = /*@__PURE__*/ (function (_super) {\n        __extends(OuterSubscriber, _super);\n        function OuterSubscriber() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n            this.destination.next(innerValue);\n        };\n        OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n            this.destination.error(error);\n        };\n        OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n            this.destination.complete();\n        };\n        return OuterSubscriber;\n    }(Subscriber));\n\n    /** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n    var InnerSubscriber = /*@__PURE__*/ (function (_super) {\n        __extends(InnerSubscriber, _super);\n        function InnerSubscriber(parent, outerValue, outerIndex) {\n            var _this = _super.call(this) || this;\n            _this.parent = parent;\n            _this.outerValue = outerValue;\n            _this.outerIndex = outerIndex;\n            _this.index = 0;\n            return _this;\n        }\n        InnerSubscriber.prototype._next = function (value) {\n            this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n        };\n        InnerSubscriber.prototype._error = function (error) {\n            this.parent.notifyError(error, this);\n            this.unsubscribe();\n        };\n        InnerSubscriber.prototype._complete = function () {\n            this.parent.notifyComplete(this);\n            this.unsubscribe();\n        };\n        return InnerSubscriber;\n    }(Subscriber));\n\n    /** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */\n    var subscribeToPromise = function (promise) {\n        return function (subscriber) {\n            promise.then(function (value) {\n                if (!subscriber.closed) {\n                    subscriber.next(value);\n                    subscriber.complete();\n                }\n            }, function (err) { return subscriber.error(err); })\n                .then(null, hostReportError);\n            return subscriber;\n        };\n    };\n\n    /** PURE_IMPORTS_START  PURE_IMPORTS_END */\n    function getSymbolIterator() {\n        if (typeof Symbol !== 'function' || !Symbol.iterator) {\n            return '@@iterator';\n        }\n        return Symbol.iterator;\n    }\n    var iterator = /*@__PURE__*/ getSymbolIterator();\n\n    /** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\n    var subscribeToIterable = function (iterable) {\n        return function (subscriber) {\n            var iterator$$1 = iterable[iterator]();\n            do {\n                var item = iterator$$1.next();\n                if (item.done) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(item.value);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n            if (typeof iterator$$1.return === 'function') {\n                subscriber.add(function () {\n                    if (iterator$$1.return) {\n                        iterator$$1.return();\n                    }\n                });\n            }\n            return subscriber;\n        };\n    };\n\n    /** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\n    var subscribeToObservable = function (obj) {\n        return function (subscriber) {\n            var obs = obj[observable]();\n            if (typeof obs.subscribe !== 'function') {\n                throw new TypeError('Provided object does not correctly implement Symbol.observable');\n            }\n            else {\n                return obs.subscribe(subscriber);\n            }\n        };\n    };\n\n    /** PURE_IMPORTS_START  PURE_IMPORTS_END */\n    var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\n\n    /** PURE_IMPORTS_START  PURE_IMPORTS_END */\n    function isPromise(value) {\n        return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n    }\n\n    /** PURE_IMPORTS_START _Observable,_subscribeToArray,_subscribeToPromise,_subscribeToIterable,_subscribeToObservable,_isArrayLike,_isPromise,_isObject,_symbol_iterator,_symbol_observable PURE_IMPORTS_END */\n    var subscribeTo = function (result) {\n        if (result instanceof Observable) {\n            return function (subscriber) {\n                if (result._isScalar) {\n                    subscriber.next(result.value);\n                    subscriber.complete();\n                    return undefined;\n                }\n                else {\n                    return result.subscribe(subscriber);\n                }\n            };\n        }\n        else if (result && typeof result[observable] === 'function') {\n            return subscribeToObservable(result);\n        }\n        else if (isArrayLike(result)) {\n            return subscribeToArray(result);\n        }\n        else if (isPromise(result)) {\n            return subscribeToPromise(result);\n        }\n        else if (result && typeof result[iterator] === 'function') {\n            return subscribeToIterable(result);\n        }\n        else {\n            var value = isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n            var msg = \"You provided \" + value + \" where a stream was expected.\"\n                + ' You can provide an Observable, Promise, Array, or Iterable.';\n            throw new TypeError(msg);\n        }\n    };\n\n    /** PURE_IMPORTS_START _InnerSubscriber,_subscribeTo PURE_IMPORTS_END */\n    function subscribeToResult(outerSubscriber, result, outerValue, outerIndex, destination) {\n        if (destination === void 0) {\n            destination = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n        }\n        if (destination.closed) {\n            return;\n        }\n        return subscribeTo(result)(destination);\n    }\n\n    /** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */\n    var NONE = {};\n    var CombineLatestSubscriber = /*@__PURE__*/ (function (_super) {\n        __extends(CombineLatestSubscriber, _super);\n        function CombineLatestSubscriber(destination, resultSelector) {\n            var _this = _super.call(this, destination) || this;\n            _this.resultSelector = resultSelector;\n            _this.active = 0;\n            _this.values = [];\n            _this.observables = [];\n            return _this;\n        }\n        CombineLatestSubscriber.prototype._next = function (observable) {\n            this.values.push(NONE);\n            this.observables.push(observable);\n        };\n        CombineLatestSubscriber.prototype._complete = function () {\n            var observables = this.observables;\n            var len = observables.length;\n            if (len === 0) {\n                this.destination.complete();\n            }\n            else {\n                this.active = len;\n                this.toRespond = len;\n                for (var i = 0; i < len; i++) {\n                    var observable = observables[i];\n                    this.add(subscribeToResult(this, observable, observable, i));\n                }\n            }\n        };\n        CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n            if ((this.active -= 1) === 0) {\n                this.destination.complete();\n            }\n        };\n        CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n            var values = this.values;\n            var oldVal = values[outerIndex];\n            var toRespond = !this.toRespond\n                ? 0\n                : oldVal === NONE ? --this.toRespond : this.toRespond;\n            values[outerIndex] = innerValue;\n            if (toRespond === 0) {\n                if (this.resultSelector) {\n                    this._tryResultSelector(values);\n                }\n                else {\n                    this.destination.next(values.slice());\n                }\n            }\n        };\n        CombineLatestSubscriber.prototype._tryResultSelector = function (values) {\n            var result;\n            try {\n                result = this.resultSelector.apply(this, values);\n            }\n            catch (err) {\n                this.destination.error(err);\n                return;\n            }\n            this.destination.next(result);\n        };\n        return CombineLatestSubscriber;\n    }(OuterSubscriber));\n\n    /** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START _Observable,_Subscription,_util_subscribeToPromise PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator,_util_subscribeToIterable PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START _Observable,_Subscription,_symbol_observable,_util_subscribeToObservable PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START _Observable,_util_isPromise,_util_isArrayLike,_util_isInteropObservable,_util_isIterable,_fromArray,_fromPromise,_fromIterable,_fromObservable,_util_subscribeTo PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START tslib,_util_subscribeToResult,_OuterSubscriber,_InnerSubscriber,_map,_observable_from PURE_IMPORTS_END */\n    var MergeMapSubscriber = /*@__PURE__*/ (function (_super) {\n        __extends(MergeMapSubscriber, _super);\n        function MergeMapSubscriber(destination, project, concurrent) {\n            if (concurrent === void 0) {\n                concurrent = Number.POSITIVE_INFINITY;\n            }\n            var _this = _super.call(this, destination) || this;\n            _this.project = project;\n            _this.concurrent = concurrent;\n            _this.hasCompleted = false;\n            _this.buffer = [];\n            _this.active = 0;\n            _this.index = 0;\n            return _this;\n        }\n        MergeMapSubscriber.prototype._next = function (value) {\n            if (this.active < this.concurrent) {\n                this._tryNext(value);\n            }\n            else {\n                this.buffer.push(value);\n            }\n        };\n        MergeMapSubscriber.prototype._tryNext = function (value) {\n            var result;\n            var index = this.index++;\n            try {\n                result = this.project(value, index);\n            }\n            catch (err) {\n                this.destination.error(err);\n                return;\n            }\n            this.active++;\n            this._innerSub(result, value, index);\n        };\n        MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n            var innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n            var destination = this.destination;\n            destination.add(innerSubscriber);\n            subscribeToResult(this, ish, value, index, innerSubscriber);\n        };\n        MergeMapSubscriber.prototype._complete = function () {\n            this.hasCompleted = true;\n            if (this.active === 0 && this.buffer.length === 0) {\n                this.destination.complete();\n            }\n            this.unsubscribe();\n        };\n        MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n            this.destination.next(innerValue);\n        };\n        MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n            var buffer = this.buffer;\n            this.remove(innerSub);\n            this.active--;\n            if (buffer.length > 0) {\n                this._next(buffer.shift());\n            }\n            else if (this.active === 0 && this.hasCompleted) {\n                this.destination.complete();\n            }\n        };\n        return MergeMapSubscriber;\n    }(OuterSubscriber));\n\n    /** PURE_IMPORTS_START _mergeMap,_util_identity PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START _mergeAll PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START _util_isScheduler,_of,_from,_operators_concatAll PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START tslib,_Observable,_util_isArray,_empty,_util_subscribeToResult,_OuterSubscriber,_operators_map PURE_IMPORTS_END */\n    var ForkJoinSubscriber = /*@__PURE__*/ (function (_super) {\n        __extends(ForkJoinSubscriber, _super);\n        function ForkJoinSubscriber(destination, sources) {\n            var _this = _super.call(this, destination) || this;\n            _this.sources = sources;\n            _this.completed = 0;\n            _this.haveValues = 0;\n            var len = sources.length;\n            _this.values = new Array(len);\n            for (var i = 0; i < len; i++) {\n                var source = sources[i];\n                var innerSubscription = subscribeToResult(_this, source, null, i);\n                if (innerSubscription) {\n                    _this.add(innerSubscription);\n                }\n            }\n            return _this;\n        }\n        ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n            this.values[outerIndex] = innerValue;\n            if (!innerSub._hasValue) {\n                innerSub._hasValue = true;\n                this.haveValues++;\n            }\n        };\n        ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {\n            var _a = this, destination = _a.destination, haveValues = _a.haveValues, values = _a.values;\n            var len = values.length;\n            if (!innerSub._hasValue) {\n                destination.complete();\n                return;\n            }\n            this.completed++;\n            if (this.completed !== len) {\n                return;\n            }\n            if (haveValues === len) {\n                destination.next(values);\n            }\n            destination.complete();\n        };\n        return ForkJoinSubscriber;\n    }(OuterSubscriber));\n\n    /** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START _Observable,_util_identity,_util_isScheduler PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START _defer,_empty PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */\n    function isNumeric(val) {\n        return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n    }\n\n    /** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START _Observable,_util_isScheduler,_operators_mergeAll,_fromArray PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START _Observable,_util_noop PURE_IMPORTS_END */\n    var NEVER = /*@__PURE__*/ new Observable(noop);\n\n    /** PURE_IMPORTS_START _Observable,_from,_util_isArray,_empty PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START tslib,_util_isArray,_fromArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n    var RaceSubscriber = /*@__PURE__*/ (function (_super) {\n        __extends(RaceSubscriber, _super);\n        function RaceSubscriber(destination) {\n            var _this = _super.call(this, destination) || this;\n            _this.hasFirst = false;\n            _this.observables = [];\n            _this.subscriptions = [];\n            return _this;\n        }\n        RaceSubscriber.prototype._next = function (observable) {\n            this.observables.push(observable);\n        };\n        RaceSubscriber.prototype._complete = function () {\n            var observables = this.observables;\n            var len = observables.length;\n            if (len === 0) {\n                this.destination.complete();\n            }\n            else {\n                for (var i = 0; i < len && !this.hasFirst; i++) {\n                    var observable = observables[i];\n                    var subscription = subscribeToResult(this, observable, observable, i);\n                    if (this.subscriptions) {\n                        this.subscriptions.push(subscription);\n                    }\n                    this.add(subscription);\n                }\n                this.observables = null;\n            }\n        };\n        RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n            if (!this.hasFirst) {\n                this.hasFirst = true;\n                for (var i = 0; i < this.subscriptions.length; i++) {\n                    if (i !== outerIndex) {\n                        var subscription = this.subscriptions[i];\n                        subscription.unsubscribe();\n                        this.remove(subscription);\n                    }\n                }\n                this.subscriptions = null;\n            }\n            this.destination.next(innerValue);\n        };\n        return RaceSubscriber;\n    }(OuterSubscriber));\n\n    /** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\n    function timer(dueTime, periodOrScheduler, scheduler) {\n        if (dueTime === void 0) {\n            dueTime = 0;\n        }\n        var period = -1;\n        if (isNumeric(periodOrScheduler)) {\n            period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n        }\n        else if (isScheduler(periodOrScheduler)) {\n            scheduler = periodOrScheduler;\n        }\n        if (!isScheduler(scheduler)) {\n            scheduler = async;\n        }\n        return new Observable(function (subscriber) {\n            var due = isNumeric(dueTime)\n                ? dueTime\n                : (+dueTime - scheduler.now());\n            return scheduler.schedule(dispatch$7, due, {\n                index: 0, period: period, subscriber: subscriber\n            });\n        });\n    }\n    function dispatch$7(state) {\n        var index = state.index, period = state.period, subscriber = state.subscriber;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        else if (period === -1) {\n            return subscriber.complete();\n        }\n        state.index = index + 1;\n        this.schedule(state, period);\n    }\n\n    /** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */\n\n    /** PURE_IMPORTS_START tslib,_fromArray,_util_isArray,_Subscriber,_OuterSubscriber,_util_subscribeToResult,_.._internal_symbol_iterator PURE_IMPORTS_END */\n    var ZipSubscriber = /*@__PURE__*/ (function (_super) {\n        __extends(ZipSubscriber, _super);\n        function ZipSubscriber(destination, resultSelector, values) {\n            if (values === void 0) {\n                values = Object.create(null);\n            }\n            var _this = _super.call(this, destination) || this;\n            _this.iterators = [];\n            _this.active = 0;\n            _this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n            _this.values = values;\n            return _this;\n        }\n        ZipSubscriber.prototype._next = function (value) {\n            var iterators = this.iterators;\n            if (isArray(value)) {\n                iterators.push(new StaticArrayIterator(value));\n            }\n            else if (typeof value[iterator] === 'function') {\n                iterators.push(new StaticIterator(value[iterator]()));\n            }\n            else {\n                iterators.push(new ZipBufferIterator(this.destination, this, value));\n            }\n        };\n        ZipSubscriber.prototype._complete = function () {\n            var iterators = this.iterators;\n            var len = iterators.length;\n            this.unsubscribe();\n            if (len === 0) {\n                this.destination.complete();\n                return;\n            }\n            this.active = len;\n            for (var i = 0; i < len; i++) {\n                var iterator$$1 = iterators[i];\n                if (iterator$$1.stillUnsubscribed) {\n                    var destination = this.destination;\n                    destination.add(iterator$$1.subscribe(iterator$$1, i));\n                }\n                else {\n                    this.active--;\n                }\n            }\n        };\n        ZipSubscriber.prototype.notifyInactive = function () {\n            this.active--;\n            if (this.active === 0) {\n                this.destination.complete();\n            }\n        };\n        ZipSubscriber.prototype.checkIterators = function () {\n            var iterators = this.iterators;\n            var len = iterators.length;\n            var destination = this.destination;\n            for (var i = 0; i < len; i++) {\n                var iterator$$1 = iterators[i];\n                if (typeof iterator$$1.hasValue === 'function' && !iterator$$1.hasValue()) {\n                    return;\n                }\n            }\n            var shouldComplete = false;\n            var args = [];\n            for (var i = 0; i < len; i++) {\n                var iterator$$1 = iterators[i];\n                var result = iterator$$1.next();\n                if (iterator$$1.hasCompleted()) {\n                    shouldComplete = true;\n                }\n                if (result.done) {\n                    destination.complete();\n                    return;\n                }\n                args.push(result.value);\n            }\n            if (this.resultSelector) {\n                this._tryresultSelector(args);\n            }\n            else {\n                destination.next(args);\n            }\n            if (shouldComplete) {\n                destination.complete();\n            }\n        };\n        ZipSubscriber.prototype._tryresultSelector = function (args) {\n            var result;\n            try {\n                result = this.resultSelector.apply(this, args);\n            }\n            catch (err) {\n                this.destination.error(err);\n                return;\n            }\n            this.destination.next(result);\n        };\n        return ZipSubscriber;\n    }(Subscriber));\n    var StaticIterator = /*@__PURE__*/ (function () {\n        function StaticIterator(iterator$$1) {\n            this.iterator = iterator$$1;\n            this.nextResult = iterator$$1.next();\n        }\n        StaticIterator.prototype.hasValue = function () {\n            return true;\n        };\n        StaticIterator.prototype.next = function () {\n            var result = this.nextResult;\n            this.nextResult = this.iterator.next();\n            return result;\n        };\n        StaticIterator.prototype.hasCompleted = function () {\n            var nextResult = this.nextResult;\n            return nextResult && nextResult.done;\n        };\n        return StaticIterator;\n    }());\n    var StaticArrayIterator = /*@__PURE__*/ (function () {\n        function StaticArrayIterator(array) {\n            this.array = array;\n            this.index = 0;\n            this.length = 0;\n            this.length = array.length;\n        }\n        StaticArrayIterator.prototype[iterator] = function () {\n            return this;\n        };\n        StaticArrayIterator.prototype.next = function (value) {\n            var i = this.index++;\n            var array = this.array;\n            return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n        };\n        StaticArrayIterator.prototype.hasValue = function () {\n            return this.array.length > this.index;\n        };\n        StaticArrayIterator.prototype.hasCompleted = function () {\n            return this.array.length === this.index;\n        };\n        return StaticArrayIterator;\n    }());\n    var ZipBufferIterator = /*@__PURE__*/ (function (_super) {\n        __extends(ZipBufferIterator, _super);\n        function ZipBufferIterator(destination, parent, observable) {\n            var _this = _super.call(this, destination) || this;\n            _this.parent = parent;\n            _this.observable = observable;\n            _this.stillUnsubscribed = true;\n            _this.buffer = [];\n            _this.isComplete = false;\n            return _this;\n        }\n        ZipBufferIterator.prototype[iterator] = function () {\n            return this;\n        };\n        ZipBufferIterator.prototype.next = function () {\n            var buffer = this.buffer;\n            if (buffer.length === 0 && this.isComplete) {\n                return { value: null, done: true };\n            }\n            else {\n                return { value: buffer.shift(), done: false };\n            }\n        };\n        ZipBufferIterator.prototype.hasValue = function () {\n            return this.buffer.length > 0;\n        };\n        ZipBufferIterator.prototype.hasCompleted = function () {\n            return this.buffer.length === 0 && this.isComplete;\n        };\n        ZipBufferIterator.prototype.notifyComplete = function () {\n            if (this.buffer.length > 0) {\n                this.isComplete = true;\n                this.parent.notifyInactive();\n            }\n            else {\n                this.destination.complete();\n            }\n        };\n        ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n            this.buffer.push(innerValue);\n            this.parent.checkIterators();\n        };\n        ZipBufferIterator.prototype.subscribe = function (value, index) {\n            return subscribeToResult(this, this.observable, this, index);\n        };\n        return ZipBufferIterator;\n    }(OuterSubscriber));\n\n    /** PURE_IMPORTS_START  PURE_IMPORTS_END */\n\n    /**\n     * @license ng2-completer\n     * MIT license\n     */\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n     */\n    /** @type {?} */\n    var MAX_CHARS = 524288;\n    /** @type {?} */\n    var MIN_SEARCH_LENGTH = 3;\n    /** @type {?} */\n    var PAUSE = 10;\n    /** @type {?} */\n    var TEXT_SEARCHING = \"Searching...\";\n    /** @type {?} */\n    var TEXT_NO_RESULTS = \"No results found\";\n    /** @type {?} */\n    var CLEAR_TIMEOUT = 50;\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    function isNil(value) {\n        return typeof value === \"undefined\" || value === null;\n    }\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n     */\n    /**\n     * @abstract\n     */\n    var   /**\n     * @abstract\n     */\n    CompleterBaseData = /** @class */ (function (_super) {\n        __extends(CompleterBaseData, _super);\n        function CompleterBaseData() {\n            var _this = _super.call(this) || this;\n            _this._searchFields = null;\n            _this._titleField = null;\n            _this._descriptionField = undefined;\n            _this._imageField = undefined;\n            return _this;\n        }\n        /**\n         * @return {?}\n         */\n        CompleterBaseData.prototype.cancel = /**\n         * @return {?}\n         */\n        function () {\n            return;\n        };\n        /**\n         * @param {?} searchFields\n         * @return {?}\n         */\n        CompleterBaseData.prototype.searchFields = /**\n         * @param {?} searchFields\n         * @return {?}\n         */\n        function (searchFields) {\n            this._searchFields = searchFields;\n            return this;\n        };\n        /**\n         * @param {?} titleField\n         * @return {?}\n         */\n        CompleterBaseData.prototype.titleField = /**\n         * @param {?} titleField\n         * @return {?}\n         */\n        function (titleField) {\n            this._titleField = titleField;\n            return this;\n        };\n        /**\n         * @param {?} descriptionField\n         * @return {?}\n         */\n        CompleterBaseData.prototype.descriptionField = /**\n         * @param {?} descriptionField\n         * @return {?}\n         */\n        function (descriptionField) {\n            this._descriptionField = descriptionField;\n            return this;\n        };\n        /**\n         * @param {?} imageField\n         * @return {?}\n         */\n        CompleterBaseData.prototype.imageField = /**\n         * @param {?} imageField\n         * @return {?}\n         */\n        function (imageField) {\n            this._imageField = imageField;\n            return this;\n        };\n        /**\n         * @param {?} data\n         * @return {?}\n         */\n        CompleterBaseData.prototype.convertToItem = /**\n         * @param {?} data\n         * @return {?}\n         */\n        function (data) {\n            /** @type {?} */\n            var image = null;\n            /** @type {?} */\n            var formattedText;\n            /** @type {?} */\n            var formattedDesc = null;\n            if (this._titleField) {\n                formattedText = this.extractTitle(data);\n            }\n            else {\n                formattedText = data;\n            }\n            if (typeof formattedText !== \"string\") {\n                formattedText = JSON.stringify(formattedText);\n            }\n            if (this._descriptionField) {\n                formattedDesc = this.extractValue(data, this._descriptionField);\n            }\n            if (this._imageField) {\n                image = this.extractValue(data, this._imageField);\n            }\n            if (isNil(formattedText)) {\n                return null;\n            }\n            return /** @type {?} */ ({\n                description: formattedDesc,\n                image: image,\n                originalObject: data,\n                title: formattedText\n            });\n        };\n        /**\n         * @param {?} data\n         * @param {?} term\n         * @return {?}\n         */\n        CompleterBaseData.prototype.extractMatches = /**\n         * @param {?} data\n         * @param {?} term\n         * @return {?}\n         */\n        function (data, term) {\n            var _this = this;\n            /** @type {?} */\n            var matches = [];\n            /** @type {?} */\n            var searchFields = this._searchFields ? this._searchFields.split(\",\") : null;\n            if (this._searchFields !== null && this._searchFields !== undefined && term !== \"\") {\n                matches = data.filter(function (item) {\n                    /** @type {?} */\n                    var values = searchFields ? _this.extractBySearchFields(searchFields, item) : [item];\n                    return values.some(function (value) { return value\n                        .toString()\n                        .toLowerCase()\n                        .indexOf(term.toString().toLowerCase()) >= 0; });\n                });\n            }\n            else {\n                matches = data;\n            }\n            return matches;\n        };\n        /**\n         * @param {?} item\n         * @return {?}\n         */\n        CompleterBaseData.prototype.extractTitle = /**\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) {\n            var _this = this;\n            // split title fields and run extractValue for each and join with ' '\n            if (!this._titleField) {\n                return \"\";\n            }\n            return this._titleField.split(\",\")\n                .map(function (field) {\n                return _this.extractValue(item, field);\n            })\n                .reduce(function (acc, titlePart) { return acc ? acc + \" \" + titlePart : titlePart; });\n        };\n        /**\n         * @param {?} obj\n         * @param {?} key\n         * @return {?}\n         */\n        CompleterBaseData.prototype.extractValue = /**\n         * @param {?} obj\n         * @param {?} key\n         * @return {?}\n         */\n        function (obj, key) {\n            /** @type {?} */\n            var keys;\n            /** @type {?} */\n            var result;\n            if (key) {\n                keys = key.split(\".\");\n                result = obj;\n                for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                    key = keys_1[_i];\n                    if (result) {\n                        result = result[key];\n                    }\n                }\n            }\n            else {\n                result = obj;\n            }\n            return result;\n        };\n        /**\n         * @param {?} matches\n         * @return {?}\n         */\n        CompleterBaseData.prototype.processResults = /**\n         * @param {?} matches\n         * @return {?}\n         */\n        function (matches) {\n            /** @type {?} */\n            var i;\n            /** @type {?} */\n            var results = [];\n            if (matches && matches.length > 0) {\n                for (i = 0; i < matches.length; i++) {\n                    /** @type {?} */\n                    var item = this.convertToItem(matches[i]);\n                    if (item) {\n                        results.push(item);\n                    }\n                }\n            }\n            return results;\n        };\n        /**\n         * @param {?} searchFields\n         * @param {?} item\n         * @return {?}\n         */\n        CompleterBaseData.prototype.extractBySearchFields = /**\n         * @param {?} searchFields\n         * @param {?} item\n         * @return {?}\n         */\n        function (searchFields, item) {\n            var _this = this;\n            return searchFields\n                .map(function (searchField) { return _this.extractValue(item, searchField); }).filter(function (value) { return !!value; });\n        };\n        return CompleterBaseData;\n    }(Subject));\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n     */\n    var LocalData = /** @class */ (function (_super) {\n        __extends(LocalData, _super);\n        function LocalData() {\n            var _this = _super.call(this) || this;\n            _this.dataSourceChange = new core.EventEmitter();\n            _this._data = [];\n            _this.savedTerm = null;\n            return _this;\n        }\n        /**\n         * @param {?} data\n         * @return {?}\n         */\n        LocalData.prototype.data = /**\n         * @param {?} data\n         * @return {?}\n         */\n        function (data) {\n            var _this = this;\n            if (data instanceof Observable) {\n                /** @type {?} */\n                var data$ = /** @type {?} */ (data);\n                data$\n                    .pipe(operators.catchError(function () { return []; }))\n                    .subscribe(function (res) {\n                    _this._data = res;\n                    if (_this.savedTerm) {\n                        _this.search(_this.savedTerm);\n                    }\n                    _this.dataSourceChange.emit();\n                });\n            }\n            else {\n                this._data = data;\n            }\n            this.dataSourceChange.emit();\n            return this;\n        };\n        /**\n         * @param {?} term\n         * @return {?}\n         */\n        LocalData.prototype.search = /**\n         * @param {?} term\n         * @return {?}\n         */\n        function (term) {\n            if (!this._data) {\n                this.savedTerm = term;\n            }\n            else {\n                this.savedTerm = null;\n                /** @type {?} */\n                var matches = this.extractMatches(this._data, term);\n                this.next(this.processResults(matches));\n            }\n        };\n        /**\n         * @param {?} data\n         * @return {?}\n         */\n        LocalData.prototype.convertToItem = /**\n         * @param {?} data\n         * @return {?}\n         */\n        function (data) {\n            return _super.prototype.convertToItem.call(this, data);\n        };\n        return LocalData;\n    }(CompleterBaseData));\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n     */\n    var RemoteData = /** @class */ (function (_super) {\n        __extends(RemoteData, _super);\n        function RemoteData(http$$1) {\n            var _this = _super.call(this) || this;\n            _this.http = http$$1;\n            _this.dataSourceChange = new core.EventEmitter();\n            _this._remoteUrl = null;\n            _this.remoteSearch = null;\n            _this._urlFormater = null;\n            _this._dataField = null;\n            return _this;\n        }\n        /**\n         * @param {?} remoteUrl\n         * @return {?}\n         */\n        RemoteData.prototype.remoteUrl = /**\n         * @param {?} remoteUrl\n         * @return {?}\n         */\n        function (remoteUrl) {\n            this._remoteUrl = remoteUrl;\n            this.dataSourceChange.emit();\n            return this;\n        };\n        /**\n         * @param {?} urlFormater\n         * @return {?}\n         */\n        RemoteData.prototype.urlFormater = /**\n         * @param {?} urlFormater\n         * @return {?}\n         */\n        function (urlFormater) {\n            this._urlFormater = urlFormater;\n        };\n        /**\n         * @param {?} dataField\n         * @return {?}\n         */\n        RemoteData.prototype.dataField = /**\n         * @param {?} dataField\n         * @return {?}\n         */\n        function (dataField) {\n            this._dataField = dataField;\n        };\n        /**\n         * @param {?} requestOptions\n         * @return {?}\n         */\n        RemoteData.prototype.requestOptions = /**\n         * @param {?} requestOptions\n         * @return {?}\n         */\n        function (requestOptions) {\n            this._requestOptions = requestOptions;\n        };\n        /**\n         * @param {?} term\n         * @return {?}\n         */\n        RemoteData.prototype.search = /**\n         * @param {?} term\n         * @return {?}\n         */\n        function (term) {\n            var _this = this;\n            this.cancel();\n            /** @type {?} */\n            var url = \"\";\n            if (this._urlFormater) {\n                url = this._urlFormater(term);\n            }\n            else {\n                url = this._remoteUrl + encodeURIComponent(term);\n            }\n            this.remoteSearch = this.http\n                .get(url, Object.assign({}, this._requestOptions))\n                .pipe(operators.map(function (data) {\n                /** @type {?} */\n                var matches = _this.extractValue(data, _this._dataField);\n                return _this.extractMatches(matches, term);\n            }), operators.catchError(function () { return []; }))\n                .subscribe(function (matches) {\n                /** @type {?} */\n                var results = _this.processResults(matches);\n                _this.next(results);\n            });\n        };\n        /**\n         * @return {?}\n         */\n        RemoteData.prototype.cancel = /**\n         * @return {?}\n         */\n        function () {\n            if (this.remoteSearch) {\n                this.remoteSearch.unsubscribe();\n            }\n        };\n        /**\n         * @param {?} data\n         * @return {?}\n         */\n        RemoteData.prototype.convertToItem = /**\n         * @param {?} data\n         * @return {?}\n         */\n        function (data) {\n            return _super.prototype.convertToItem.call(this, data);\n        };\n        return RemoteData;\n    }(CompleterBaseData));\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n     */\n    var LocalDataFactory = /** @class */ (function () {\n        function LocalDataFactory() {\n        }\n        /**\n         * @return {?}\n         */\n        LocalDataFactory.prototype.create = /**\n         * @return {?}\n         */\n        function () {\n            return new LocalData();\n        };\n        LocalDataFactory.decorators = [\n            { type: core.Injectable },\n        ];\n        return LocalDataFactory;\n    }());\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n     */\n    var RemoteDataFactory = /** @class */ (function () {\n        function RemoteDataFactory(http$$1) {\n            this.http = http$$1;\n        }\n        /**\n         * @return {?}\n         */\n        RemoteDataFactory.prototype.create = /**\n         * @return {?}\n         */\n        function () {\n            return new RemoteData(this.http);\n        };\n        RemoteDataFactory.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        RemoteDataFactory.ctorParameters = function () { return [\n            { type: http.HttpClient }\n        ]; };\n        return RemoteDataFactory;\n    }());\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n     */\n    var CompleterService = /** @class */ (function () {\n        function CompleterService(localDataFactory, remoteDataFactory // Using any instead of () => LocalData because of AoT errors\n        ) {\n            this.localDataFactory = localDataFactory;\n            this.remoteDataFactory = remoteDataFactory;\n        }\n        /**\n         * @param {?} data\n         * @param {?=} searchFields\n         * @param {?=} titleField\n         * @return {?}\n         */\n        CompleterService.prototype.local = /**\n         * @param {?} data\n         * @param {?=} searchFields\n         * @param {?=} titleField\n         * @return {?}\n         */\n        function (data, searchFields, titleField) {\n            if (searchFields === void 0) { searchFields = \"\"; }\n            if (titleField === void 0) { titleField = \"\"; }\n            /** @type {?} */\n            var localData = this.localDataFactory.create();\n            return localData\n                .data(data)\n                .searchFields(searchFields)\n                .titleField(titleField);\n        };\n        /**\n         * @param {?} url\n         * @param {?=} searchFields\n         * @param {?=} titleField\n         * @return {?}\n         */\n        CompleterService.prototype.remote = /**\n         * @param {?} url\n         * @param {?=} searchFields\n         * @param {?=} titleField\n         * @return {?}\n         */\n        function (url, searchFields, titleField) {\n            if (searchFields === void 0) { searchFields = \"\"; }\n            if (titleField === void 0) { titleField = \"\"; }\n            /** @type {?} */\n            var remoteData = this.remoteDataFactory.create();\n            return remoteData\n                .remoteUrl(url)\n                .searchFields(searchFields)\n                .titleField(titleField);\n        };\n        CompleterService.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        CompleterService.ctorParameters = function () { return [\n            { type: LocalDataFactory },\n            { type: RemoteDataFactory }\n        ]; };\n        return CompleterService;\n    }());\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n     */\n    var CtrCompleter = /** @class */ (function () {\n        function CtrCompleter() {\n            this.selected = new core.EventEmitter();\n            this.highlighted = new core.EventEmitter();\n            this.opened = new core.EventEmitter();\n            this.dataSourceChange = new core.EventEmitter();\n            this.list = null;\n            this.dropdown = null;\n            this._hasHighlighted = false;\n            this._hasSelected = false;\n            this._cancelBlur = false;\n            this._isOpen = false;\n            this._autoHighlightIndex = null;\n        }\n        /**\n         * @param {?} list\n         * @return {?}\n         */\n        CtrCompleter.prototype.registerList = /**\n         * @param {?} list\n         * @return {?}\n         */\n        function (list) {\n            this.list = list;\n        };\n        /**\n         * @param {?} dropdown\n         * @return {?}\n         */\n        CtrCompleter.prototype.registerDropdown = /**\n         * @param {?} dropdown\n         * @return {?}\n         */\n        function (dropdown) {\n            this.dropdown = dropdown;\n        };\n        /**\n         * @param {?} item\n         * @return {?}\n         */\n        CtrCompleter.prototype.onHighlighted = /**\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) {\n            this.highlighted.emit(item);\n            this._hasHighlighted = !!item;\n        };\n        /**\n         * @param {?} item\n         * @param {?=} clearList\n         * @return {?}\n         */\n        CtrCompleter.prototype.onSelected = /**\n         * @param {?} item\n         * @param {?=} clearList\n         * @return {?}\n         */\n        function (item, clearList) {\n            if (clearList === void 0) { clearList = true; }\n            this.selected.emit(item);\n            if (item) {\n                this._hasSelected = true;\n            }\n            if (clearList) {\n                this.clear();\n            }\n        };\n        /**\n         * @return {?}\n         */\n        CtrCompleter.prototype.onDataSourceChange = /**\n         * @return {?}\n         */\n        function () {\n            if (this.hasSelected) {\n                this.selected.emit(null);\n                this._hasSelected = false;\n            }\n            this.dataSourceChange.emit();\n        };\n        /**\n         * @param {?} term\n         * @return {?}\n         */\n        CtrCompleter.prototype.search = /**\n         * @param {?} term\n         * @return {?}\n         */\n        function (term) {\n            if (this._hasSelected) {\n                this.selected.emit(null);\n                this._hasSelected = false;\n            }\n            if (this.list) {\n                this.list.search(term);\n            }\n        };\n        /**\n         * @return {?}\n         */\n        CtrCompleter.prototype.clear = /**\n         * @return {?}\n         */\n        function () {\n            this._hasHighlighted = false;\n            this.isOpen = false;\n            if (this.dropdown) {\n                this.dropdown.clear();\n            }\n            if (this.list) {\n                this.list.clear();\n            }\n        };\n        /**\n         * @return {?}\n         */\n        CtrCompleter.prototype.selectCurrent = /**\n         * @return {?}\n         */\n        function () {\n            if (this.dropdown) {\n                this.dropdown.selectCurrent();\n            }\n        };\n        /**\n         * @return {?}\n         */\n        CtrCompleter.prototype.nextRow = /**\n         * @return {?}\n         */\n        function () {\n            if (this.dropdown) {\n                this.dropdown.nextRow();\n            }\n        };\n        /**\n         * @return {?}\n         */\n        CtrCompleter.prototype.prevRow = /**\n         * @return {?}\n         */\n        function () {\n            if (this.dropdown) {\n                this.dropdown.prevRow();\n            }\n        };\n        /**\n         * @return {?}\n         */\n        CtrCompleter.prototype.hasHighlighted = /**\n         * @return {?}\n         */\n        function () {\n            return this._hasHighlighted;\n        };\n        /**\n         * @param {?} cancel\n         * @return {?}\n         */\n        CtrCompleter.prototype.cancelBlur = /**\n         * @param {?} cancel\n         * @return {?}\n         */\n        function (cancel) {\n            this._cancelBlur = cancel;\n        };\n        /**\n         * @return {?}\n         */\n        CtrCompleter.prototype.isCancelBlur = /**\n         * @return {?}\n         */\n        function () {\n            return this._cancelBlur;\n        };\n        /**\n         * @return {?}\n         */\n        CtrCompleter.prototype.open = /**\n         * @return {?}\n         */\n        function () {\n            if (!this._isOpen && !!this.list) {\n                this.isOpen = true;\n                this.list.open();\n            }\n        };\n        Object.defineProperty(CtrCompleter.prototype, \"isOpen\", {\n            get: /**\n             * @return {?}\n             */\n            function () {\n                return this._isOpen;\n            },\n            set: /**\n             * @param {?} open\n             * @return {?}\n             */\n            function (open) {\n                this._isOpen = open;\n                this.opened.emit(this._isOpen);\n                if (this.list) {\n                    this.list.isOpen(open);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(CtrCompleter.prototype, \"autoHighlightIndex\", {\n            get: /**\n             * @return {?}\n             */\n            function () {\n                return this._autoHighlightIndex;\n            },\n            set: /**\n             * @param {?} index\n             * @return {?}\n             */\n            function (index) {\n                this._autoHighlightIndex = index;\n                if (this.dropdown) {\n                    this.dropdown.highlightRow(this._autoHighlightIndex);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(CtrCompleter.prototype, \"hasSelected\", {\n            get: /**\n             * @return {?}\n             */\n            function () {\n                return this._hasSelected;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        CtrCompleter.decorators = [\n            { type: core.Directive, args: [{\n                        selector: \"[ctrCompleter]\",\n                    },] },\n        ];\n        CtrCompleter.propDecorators = {\n            selected: [{ type: core.Output }],\n            highlighted: [{ type: core.Output }],\n            opened: [{ type: core.Output }],\n            dataSourceChange: [{ type: core.Output }]\n        };\n        return CtrCompleter;\n    }());\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n     */\n    var CtrRowItem = /** @class */ (function () {\n        function CtrRowItem(row, index) {\n            this.row = row;\n            this.index = index;\n        }\n        return CtrRowItem;\n    }());\n    var CtrDropdown = /** @class */ (function () {\n        function CtrDropdown(completer, el, zone) {\n            this.completer = completer;\n            this.el = el;\n            this.zone = zone;\n            this.rows = [];\n            this.isScrollOn = false;\n            this._rowMouseDown = false;\n            this.completer.registerDropdown(this);\n        }\n        /**\n         * @return {?}\n         */\n        CtrDropdown.prototype.ngOnDestroy = /**\n         * @return {?}\n         */\n        function () {\n            this.completer.registerDropdown(null);\n        };\n        /**\n         * @return {?}\n         */\n        CtrDropdown.prototype.ngAfterViewInit = /**\n         * @return {?}\n         */\n        function () {\n            var _this = this;\n            /** @type {?} */\n            var css = getComputedStyle(this.el.nativeElement);\n            /** @type {?} */\n            var autoHighlightIndex = this.completer.autoHighlightIndex;\n            this.isScrollOn = !!css.maxHeight && css.overflowY === \"auto\";\n            if (autoHighlightIndex) {\n                this.zone.run(function () {\n                    _this.highlightRow(autoHighlightIndex);\n                });\n            }\n        };\n        /**\n         * @param {?} event\n         * @return {?}\n         */\n        CtrDropdown.prototype.onMouseDown = /**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            var _this = this;\n            // Support for canceling blur on IE (issue #158)\n            if (!this._rowMouseDown) {\n                this.completer.cancelBlur(true);\n                this.zone.run(function () {\n                    _this.completer.cancelBlur(false);\n                });\n            }\n            else {\n                this._rowMouseDown = false;\n            }\n        };\n        /**\n         * @param {?} row\n         * @return {?}\n         */\n        CtrDropdown.prototype.registerRow = /**\n         * @param {?} row\n         * @return {?}\n         */\n        function (row) {\n            /** @type {?} */\n            var arrIndex = this.rows.findIndex(function (_row) { return _row.index === row.index; });\n            if (arrIndex >= 0) {\n                this.rows[arrIndex] = row;\n            }\n            else {\n                this.rows.push(row);\n            }\n        };\n        /**\n         * @param {?} rowIndex\n         * @return {?}\n         */\n        CtrDropdown.prototype.unregisterRow = /**\n         * @param {?} rowIndex\n         * @return {?}\n         */\n        function (rowIndex) {\n            /** @type {?} */\n            var arrIndex = this.rows.findIndex(function (_row) { return _row.index === rowIndex; });\n            this.rows.splice(arrIndex, 1);\n            if (this.currHighlighted && rowIndex === this.currHighlighted.index) {\n                this.highlightRow(null);\n            }\n        };\n        /**\n         * @param {?} index\n         * @return {?}\n         */\n        CtrDropdown.prototype.highlightRow = /**\n         * @param {?} index\n         * @return {?}\n         */\n        function (index) {\n            /** @type {?} */\n            var highlighted = this.rows.find(function (row) { return row.index === index; });\n            if (isNil(index) || /** @type {?} */ ((index)) < 0) {\n                if (this.currHighlighted) {\n                    this.currHighlighted.row.setHighlighted(false);\n                }\n                this.currHighlighted = undefined;\n                this.completer.onHighlighted(null);\n                return;\n            }\n            if (!highlighted) {\n                return;\n            }\n            if (this.currHighlighted) {\n                this.currHighlighted.row.setHighlighted(false);\n            }\n            this.currHighlighted = highlighted;\n            this.currHighlighted.row.setHighlighted(true);\n            this.completer.onHighlighted(this.currHighlighted.row.getDataItem());\n            if (this.isScrollOn && this.currHighlighted) {\n                /** @type {?} */\n                var rowTop = this.dropdownRowTop();\n                if (!rowTop) {\n                    return;\n                }\n                if (rowTop < 0) {\n                    this.dropdownScrollTopTo(rowTop - 1);\n                }\n                else {\n                    /** @type {?} */\n                    var row = this.currHighlighted.row.getNativeElement();\n                    if (this.dropdownHeight() < row.getBoundingClientRect().bottom) {\n                        this.dropdownScrollTopTo(this.dropdownRowOffsetHeight(row));\n                        if (this.el.nativeElement.getBoundingClientRect().bottom - this.dropdownRowOffsetHeight(row) < row.getBoundingClientRect().top) {\n                            this.dropdownScrollTopTo(row.getBoundingClientRect().top - (this.el.nativeElement.getBoundingClientRect().top + parseInt(/** @type {?} */ (getComputedStyle(this.el.nativeElement).paddingTop), 10)));\n                        }\n                    }\n                }\n            }\n        };\n        /**\n         * @return {?}\n         */\n        CtrDropdown.prototype.clear = /**\n         * @return {?}\n         */\n        function () {\n            this.rows = [];\n        };\n        /**\n         * @param {?} item\n         * @return {?}\n         */\n        CtrDropdown.prototype.onSelected = /**\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) {\n            this.completer.onSelected(item);\n        };\n        /**\n         * @return {?}\n         */\n        CtrDropdown.prototype.rowMouseDown = /**\n         * @return {?}\n         */\n        function () {\n            this._rowMouseDown = true;\n        };\n        /**\n         * @return {?}\n         */\n        CtrDropdown.prototype.selectCurrent = /**\n         * @return {?}\n         */\n        function () {\n            if (!!this.currHighlighted && !!this.currHighlighted.row) {\n                this.onSelected(this.currHighlighted.row.getDataItem());\n            }\n            else if (this.rows.length > 0) {\n                this.onSelected(this.rows[0].row.getDataItem());\n            }\n        };\n        /**\n         * @return {?}\n         */\n        CtrDropdown.prototype.nextRow = /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var nextRowIndex = 0;\n            if (this.currHighlighted) {\n                nextRowIndex = this.currHighlighted.index + 1;\n            }\n            this.highlightRow(nextRowIndex);\n        };\n        /**\n         * @return {?}\n         */\n        CtrDropdown.prototype.prevRow = /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var nextRowIndex = -1;\n            if (this.currHighlighted) {\n                nextRowIndex = this.currHighlighted.index - 1;\n            }\n            this.highlightRow(nextRowIndex);\n        };\n        /**\n         * @param {?} offset\n         * @return {?}\n         */\n        CtrDropdown.prototype.dropdownScrollTopTo = /**\n         * @param {?} offset\n         * @return {?}\n         */\n        function (offset) {\n            this.el.nativeElement.scrollTop = this.el.nativeElement.scrollTop + offset;\n        };\n        /**\n         * @return {?}\n         */\n        CtrDropdown.prototype.dropdownRowTop = /**\n         * @return {?}\n         */\n        function () {\n            if (!this.currHighlighted) {\n                return;\n            }\n            return this.currHighlighted.row.getNativeElement().getBoundingClientRect().top -\n                (this.el.nativeElement.getBoundingClientRect().top +\n                    parseInt(/** @type {?} */ (getComputedStyle(this.el.nativeElement).paddingTop), 10));\n        };\n        /**\n         * @return {?}\n         */\n        CtrDropdown.prototype.dropdownHeight = /**\n         * @return {?}\n         */\n        function () {\n            return this.el.nativeElement.getBoundingClientRect().top +\n                parseInt(/** @type {?} */ (getComputedStyle(this.el.nativeElement).maxHeight), 10);\n        };\n        /**\n         * @param {?} row\n         * @return {?}\n         */\n        CtrDropdown.prototype.dropdownRowOffsetHeight = /**\n         * @param {?} row\n         * @return {?}\n         */\n        function (row) {\n            /** @type {?} */\n            var css = getComputedStyle(row.parentElement);\n            return row.parentElement.offsetHeight +\n                parseInt(/** @type {?} */ (css.marginTop), 10) + parseInt(/** @type {?} */ (css.marginBottom), 10);\n        };\n        CtrDropdown.decorators = [\n            { type: core.Directive, args: [{\n                        selector: \"[ctrDropdown]\",\n                    },] },\n        ];\n        /** @nocollapse */\n        CtrDropdown.ctorParameters = function () { return [\n            { type: CtrCompleter, decorators: [{ type: core.Host }] },\n            { type: core.ElementRef },\n            { type: core.NgZone }\n        ]; };\n        CtrDropdown.propDecorators = {\n            onMouseDown: [{ type: core.HostListener, args: [\"mousedown\", [\"$event\"],] }]\n        };\n        return CtrDropdown;\n    }());\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n     */\n    /** @type {?} */\n    var KEY_DW = 40;\n    /** @type {?} */\n    var KEY_RT = 39;\n    /** @type {?} */\n    var KEY_UP = 38;\n    /** @type {?} */\n    var KEY_LF = 37;\n    /** @type {?} */\n    var KEY_ES = 27;\n    /** @type {?} */\n    var KEY_EN = 13;\n    /** @type {?} */\n    var KEY_TAB = 9;\n    /** @type {?} */\n    var KEY_BK = 8;\n    /** @type {?} */\n    var KEY_SH = 16;\n    /** @type {?} */\n    var KEY_CL = 20;\n    /** @type {?} */\n    var KEY_F1 = 112;\n    /** @type {?} */\n    var KEY_F12 = 123;\n    var CtrInput = /** @class */ (function () {\n        function CtrInput(completer, ngModel, el) {\n            var _this = this;\n            this.completer = completer;\n            this.ngModel = ngModel;\n            this.el = el;\n            this.clearSelected = false;\n            this.clearUnselected = false;\n            this.overrideSuggested = false;\n            this.fillHighlighted = true;\n            this.openOnFocus = false;\n            this.openOnClick = false;\n            this.selectOnClick = false;\n            this.selectOnFocus = false;\n            this.ngModelChange = new core.EventEmitter();\n            this._searchStr = \"\";\n            this._displayStr = \"\";\n            this.blurTimer = null;\n            this.completer.selected.subscribe(function (item) {\n                if (!item) {\n                    return;\n                }\n                if (_this.clearSelected) {\n                    _this.searchStr = \"\";\n                }\n                else {\n                    _this.searchStr = item.title;\n                }\n                _this.ngModelChange.emit(_this.searchStr);\n            });\n            this.completer.highlighted.subscribe(function (item) {\n                if (_this.fillHighlighted) {\n                    if (item) {\n                        _this._displayStr = item.title;\n                        _this.ngModelChange.emit(item.title);\n                    }\n                    else {\n                        _this._displayStr = _this.searchStr;\n                        _this.ngModelChange.emit(_this.searchStr);\n                    }\n                }\n            });\n            this.completer.dataSourceChange.subscribe(function () {\n                _this.completer.search(_this.searchStr);\n            });\n            if (this.ngModel.valueChanges) {\n                this.ngModel.valueChanges.subscribe(function (value) {\n                    if (!isNil(value) && _this._displayStr !== value) {\n                        if (_this.searchStr !== value) {\n                            _this.completer.search(value);\n                        }\n                        _this.searchStr = value;\n                    }\n                });\n            }\n        }\n        /**\n         * @param {?} event\n         * @return {?}\n         */\n        CtrInput.prototype.keyupHandler = /**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            if (event.keyCode === KEY_LF || event.keyCode === KEY_RT || event.keyCode === KEY_TAB) {\n                // do nothing\n                return;\n            }\n            if (event.keyCode === KEY_UP || event.keyCode === KEY_EN) {\n                event.preventDefault();\n            }\n            else if (event.keyCode === KEY_DW) {\n                event.preventDefault();\n                this.completer.search(this.searchStr);\n            }\n            else if (event.keyCode === KEY_ES) {\n                if (this.completer.isOpen) {\n                    this.restoreSearchValue();\n                    this.completer.clear();\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            }\n        };\n        /**\n         * @param {?} event\n         * @return {?}\n         */\n        CtrInput.prototype.pasteHandler = /**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            this.completer.open();\n        };\n        /**\n         * @param {?} event\n         * @return {?}\n         */\n        CtrInput.prototype.keydownHandler = /**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            /** @type {?} */\n            var keyCode = event.keyCode || event.which;\n            if (keyCode === KEY_EN) {\n                if (this.completer.hasHighlighted()) {\n                    event.preventDefault();\n                }\n                this.handleSelection();\n            }\n            else if (keyCode === KEY_DW) {\n                event.preventDefault();\n                this.completer.open();\n                this.completer.nextRow();\n            }\n            else if (keyCode === KEY_UP) {\n                event.preventDefault();\n                this.completer.prevRow();\n            }\n            else if (keyCode === KEY_TAB) {\n                this.handleSelection();\n            }\n            else if (keyCode === KEY_BK) {\n                this.completer.open();\n            }\n            else if (keyCode === KEY_ES) {\n                // This is very specific to IE10/11 #272\n                // without this, IE clears the input text\n                event.preventDefault();\n                if (this.completer.isOpen) {\n                    event.stopPropagation();\n                }\n            }\n            else {\n                if (keyCode !== 0 && keyCode !== KEY_SH && keyCode !== KEY_CL &&\n                    (keyCode <= KEY_F1 || keyCode >= KEY_F12) &&\n                    !event.ctrlKey && !event.metaKey && !event.altKey) {\n                    this.completer.open();\n                }\n            }\n        };\n        /**\n         * @param {?} event\n         * @return {?}\n         */\n        CtrInput.prototype.onBlur = /**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            var _this = this;\n            // Check if we need to cancel Blur for IE\n            if (this.completer.isCancelBlur()) {\n                setTimeout(function () {\n                    // get the focus back\n                    // get the focus back\n                    _this.el.nativeElement.focus();\n                }, 0);\n                return;\n            }\n            if (this.completer.isOpen) {\n                this.blurTimer = timer(200).pipe(operators.take(1)).subscribe(function () { return _this.doBlur(); });\n            }\n        };\n        /**\n         * @return {?}\n         */\n        CtrInput.prototype.onfocus = /**\n         * @return {?}\n         */\n        function () {\n            if (this.blurTimer) {\n                this.blurTimer.unsubscribe();\n                this.blurTimer = null;\n            }\n            if (this.selectOnFocus) {\n                this.el.nativeElement.select();\n            }\n            if (this.openOnFocus) {\n                this.completer.open();\n            }\n        };\n        /**\n         * @param {?} event\n         * @return {?}\n         */\n        CtrInput.prototype.onClick = /**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            if (this.selectOnClick) {\n                this.el.nativeElement.select();\n            }\n            if (this.openOnClick) {\n                if (this.completer.isOpen) {\n                    this.completer.clear();\n                }\n                else {\n                    this.completer.open();\n                }\n            }\n        };\n        Object.defineProperty(CtrInput.prototype, \"searchStr\", {\n            get: /**\n             * @return {?}\n             */\n            function () {\n                return this._searchStr;\n            },\n            set: /**\n             * @param {?} term\n             * @return {?}\n             */\n            function (term) {\n                this._searchStr = term;\n                this._displayStr = term;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        CtrInput.prototype.handleSelection = /**\n         * @return {?}\n         */\n        function () {\n            if (this.completer.hasHighlighted()) {\n                this._searchStr = \"\";\n                this.completer.selectCurrent();\n            }\n            else if (this.overrideSuggested) {\n                this.completer.onSelected({ title: this.searchStr, originalObject: null });\n            }\n            else {\n                if (this.clearUnselected && !this.completer.hasSelected) {\n                    this.searchStr = \"\";\n                    this.ngModelChange.emit(this.searchStr);\n                }\n                this.completer.clear();\n            }\n        };\n        /**\n         * @return {?}\n         */\n        CtrInput.prototype.restoreSearchValue = /**\n         * @return {?}\n         */\n        function () {\n            if (this.fillHighlighted) {\n                if (this._displayStr != this.searchStr) {\n                    this._displayStr = this.searchStr;\n                    this.ngModelChange.emit(this.searchStr);\n                }\n            }\n        };\n        /**\n         * @return {?}\n         */\n        CtrInput.prototype.doBlur = /**\n         * @return {?}\n         */\n        function () {\n            if (this.blurTimer) {\n                this.blurTimer.unsubscribe();\n                this.blurTimer = null;\n            }\n            if (this.overrideSuggested) {\n                this.completer.onSelected({ title: this.searchStr, originalObject: null });\n            }\n            else {\n                if (this.clearUnselected && !this.completer.hasSelected) {\n                    this.searchStr = \"\";\n                    this.ngModelChange.emit(this.searchStr);\n                }\n                else {\n                    this.restoreSearchValue();\n                }\n            }\n            this.completer.clear();\n        };\n        CtrInput.decorators = [\n            { type: core.Directive, args: [{\n                        selector: \"[ctrInput]\",\n                    },] },\n        ];\n        /** @nocollapse */\n        CtrInput.ctorParameters = function () { return [\n            { type: CtrCompleter, decorators: [{ type: core.Host }] },\n            { type: forms.NgModel },\n            { type: core.ElementRef }\n        ]; };\n        CtrInput.propDecorators = {\n            clearSelected: [{ type: core.Input, args: [\"clearSelected\",] }],\n            clearUnselected: [{ type: core.Input, args: [\"clearUnselected\",] }],\n            overrideSuggested: [{ type: core.Input, args: [\"overrideSuggested\",] }],\n            fillHighlighted: [{ type: core.Input, args: [\"fillHighlighted\",] }],\n            openOnFocus: [{ type: core.Input, args: [\"openOnFocus\",] }],\n            openOnClick: [{ type: core.Input, args: [\"openOnClick\",] }],\n            selectOnClick: [{ type: core.Input, args: [\"selectOnClick\",] }],\n            selectOnFocus: [{ type: core.Input, args: [\"selectOnFocus\",] }],\n            ngModelChange: [{ type: core.Output }],\n            keyupHandler: [{ type: core.HostListener, args: [\"keyup\", [\"$event\"],] }],\n            pasteHandler: [{ type: core.HostListener, args: [\"paste\", [\"$event\"],] }],\n            keydownHandler: [{ type: core.HostListener, args: [\"keydown\", [\"$event\"],] }],\n            onBlur: [{ type: core.HostListener, args: [\"blur\", [\"$event\"],] }],\n            onfocus: [{ type: core.HostListener, args: [\"focus\", [],] }],\n            onClick: [{ type: core.HostListener, args: [\"click\", [\"$event\"],] }]\n        };\n        return CtrInput;\n    }());\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n     */\n    var CtrListContext = /** @class */ (function () {\n        function CtrListContext(results, searching, searchInitialized, isOpen) {\n            this.results = results;\n            this.searching = searching;\n            this.searchInitialized = searchInitialized;\n            this.isOpen = isOpen;\n        }\n        return CtrListContext;\n    }());\n    var CtrList = /** @class */ (function () {\n        function CtrList(completer, templateRef, viewContainer, cd, zone) {\n            this.completer = completer;\n            this.templateRef = templateRef;\n            this.viewContainer = viewContainer;\n            this.cd = cd;\n            this.zone = zone;\n            this.ctrListMinSearchLength = MIN_SEARCH_LENGTH;\n            this.ctrListPause = PAUSE;\n            this.ctrListAutoMatch = false;\n            this.ctrListAutoHighlight = false;\n            this.ctrListDisplaySearching = true;\n            this._dataService = null;\n            this.term = null;\n            this.searchTimer = null;\n            this.clearTimer = null;\n            this.ctx = new CtrListContext([], false, false, false);\n            this._initialValue = null;\n            this.viewRef = null;\n        }\n        /**\n         * @return {?}\n         */\n        CtrList.prototype.ngOnInit = /**\n         * @return {?}\n         */\n        function () {\n            this.completer.registerList(this);\n            this.viewRef = this.viewContainer.createEmbeddedView(this.templateRef, new CtrListContext([], false, false, false));\n        };\n        Object.defineProperty(CtrList.prototype, \"dataService\", {\n            set: /**\n             * @param {?} newService\n             * @return {?}\n             */\n            function (newService) {\n                this._dataService = newService;\n                this.dataServiceSubscribe();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(CtrList.prototype, \"initialValue\", {\n            set: /**\n             * @param {?} value\n             * @return {?}\n             */\n            function (value) {\n                var _this = this;\n                if (this._dataService && typeof this._dataService.convertToItem === \"function\") {\n                    this.zone.run(function () {\n                        /** @type {?} */\n                        var initialItem = _this._dataService && /** @type {?} */ ((_this._dataService.convertToItem))(value);\n                        if (initialItem) {\n                            _this.completer.onSelected(initialItem, false);\n                        }\n                    });\n                }\n                else if (!this._dataService) {\n                    this._initialValue = value;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} term\n         * @return {?}\n         */\n        CtrList.prototype.search = /**\n         * @param {?} term\n         * @return {?}\n         */\n        function (term) {\n            var _this = this;\n            if (!isNil(term) && term.length >= this.ctrListMinSearchLength && this.term !== term) {\n                if (this.searchTimer) {\n                    this.searchTimer.unsubscribe();\n                    this.searchTimer = null;\n                }\n                if (!this.ctx.searching) {\n                    if (this.ctrListDisplaySearching) {\n                        this.ctx.results = [];\n                    }\n                    this.ctx.searching = true;\n                    this.ctx.searchInitialized = true;\n                    this.refreshTemplate();\n                }\n                if (this.clearTimer) {\n                    this.clearTimer.unsubscribe();\n                }\n                this.searchTimer = timer(this.ctrListPause).pipe(operators.take(1)).subscribe(function () {\n                    _this.searchTimerComplete(term);\n                });\n            }\n            else if (!isNil(term) && term.length < this.ctrListMinSearchLength) {\n                this.clear();\n                this.term = \"\";\n            }\n        };\n        /**\n         * @return {?}\n         */\n        CtrList.prototype.clear = /**\n         * @return {?}\n         */\n        function () {\n            var _this = this;\n            if (this.searchTimer) {\n                this.searchTimer.unsubscribe();\n            }\n            this.clearTimer = timer(CLEAR_TIMEOUT).pipe(operators.take(1)).subscribe(function () {\n                _this._clear();\n            });\n        };\n        /**\n         * @return {?}\n         */\n        CtrList.prototype.open = /**\n         * @return {?}\n         */\n        function () {\n            if (!this.ctx.searchInitialized) {\n                this.search(\"\");\n            }\n            this.refreshTemplate();\n        };\n        /**\n         * @param {?} open\n         * @return {?}\n         */\n        CtrList.prototype.isOpen = /**\n         * @param {?} open\n         * @return {?}\n         */\n        function (open) {\n            this.ctx.isOpen = open;\n        };\n        /**\n         * @return {?}\n         */\n        CtrList.prototype._clear = /**\n         * @return {?}\n         */\n        function () {\n            if (this.searchTimer) {\n                this.searchTimer.unsubscribe();\n                this.searchTimer = null;\n            }\n            if (this.dataService) {\n                this.dataService.cancel();\n            }\n            this.viewContainer.clear();\n            this.viewRef = null;\n        };\n        /**\n         * @param {?} term\n         * @return {?}\n         */\n        CtrList.prototype.searchTimerComplete = /**\n         * @param {?} term\n         * @return {?}\n         */\n        function (term) {\n            // Begin the search\n            if (isNil(term) || term.length < this.ctrListMinSearchLength) {\n                this.ctx.searching = false;\n                return;\n            }\n            this.term = term;\n            if (this._dataService) {\n                this._dataService.search(term);\n            }\n        };\n        /**\n         * @return {?}\n         */\n        CtrList.prototype.refreshTemplate = /**\n         * @return {?}\n         */\n        function () {\n            // create the template if it doesn't exist\n            if (!this.viewRef) {\n                this.viewRef = this.viewContainer.createEmbeddedView(this.templateRef, this.ctx);\n            }\n            else if (!this.viewRef.destroyed) {\n                /** @type {?} */ ((\n                // refresh the template\n                this.viewRef)).context.isOpen = this.ctx.isOpen; /** @type {?} */\n                ((this.viewRef)).context.results = this.ctx.results; /** @type {?} */\n                ((this.viewRef)).context.searching = this.ctx.searching; /** @type {?} */\n                ((this.viewRef)).context.searchInitialized = this.ctx.searchInitialized;\n                this.viewRef.detectChanges();\n            }\n            this.cd.markForCheck();\n        };\n        /**\n         * @return {?}\n         */\n        CtrList.prototype.getBestMatchIndex = /**\n         * @return {?}\n         */\n        function () {\n            var _this = this;\n            if (!this.ctx.results || !this.term) {\n                return null;\n            }\n            /** @type {?} */\n            var bestMatch = this.ctx.results.findIndex(function (item) { return item.title.toLowerCase() === /** @type {?} */ ((_this.term)).toLocaleLowerCase(); });\n            // If not try to find the first item that starts with the term\n            if (bestMatch < 0) {\n                bestMatch = this.ctx.results.findIndex(function (item) { return item.title.toLowerCase().startsWith(/** @type {?} */ ((_this.term)).toLocaleLowerCase()); });\n            }\n            // If not try to find the first item that includes the term\n            if (bestMatch < 0) {\n                bestMatch = this.ctx.results.findIndex(function (item) { return item.title.toLowerCase().includes(/** @type {?} */ ((_this.term)).toLocaleLowerCase()); });\n            }\n            return bestMatch < 0 ? null : bestMatch;\n        };\n        /**\n         * @return {?}\n         */\n        CtrList.prototype.dataServiceSubscribe = /**\n         * @return {?}\n         */\n        function () {\n            var _this = this;\n            if (this._dataService) {\n                this._dataService\n                    .subscribe(function (results) {\n                    _this.ctx.searchInitialized = true;\n                    _this.ctx.searching = false;\n                    _this.ctx.results = results;\n                    if (_this.ctrListAutoMatch && results &&\n                        results.length === 1 && results[0].title &&\n                        !isNil(_this.term) &&\n                        results[0].title.toLocaleLowerCase() === /** @type {?} */ ((_this.term)).toLocaleLowerCase()) {\n                        // Do automatch\n                        // Do automatch\n                        _this.completer.onSelected(results[0]);\n                        return;\n                    }\n                    _this.refreshTemplate();\n                    if (_this.ctrListAutoHighlight) {\n                        _this.completer.autoHighlightIndex = _this.getBestMatchIndex();\n                    }\n                }, function (error) {\n                    console.error(error);\n                    console.error(\"Unexpected error in dataService: errors should be handled by the dataService Observable\");\n                    return [];\n                });\n                if (this._dataService.dataSourceChange) {\n                    this._dataService.dataSourceChange.subscribe(function () {\n                        _this.term = null;\n                        _this.ctx.searchInitialized = false;\n                        _this.ctx.searching = false;\n                        _this.ctx.results = [];\n                        _this.refreshTemplate();\n                        _this.completer.onDataSourceChange();\n                    });\n                }\n            }\n        };\n        CtrList.decorators = [\n            { type: core.Directive, args: [{\n                        selector: \"[ctrList]\",\n                    },] },\n        ];\n        /** @nocollapse */\n        CtrList.ctorParameters = function () { return [\n            { type: CtrCompleter, decorators: [{ type: core.Host }] },\n            { type: core.TemplateRef },\n            { type: core.ViewContainerRef },\n            { type: core.ChangeDetectorRef },\n            { type: core.NgZone }\n        ]; };\n        CtrList.propDecorators = {\n            ctrListMinSearchLength: [{ type: core.Input }],\n            ctrListPause: [{ type: core.Input }],\n            ctrListAutoMatch: [{ type: core.Input }],\n            ctrListAutoHighlight: [{ type: core.Input }],\n            ctrListDisplaySearching: [{ type: core.Input }],\n            dataService: [{ type: core.Input, args: [\"ctrList\",] }],\n            initialValue: [{ type: core.Input, args: [\"ctrListInitialValue\",] }]\n        };\n        return CtrList;\n    }());\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n     */\n    var CtrRow = /** @class */ (function () {\n        function CtrRow(el, renderer, dropdown) {\n            this.el = el;\n            this.renderer = renderer;\n            this.dropdown = dropdown;\n            this.selected = false;\n            this._rowIndex = 0;\n            this._item = null;\n        }\n        /**\n         * @return {?}\n         */\n        CtrRow.prototype.ngOnDestroy = /**\n         * @return {?}\n         */\n        function () {\n            if (this._rowIndex) {\n                this.dropdown.unregisterRow(this._rowIndex);\n            }\n        };\n        Object.defineProperty(CtrRow.prototype, \"ctrRow\", {\n            set: /**\n             * @param {?} index\n             * @return {?}\n             */\n            function (index) {\n                this._rowIndex = index;\n                this.dropdown.registerRow(new CtrRowItem(this, this._rowIndex));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(CtrRow.prototype, \"dataItem\", {\n            set: /**\n             * @param {?} item\n             * @return {?}\n             */\n            function (item) {\n                this._item = item;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} event\n         * @return {?}\n         */\n        CtrRow.prototype.onClick = /**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            this.dropdown.onSelected(this._item);\n        };\n        /**\n         * @param {?} event\n         * @return {?}\n         */\n        CtrRow.prototype.onMouseEnter = /**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            this.dropdown.highlightRow(this._rowIndex);\n        };\n        /**\n         * @param {?} event\n         * @return {?}\n         */\n        CtrRow.prototype.onMouseDown = /**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            this.dropdown.rowMouseDown();\n        };\n        /**\n         * @param {?} selected\n         * @return {?}\n         */\n        CtrRow.prototype.setHighlighted = /**\n         * @param {?} selected\n         * @return {?}\n         */\n        function (selected) {\n            this.selected = selected;\n            this.renderer.setElementClass(this.el.nativeElement, \"completer-selected-row\", this.selected);\n        };\n        /**\n         * @return {?}\n         */\n        CtrRow.prototype.getNativeElement = /**\n         * @return {?}\n         */\n        function () {\n            return this.el.nativeElement;\n        };\n        /**\n         * @return {?}\n         */\n        CtrRow.prototype.getDataItem = /**\n         * @return {?}\n         */\n        function () {\n            return this._item;\n        };\n        CtrRow.decorators = [\n            { type: core.Directive, args: [{\n                        selector: \"[ctrRow]\",\n                    },] },\n        ];\n        /** @nocollapse */\n        CtrRow.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: core.Renderer },\n            { type: CtrDropdown, decorators: [{ type: core.Host }] }\n        ]; };\n        CtrRow.propDecorators = {\n            ctrRow: [{ type: core.Input }],\n            dataItem: [{ type: core.Input }],\n            onClick: [{ type: core.HostListener, args: [\"click\", [\"$event\"],] }],\n            onMouseEnter: [{ type: core.HostListener, args: [\"mouseenter\", [\"$event\"],] }],\n            onMouseDown: [{ type: core.HostListener, args: [\"mousedown\", [\"$event\"],] }]\n        };\n        return CtrRow;\n    }());\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n     */\n    var CompleterListItemCmp = /** @class */ (function () {\n        function CompleterListItemCmp() {\n            this.text = \"\";\n            this.searchStr = \"\";\n            this.matchClass = \"\";\n            this.type = \"\";\n            this.parts = [];\n        }\n        /**\n         * @return {?}\n         */\n        CompleterListItemCmp.prototype.ngOnInit = /**\n         * @return {?}\n         */\n        function () {\n            if (!this.searchStr) {\n                this.parts.push({ isMatch: false, text: this.text });\n                return;\n            }\n            /** @type {?} */\n            var matchStr = this.text.toLowerCase();\n            /** @type {?} */\n            var matchPos = matchStr.indexOf(this.searchStr.toLowerCase());\n            /** @type {?} */\n            var startIndex = 0;\n            while (matchPos >= 0) {\n                /** @type {?} */\n                var matchText = this.text.slice(matchPos, matchPos + this.searchStr.length);\n                if (matchPos === 0) {\n                    this.parts.push({ isMatch: true, text: matchText });\n                    startIndex += this.searchStr.length;\n                }\n                else if (matchPos > 0) {\n                    /** @type {?} */\n                    var matchPart = this.text.slice(startIndex, matchPos);\n                    this.parts.push({ isMatch: false, text: matchPart });\n                    this.parts.push({ isMatch: true, text: matchText });\n                    startIndex += this.searchStr.length + matchPart.length;\n                }\n                matchPos = matchStr.indexOf(this.searchStr.toLowerCase(), startIndex);\n            }\n            if (startIndex < this.text.length) {\n                this.parts.push({ isMatch: false, text: this.text.slice(startIndex, this.text.length) });\n            }\n        };\n        CompleterListItemCmp.decorators = [\n            { type: core.Component, args: [{\n                        selector: \"completer-list-item\",\n                        template: \"<span class=\\\"completer-list-item-holder\\\" [ngClass]= \\\"{'completer-title': type === 'title', 'completer-description': type === 'description'}\\\" >\\n        <span class=\\\"completer-list-item\\\" *ngFor=\\\"let part of parts\\\" [ngClass]= \\\"part.isMatch ? matchClass : null\\\">{{part.text}}</span>\\n    </span>\"\n                    },] },\n        ];\n        CompleterListItemCmp.propDecorators = {\n            text: [{ type: core.Input }],\n            searchStr: [{ type: core.Input }],\n            matchClass: [{ type: core.Input }],\n            type: [{ type: core.Input }]\n        };\n        return CompleterListItemCmp;\n    }());\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n     */\n    /** @type {?} */\n    var noop$1 = function () {\n        return;\n    };\n    /** @type {?} */\n    var COMPLETER_CONTROL_VALUE_ACCESSOR = {\n        multi: true,\n        provide: forms.NG_VALUE_ACCESSOR,\n        useExisting: core.forwardRef(function () { return CompleterCmp; }),\n    };\n    var CompleterCmp = /** @class */ (function () {\n        function CompleterCmp(completerService, cdr) {\n            this.completerService = completerService;\n            this.cdr = cdr;\n            this.inputName = \"\";\n            this.inputId = \"\";\n            this.pause = PAUSE;\n            this.minSearchLength = MIN_SEARCH_LENGTH;\n            this.maxChars = MAX_CHARS;\n            this.overrideSuggested = false;\n            this.clearSelected = false;\n            this.clearUnselected = false;\n            this.fillHighlighted = true;\n            this.placeholder = \"\";\n            this.autoMatch = false;\n            this.disableInput = false;\n            this.autofocus = false;\n            this.openOnFocus = false;\n            this.openOnClick = false;\n            this.selectOnClick = false;\n            this.selectOnFocus = false;\n            this.autoHighlight = false;\n            this.selected = new core.EventEmitter();\n            this.highlighted = new core.EventEmitter();\n            this.blurEvent = new core.EventEmitter();\n            this.click = new core.EventEmitter();\n            this.focusEvent = new core.EventEmitter();\n            this.opened = new core.EventEmitter();\n            this.keyup = new core.EventEmitter();\n            this.keydown = new core.EventEmitter();\n            this.control = new forms.FormControl(\"\");\n            this.displaySearching = true;\n            this.displayNoResults = true;\n            this._textNoResults = TEXT_NO_RESULTS;\n            this._textSearching = TEXT_SEARCHING;\n            this._onTouchedCallback = noop$1;\n            this._onChangeCallback = noop$1;\n            this._focus = false;\n            this._open = false;\n            this._searchStr = \"\";\n        }\n        Object.defineProperty(CompleterCmp.prototype, \"value\", {\n            get: /**\n             * @return {?}\n             */\n            function () { return this.searchStr; },\n            set: /**\n             * @param {?} v\n             * @return {?}\n             */\n            function (v) {\n                if (v !== this.searchStr) {\n                    this.searchStr = v;\n                }\n                // Propagate the change in any case\n                this._onChangeCallback(v);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(CompleterCmp.prototype, \"searchStr\", {\n            get: /**\n             * @return {?}\n             */\n            function () {\n                return this._searchStr;\n            },\n            set: /**\n             * @param {?} value\n             * @return {?}\n             */\n            function (value) {\n                if (typeof value === \"string\" || isNil(value)) {\n                    this._searchStr = value;\n                }\n                else {\n                    this._searchStr = JSON.stringify(value);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        CompleterCmp.prototype.ngAfterViewInit = /**\n         * @return {?}\n         */\n        function () {\n            if (this.autofocus) {\n                this._focus = true;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        CompleterCmp.prototype.ngAfterViewChecked = /**\n         * @return {?}\n         */\n        function () {\n            var _this = this;\n            if (this._focus) {\n                setTimeout(function () {\n                    if (!!_this.ctrInput) {\n                        _this.ctrInput.nativeElement.focus();\n                        _this._focus = false;\n                    }\n                }, 0);\n            }\n        };\n        /**\n         * @return {?}\n         */\n        CompleterCmp.prototype.onTouched = /**\n         * @return {?}\n         */\n        function () {\n            this._onTouchedCallback();\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        CompleterCmp.prototype.writeValue = /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this.searchStr = value;\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        CompleterCmp.prototype.registerOnChange = /**\n         * @param {?} fn\n         * @return {?}\n         */\n        function (fn) {\n            this._onChangeCallback = fn;\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        CompleterCmp.prototype.registerOnTouched = /**\n         * @param {?} fn\n         * @return {?}\n         */\n        function (fn) {\n            this._onTouchedCallback = fn;\n        };\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        CompleterCmp.prototype.setDisabledState = /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        function (isDisabled) {\n            this.disableInput = isDisabled;\n        };\n        Object.defineProperty(CompleterCmp.prototype, \"datasource\", {\n            set: /**\n             * @param {?} source\n             * @return {?}\n             */\n            function (source) {\n                if (source) {\n                    if (source instanceof Array) {\n                        this.dataService = this.completerService.local(source);\n                    }\n                    else if (typeof (source) === \"string\") {\n                        this.dataService = this.completerService.remote(source);\n                    }\n                    else {\n                        this.dataService = /** @type {?} */ (source);\n                    }\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(CompleterCmp.prototype, \"textNoResults\", {\n            set: /**\n             * @param {?} text\n             * @return {?}\n             */\n            function (text) {\n                if (this._textNoResults !== text) {\n                    this._textNoResults = text;\n                    this.displayNoResults = !!this._textNoResults && this._textNoResults !== \"false\";\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(CompleterCmp.prototype, \"textSearching\", {\n            set: /**\n             * @param {?} text\n             * @return {?}\n             */\n            function (text) {\n                if (this._textSearching !== text) {\n                    this._textSearching = text;\n                    this.displaySearching = !!this._textSearching && this._textSearching !== \"false\";\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        CompleterCmp.prototype.ngOnInit = /**\n         * @return {?}\n         */\n        function () {\n            var _this = this;\n            if (!this.completer) {\n                return;\n            }\n            this.completer.selected.subscribe(function (item) {\n                _this.selected.emit(item);\n            });\n            this.completer.highlighted.subscribe(function (item) {\n                _this.highlighted.emit(item);\n            });\n            this.completer.opened.subscribe(function (isOpen) {\n                _this._open = isOpen;\n                _this.opened.emit(isOpen);\n            });\n        };\n        /**\n         * @return {?}\n         */\n        CompleterCmp.prototype.onBlur = /**\n         * @return {?}\n         */\n        function () {\n            this.blurEvent.emit();\n            this.onTouched();\n            this.cdr.detectChanges();\n        };\n        /**\n         * @return {?}\n         */\n        CompleterCmp.prototype.onFocus = /**\n         * @return {?}\n         */\n        function () {\n            this.focusEvent.emit();\n            this.onTouched();\n        };\n        /**\n         * @param {?} event\n         * @return {?}\n         */\n        CompleterCmp.prototype.onClick = /**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            this.click.emit(event);\n            this.onTouched();\n        };\n        /**\n         * @param {?} event\n         * @return {?}\n         */\n        CompleterCmp.prototype.onKeyup = /**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            this.keyup.emit(event);\n            event.stopPropagation();\n        };\n        /**\n         * @param {?} event\n         * @return {?}\n         */\n        CompleterCmp.prototype.onKeydown = /**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            this.keydown.emit(event);\n            event.stopPropagation();\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        CompleterCmp.prototype.onChange = /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this.value = value;\n        };\n        /**\n         * @return {?}\n         */\n        CompleterCmp.prototype.open = /**\n         * @return {?}\n         */\n        function () {\n            if (!this.completer) {\n                return;\n            }\n            this.completer.open();\n        };\n        /**\n         * @return {?}\n         */\n        CompleterCmp.prototype.close = /**\n         * @return {?}\n         */\n        function () {\n            if (!this.completer) {\n                return;\n            }\n            this.completer.clear();\n        };\n        /**\n         * @return {?}\n         */\n        CompleterCmp.prototype.focus = /**\n         * @return {?}\n         */\n        function () {\n            if (this.ctrInput) {\n                this.ctrInput.nativeElement.focus();\n            }\n            else {\n                this._focus = true;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        CompleterCmp.prototype.blur = /**\n         * @return {?}\n         */\n        function () {\n            if (this.ctrInput) {\n                this.ctrInput.nativeElement.blur();\n            }\n            else {\n                this._focus = false;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        CompleterCmp.prototype.isOpen = /**\n         * @return {?}\n         */\n        function () {\n            return this._open;\n        };\n        CompleterCmp.decorators = [\n            { type: core.Component, args: [{\n                        selector: \"ng2-completer\",\n                        template: \"\\n        <div class=\\\"completer-holder\\\" ctrCompleter>\\n            <input #ctrInput [attr.id]=\\\"inputId.length > 0 ? inputId : null\\\" type=\\\"search\\\"\\n                class=\\\"completer-input\\\" ctrInput [ngClass]=\\\"inputClass\\\"\\n                [(ngModel)]=\\\"searchStr\\\" (ngModelChange)=\\\"onChange($event)\\\"\\n                [attr.name]=\\\"inputName\\\" [placeholder]=\\\"placeholder\\\"\\n                [attr.maxlength]=\\\"maxChars\\\" [tabindex]=\\\"fieldTabindex\\\" [disabled]=\\\"disableInput\\\"\\n                [clearSelected]=\\\"clearSelected\\\" [clearUnselected]=\\\"clearUnselected\\\"\\n                [overrideSuggested]=\\\"overrideSuggested\\\" [openOnFocus]=\\\"openOnFocus\\\" [fillHighlighted]=\\\"fillHighlighted\\\"\\n                [openOnClick]=\\\"openOnClick\\\" [selectOnClick]=\\\"selectOnClick\\\" [selectOnFocus]=\\\"selectOnFocus\\\"\\n                (blur)=\\\"onBlur()\\\" (focus)=\\\"onFocus()\\\" (keyup)=\\\"onKeyup($event)\\\"\\n                (keydown)=\\\"onKeydown($event)\\\" (click)=\\\"onClick($event)\\\"\\n                autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" />\\n\\n            <div class=\\\"completer-dropdown-holder\\\"\\n                *ctrList=\\\"dataService;\\n                    minSearchLength: minSearchLength;\\n                    pause: pause;\\n                    autoMatch: autoMatch;\\n                    initialValue: initialValue;\\n                    autoHighlight: autoHighlight;\\n                    displaySearching: displaySearching;\\n                    let items = results;\\n                    let searchActive = searching;\\n                    let isInitialized = searchInitialized;\\n                    let isOpen = isOpen;\\\">\\n                <div class=\\\"completer-dropdown\\\" ctrDropdown \\n                    *ngIf=\\\"isInitialized && isOpen && (( items?.length > 0|| (displayNoResults && !searchActive)) || (searchActive && displaySearching))\\\">\\n                    <div *ngIf=\\\"searchActive && displaySearching\\\" class=\\\"completer-searching\\\">{{ _textSearching }}</div>\\n                    <div *ngIf=\\\"!searchActive && (!items || items?.length === 0)\\\"\\n                    class=\\\"completer-no-results\\\">{{ _textNoResults }}</div>\\n                    <div class=\\\"completer-row-wrapper\\\" *ngFor=\\\"let item of items; let rowIndex=index\\\">\\n                        <div class=\\\"completer-row\\\" [ctrRow]=\\\"rowIndex\\\" [dataItem]=\\\"item\\\">\\n                            <div *ngIf=\\\"item.image || item.image === ''\\\" class=\\\"completer-image-holder\\\">\\n                                <img *ngIf=\\\"item.image != ''\\\" src=\\\"{{item.image}}\\\" class=\\\"completer-image\\\" />\\n                                <div *ngIf=\\\"item.image === ''\\\" class=\\\"completer-image-default\\\"></div>\\n                            </div>\\n                            <div class=\\\"completer-item-text\\\"\\n                            [ngClass]=\\\"{'completer-item-text-image': item.image || item.image === '' }\\\">\\n                                <completer-list-item\\n                                class=\\\"completer-title\\\" [text]=\\\"item.title\\\" [matchClass]=\\\"matchClass\\\"\\n                                [searchStr]=\\\"searchStr\\\" [type]=\\\"'title'\\\"></completer-list-item>\\n                                <completer-list-item *ngIf=\\\"item.description && item.description != ''\\\"\\n                                class=\\\"completer-description\\\" [text]=\\\"item.description\\\"\\n                                    [matchClass]=\\\"matchClass\\\" [searchStr]=\\\"searchStr\\\" [type]=\\\"'description'\\\">\\n                                </completer-list-item>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    \",\n                        styles: [\"\\n    .completer-dropdown {\\n        border-color: #ececec;\\n        border-width: 1px;\\n        border-style: solid;\\n        border-radius: 2px;\\n        width: 250px;\\n        padding: 6px;\\n        cursor: pointer;\\n        z-index: 9999;\\n        position: absolute;\\n        margin-top: -6px;\\n        background-color: #ffffff;\\n    }\\n\\n    .completer-row {\\n        padding: 5px;\\n        color: #000000;\\n        margin-bottom: 4px;\\n        clear: both;\\n        display: inline-block;\\n        width: 103%;\\n    }\\n\\n    .completer-selected-row {\\n        background-color: lightblue;\\n        color: #ffffff;\\n    }\\n\\n    .completer-description {\\n        font-size: 14px;\\n    }\\n\\n    .completer-image-default {\\n        width: 16px;\\n        height: 16px;\\n        background-image: url(\\\"demo/res/img/default.png\\\");\\n    }\\n\\n    .completer-image-holder {\\n        float: left;\\n        width: 10%;\\n    }\\n    .completer-item-text-image {\\n        float: right;\\n        width: 90%;\\n    }\\n    \"],\n                        providers: [COMPLETER_CONTROL_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        CompleterCmp.ctorParameters = function () { return [\n            { type: CompleterService },\n            { type: core.ChangeDetectorRef }\n        ]; };\n        CompleterCmp.propDecorators = {\n            dataService: [{ type: core.Input }],\n            inputName: [{ type: core.Input }],\n            inputId: [{ type: core.Input }],\n            pause: [{ type: core.Input }],\n            minSearchLength: [{ type: core.Input }],\n            maxChars: [{ type: core.Input }],\n            overrideSuggested: [{ type: core.Input }],\n            clearSelected: [{ type: core.Input }],\n            clearUnselected: [{ type: core.Input }],\n            fillHighlighted: [{ type: core.Input }],\n            placeholder: [{ type: core.Input }],\n            matchClass: [{ type: core.Input }],\n            fieldTabindex: [{ type: core.Input }],\n            autoMatch: [{ type: core.Input }],\n            disableInput: [{ type: core.Input }],\n            inputClass: [{ type: core.Input }],\n            autofocus: [{ type: core.Input }],\n            openOnFocus: [{ type: core.Input }],\n            openOnClick: [{ type: core.Input }],\n            selectOnClick: [{ type: core.Input }],\n            selectOnFocus: [{ type: core.Input }],\n            initialValue: [{ type: core.Input }],\n            autoHighlight: [{ type: core.Input }],\n            selected: [{ type: core.Output }],\n            highlighted: [{ type: core.Output }],\n            blurEvent: [{ type: core.Output, args: [\"blur\",] }],\n            click: [{ type: core.Output }],\n            focusEvent: [{ type: core.Output, args: [\"focus\",] }],\n            opened: [{ type: core.Output }],\n            keyup: [{ type: core.Output }],\n            keydown: [{ type: core.Output }],\n            completer: [{ type: core.ViewChild, args: [CtrCompleter,] }],\n            ctrInput: [{ type: core.ViewChild, args: [\"ctrInput\",] }],\n            datasource: [{ type: core.Input }],\n            textNoResults: [{ type: core.Input }],\n            textSearching: [{ type: core.Input }]\n        };\n        return CompleterCmp;\n    }());\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n     */\n    /** @type {?} */\n    var providers = [\n        CompleterService,\n        LocalDataFactory,\n        RemoteDataFactory\n    ];\n    var Ng2CompleterModule = /** @class */ (function () {\n        function Ng2CompleterModule() {\n        }\n        /**\n         * @return {?}\n         */\n        Ng2CompleterModule.forRoot = /**\n         * @return {?}\n         */\n        function () {\n            return {\n                ngModule: Ng2CompleterModule,\n                providers: providers\n            };\n        };\n        /**\n         * @return {?}\n         */\n        Ng2CompleterModule.forChild = /**\n         * @return {?}\n         */\n        function () {\n            return {\n                ngModule: Ng2CompleterModule,\n                providers: providers\n            };\n        };\n        Ng2CompleterModule.decorators = [\n            { type: core.NgModule, args: [{\n                        declarations: [\n                            CompleterListItemCmp,\n                            CtrCompleter,\n                            CtrDropdown,\n                            CtrInput,\n                            CtrList,\n                            CtrRow,\n                            CompleterCmp\n                        ],\n                        exports: [\n                            CompleterListItemCmp,\n                            CtrCompleter,\n                            CtrDropdown,\n                            CtrInput,\n                            CtrList,\n                            CtrRow,\n                            CompleterCmp\n                        ],\n                        imports: [\n                            common.CommonModule,\n                            forms.FormsModule\n                        ],\n                        providers: providers\n                    },] },\n        ];\n        return Ng2CompleterModule;\n    }());\n\n    exports.LocalData = LocalData;\n    exports.RemoteData = RemoteData;\n    exports.LocalDataFactory = LocalDataFactory;\n    exports.RemoteDataFactory = RemoteDataFactory;\n    exports.CompleterService = CompleterService;\n    exports.CtrCompleter = CtrCompleter;\n    exports.CtrDropdown = CtrDropdown;\n    exports.CtrInput = CtrInput;\n    exports.CtrList = CtrList;\n    exports.CtrRow = CtrRow;\n    exports.CompleterListItemCmp = CompleterListItemCmp;\n    exports.CompleterCmp = CompleterCmp;\n    exports.Ng2CompleterModule = Ng2CompleterModule;\n    exports.ɵa = CtrListContext;\n    exports.ɵb = CompleterBaseData;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=ng2-completer.umd.js.map\n"]}